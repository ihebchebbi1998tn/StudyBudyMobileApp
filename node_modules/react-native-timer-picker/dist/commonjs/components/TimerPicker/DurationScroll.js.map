{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_generateNumbers","_colorToRgba","_getAdjustedLimit","_getScrollIndex","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_extends","assign","bind","target","arguments","length","source","key","apply","KEY_EXTRACTOR","_","index","toString","DurationScroll","forwardRef","numberOfItems","label","initialValue","onDurationChange","padNumbersWithZero","disableInfiniteScroll","limit","isDisabled","aggressivelyGetLatestDuration","allowFontScaling","is12HourPicker","amLabel","pmLabel","padWithNItems","pickerGradientOverlayProps","topPickerGradientOverlayProps","bottomPickerGradientOverlayProps","LinearGradient","testID","styles","ref","data","generateNumbers","repeatNTimes","generate12HourNumbers","numberOfItemsToShow","adjustedLimited","getAdjustedLimit","initialScrollIndex","getScrollIndex","value","latestDuration","useRef","flatListRef","useImperativeHandle","reset","options","_flatListRef$current","current","scrollToIndex","animated","setValue","_flatListRef$current2","renderItem","useCallback","item","stringItem","intItem","isAm","parseInt","includes","replace","createElement","View","style","pickerItemContainer","Text","pickerItem","max","min","disabledPickerItem","pickerAmPmContainer","pointerEvents","pickerAmPmLabel","onScroll","newIndex","Math","round","nativeEvent","contentOffset","y","height","newDuration","onMomentumScrollEnd","_flatListRef$current3","targetScrollIndex","_flatListRef$current4","onViewableItemsChanged","viewableItems","_viewableItems$","_viewableItems$2","_flatListRef$current5","_flatListRef$current6","getItemLayout","offset","viewabilityConfigCallbackPairs","viewabilityConfig","viewAreaCoveragePercentThreshold","undefined","overflow","disabledPickerContainer","FlatList","windowSize","keyExtractor","showsVerticalScrollIndicator","decelerationRate","scrollEventThrottle","snapToAlignment","scrollEnabled","snapToOffsets","Array","map","pickerLabelContainer","pickerLabel","Fragment","colors","pickerContainer","backgroundColor","colorToRgba","color","opacity","start","x","end","pickerGradientOverlay","top","bottom","_default","exports","React","memo"],"sources":["DurationScroll.tsx"],"sourcesContent":["import React, {\n    useRef,\n    useCallback,\n    forwardRef,\n    useImperativeHandle,\n    MutableRefObject,\n} from \"react\";\nimport {\n    View,\n    Text,\n    FlatList,\n    ViewabilityConfigCallbackPairs,\n    ViewToken,\n    NativeSyntheticEvent,\n    NativeScrollEvent,\n} from \"react-native\";\n\nimport {\n    generate12HourNumbers,\n    generateNumbers,\n} from \"../../utils/generateNumbers\";\nimport { colorToRgba } from \"../../utils/colorToRgba\";\nimport { generateStyles } from \"./TimerPicker.styles\";\nimport { getAdjustedLimit } from \"../../utils/getAdjustedLimit\";\nimport { getScrollIndex } from \"../../utils/getScrollIndex\";\n\nexport interface DurationScrollRef {\n    reset: (options?: { animated?: boolean }) => void;\n    setValue: (value: number, options?: { animated?: boolean }) => void;\n    latestDuration: MutableRefObject<number>;\n}\n\ntype LinearGradientPoint = {\n    x: number;\n    y: number;\n};\n\nexport type LinearGradientProps = React.ComponentProps<typeof View> & {\n    colors: string[];\n    locations?: number[] | null;\n    start?: LinearGradientPoint | null;\n    end?: LinearGradientPoint | null;\n};\n\nexport type LimitType = {\n    max?: number;\n    min?: number;\n};\n\ninterface DurationScrollProps {\n    allowFontScaling?: boolean;\n    numberOfItems: number;\n    label?: string | React.ReactElement;\n    initialValue?: number;\n    onDurationChange: (duration: number) => void;\n    padNumbersWithZero?: boolean;\n    disableInfiniteScroll?: boolean;\n    isDisabled?: boolean;\n    limit?: LimitType;\n    aggressivelyGetLatestDuration: boolean;\n    is12HourPicker?: boolean;\n    amLabel?: string;\n    pmLabel?: string;\n    padWithNItems: number;\n    pickerGradientOverlayProps?: Partial<LinearGradientProps>;\n    topPickerGradientOverlayProps?: Partial<LinearGradientProps>;\n    bottomPickerGradientOverlayProps?: Partial<LinearGradientProps>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LinearGradient?: any;\n    testID?: string;\n    styles: ReturnType<typeof generateStyles>;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst KEY_EXTRACTOR = (_: any, index: number) => index.toString();\n\nconst DurationScroll = forwardRef<DurationScrollRef, DurationScrollProps>(\n    (\n        {\n            numberOfItems,\n            label,\n            initialValue = 0,\n            onDurationChange,\n            padNumbersWithZero = false,\n            disableInfiniteScroll = false,\n            limit,\n            isDisabled,\n            aggressivelyGetLatestDuration,\n            allowFontScaling = false,\n            is12HourPicker,\n            amLabel,\n            pmLabel,\n            padWithNItems,\n            pickerGradientOverlayProps,\n            topPickerGradientOverlayProps,\n            bottomPickerGradientOverlayProps,\n            LinearGradient,\n            testID,\n            styles,\n        },\n        ref\n    ): React.ReactElement => {\n        const data = !is12HourPicker\n            ? generateNumbers(numberOfItems, {\n                  padNumbersWithZero,\n                  repeatNTimes: 3,\n                  disableInfiniteScroll,\n                  padWithNItems,\n              })\n            : generate12HourNumbers({\n                  padNumbersWithZero,\n                  repeatNTimes: 3,\n                  disableInfiniteScroll,\n                  padWithNItems,\n              });\n\n        const numberOfItemsToShow = 1 + padWithNItems * 2;\n\n        const adjustedLimited = getAdjustedLimit(limit, numberOfItems);\n\n        const initialScrollIndex = getScrollIndex({\n            value: initialValue,\n            numberOfItems,\n            padWithNItems,\n            disableInfiniteScroll,\n        });\n\n        const latestDuration = useRef(0);\n\n        const flatListRef = useRef<FlatList | null>(null);\n\n        useImperativeHandle(ref, () => ({\n            reset: (options) => {\n                flatListRef.current?.scrollToIndex({\n                    animated: options?.animated ?? false,\n                    index: initialScrollIndex,\n                });\n            },\n            setValue: (value, options) => {\n                flatListRef.current?.scrollToIndex({\n                    animated: options?.animated ?? false,\n                    index: getScrollIndex({\n                        value: value,\n                        numberOfItems,\n                        padWithNItems,\n                        disableInfiniteScroll,\n                    }),\n                });\n            },\n            latestDuration: latestDuration,\n        }));\n\n        const renderItem = useCallback(\n            ({ item }: { item: string }) => {\n                let stringItem = item;\n                let intItem: number;\n                let isAm: boolean | undefined;\n\n                if (!is12HourPicker) {\n                    intItem = parseInt(item);\n                } else {\n                    isAm = item.includes(\"AM\");\n                    stringItem = item.replace(/\\s[AP]M/g, \"\");\n                    intItem = parseInt(stringItem);\n                }\n\n                return (\n                    <View\n                        key={item}\n                        style={styles.pickerItemContainer}\n                        testID=\"picker-item\">\n                        <Text\n                            allowFontScaling={allowFontScaling}\n                            style={[\n                                styles.pickerItem,\n                                intItem > adjustedLimited.max ||\n                                intItem < adjustedLimited.min\n                                    ? styles.disabledPickerItem\n                                    : {},\n                            ]}>\n                            {stringItem}\n                        </Text>\n                        {is12HourPicker ? (\n                            <View\n                                style={styles.pickerAmPmContainer}\n                                pointerEvents=\"none\">\n                                <Text\n                                    style={[styles.pickerAmPmLabel]}\n                                    allowFontScaling={allowFontScaling}>\n                                    {isAm ? amLabel : pmLabel}\n                                </Text>\n                            </View>\n                        ) : null}\n                    </View>\n                );\n            },\n            [\n                adjustedLimited.max,\n                adjustedLimited.min,\n                allowFontScaling,\n                amLabel,\n                is12HourPicker,\n                pmLabel,\n                styles.disabledPickerItem,\n                styles.pickerAmPmContainer,\n                styles.pickerAmPmLabel,\n                styles.pickerItem,\n                styles.pickerItemContainer,\n            ]\n        );\n\n        const onScroll = useCallback(\n            (e: NativeSyntheticEvent<NativeScrollEvent>) => {\n                // this function is only used when the picker is in a modal\n                // it is used to ensure that the modal gets the latest duration on clicking\n                // the confirm button, even if the scrollview is still scrolling\n                const newIndex = Math.round(\n                    e.nativeEvent.contentOffset.y /\n                        styles.pickerItemContainer.height\n                );\n                let newDuration =\n                    (disableInfiniteScroll\n                        ? newIndex\n                        : newIndex + padWithNItems) %\n                    (numberOfItems + 1);\n\n                // check limits\n                if (newDuration > adjustedLimited.max) {\n                    newDuration = adjustedLimited.max;\n                } else if (newDuration < adjustedLimited.min) {\n                    newDuration = adjustedLimited.min;\n                }\n                latestDuration.current = newDuration;\n            },\n            [\n                adjustedLimited.max,\n                adjustedLimited.min,\n                disableInfiniteScroll,\n                numberOfItems,\n                padWithNItems,\n                styles.pickerItemContainer.height,\n            ]\n        );\n\n        const onMomentumScrollEnd = useCallback(\n            (e: NativeSyntheticEvent<NativeScrollEvent>) => {\n                const newIndex = Math.round(\n                    e.nativeEvent.contentOffset.y /\n                        styles.pickerItemContainer.height\n                );\n                let newDuration =\n                    (disableInfiniteScroll\n                        ? newIndex\n                        : newIndex + padWithNItems) %\n                    (numberOfItems + 1);\n\n                // check limits\n                if (newDuration > adjustedLimited.max) {\n                    const targetScrollIndex =\n                        newIndex - (newDuration - adjustedLimited.max);\n                    flatListRef.current?.scrollToIndex({\n                        animated: true,\n                        index:\n                            // guard against scrolling beyond end of list\n                            targetScrollIndex >= 0\n                                ? targetScrollIndex\n                                : adjustedLimited.max - 1,\n                    }); // scroll down to max\n                    newDuration = adjustedLimited.max;\n                } else if (newDuration < adjustedLimited.min) {\n                    const targetScrollIndex =\n                        newIndex + (adjustedLimited.min - newDuration);\n                    flatListRef.current?.scrollToIndex({\n                        animated: true,\n                        index:\n                            // guard against scrolling beyond end of list\n                            targetScrollIndex <= data.length - 1\n                                ? targetScrollIndex\n                                : adjustedLimited.min,\n                    }); // scroll up to min\n                    newDuration = adjustedLimited.min;\n                }\n\n                onDurationChange(newDuration);\n            },\n            [\n                adjustedLimited.max,\n                adjustedLimited.min,\n                data.length,\n                disableInfiniteScroll,\n                numberOfItems,\n                onDurationChange,\n                padWithNItems,\n                styles.pickerItemContainer.height,\n            ]\n        );\n\n        const onViewableItemsChanged = useCallback(\n            ({ viewableItems }: { viewableItems: ViewToken[] }) => {\n                if (\n                    viewableItems[0]?.index &&\n                    viewableItems[0].index < numberOfItems * 0.5\n                ) {\n                    flatListRef.current?.scrollToIndex({\n                        animated: false,\n                        index: viewableItems[0].index + numberOfItems,\n                    });\n                } else if (\n                    viewableItems[0]?.index &&\n                    viewableItems[0].index >= numberOfItems * 2.5\n                ) {\n                    flatListRef.current?.scrollToIndex({\n                        animated: false,\n                        index: viewableItems[0].index - numberOfItems,\n                    });\n                }\n            },\n            [numberOfItems]\n        );\n\n        const getItemLayout = useCallback(\n            (_: ArrayLike<string> | null | undefined, index: number) => ({\n                length: styles.pickerItemContainer.height,\n                offset: styles.pickerItemContainer.height * index,\n                index,\n            }),\n            [styles.pickerItemContainer.height]\n        );\n\n        const viewabilityConfigCallbackPairs =\n            useRef<ViewabilityConfigCallbackPairs>([\n                {\n                    viewabilityConfig: { viewAreaCoveragePercentThreshold: 25 },\n                    onViewableItemsChanged: onViewableItemsChanged,\n                },\n            ]);\n\n        return (\n            <View\n                testID={testID}\n                pointerEvents={isDisabled ? \"none\" : undefined}\n                style={[\n                    {\n                        height:\n                            styles.pickerItemContainer.height *\n                            numberOfItemsToShow,\n                        overflow: \"visible\",\n                    },\n                    isDisabled && styles.disabledPickerContainer,\n                ]}>\n                <FlatList\n                    ref={flatListRef}\n                    data={data}\n                    getItemLayout={getItemLayout}\n                    initialScrollIndex={initialScrollIndex}\n                    windowSize={numberOfItemsToShow}\n                    renderItem={renderItem}\n                    keyExtractor={KEY_EXTRACTOR}\n                    showsVerticalScrollIndicator={false}\n                    decelerationRate={0.88}\n                    scrollEventThrottle={16}\n                    snapToAlignment=\"start\"\n                    scrollEnabled={!isDisabled}\n                    // used in place of snapToOffset due to bug on Android\n                    snapToOffsets={[...Array(data.length)].map(\n                        (_, i) => i * styles.pickerItemContainer.height\n                    )}\n                    viewabilityConfigCallbackPairs={\n                        !disableInfiniteScroll\n                            ? viewabilityConfigCallbackPairs?.current\n                            : undefined\n                    }\n                    onMomentumScrollEnd={onMomentumScrollEnd}\n                    onScroll={\n                        aggressivelyGetLatestDuration ? onScroll : undefined\n                    }\n                    testID=\"duration-scroll-flatlist\"\n                />\n                <View style={styles.pickerLabelContainer} pointerEvents=\"none\">\n                    {typeof label === \"string\" ? (\n                        <Text\n                            allowFontScaling={allowFontScaling}\n                            style={styles.pickerLabel}>\n                            {label}\n                        </Text>\n                    ) : (\n                        label ?? null\n                    )}\n                </View>\n                {LinearGradient ? (\n                    <>\n                        <LinearGradient\n                            colors={[\n                                styles.pickerContainer.backgroundColor ??\n                                    \"white\",\n                                colorToRgba({\n                                    color:\n                                        styles.pickerContainer\n                                            .backgroundColor ?? \"white\",\n                                    opacity: 0,\n                                }),\n                            ]}\n                            start={{ x: 1, y: 0.3 }}\n                            end={{ x: 1, y: 1 }}\n                            pointerEvents=\"none\"\n                            {...pickerGradientOverlayProps}\n                            {...topPickerGradientOverlayProps}\n                            style={[styles.pickerGradientOverlay, { top: 0 }]}\n                        />\n                        <LinearGradient\n                            colors={[\n                                colorToRgba({\n                                    color:\n                                        styles.pickerContainer\n                                            .backgroundColor ?? \"white\",\n                                    opacity: 0,\n                                }),\n                                styles.pickerContainer.backgroundColor ??\n                                    \"white\",\n                            ]}\n                            start={{ x: 1, y: 0 }}\n                            end={{ x: 1, y: 0.7 }}\n                            pointerEvents=\"none\"\n                            {...pickerGradientOverlayProps}\n                            {...bottomPickerGradientOverlayProps}\n                            style={[\n                                styles.pickerGradientOverlay,\n                                { bottom: -1 },\n                            ]}\n                        />\n                    </>\n                ) : null}\n            </View>\n        );\n    }\n);\n\nexport default React.memo(DurationScroll);\n"],"mappings":"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"}