"use strict";

var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _reactNative2 = require("@testing-library/react-native");
var _Modal = _interopRequireDefault(require("../components/Modal"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
describe("Modal", () => {
  it("renders without crashing", () => {
    const {
      getByTestId
    } = (0, _reactNative2.render)( /*#__PURE__*/_react.default.createElement(_Modal.default, {
      isVisible: true
    }));
    const component = getByTestId("modal");
    expect(component).toBeDefined();
  });
  it("renders children when visible", () => {
    const {
      getByText
    } = (0, _reactNative2.render)( /*#__PURE__*/_react.default.createElement(_Modal.default, {
      isVisible: true
    }, /*#__PURE__*/_react.default.createElement(_reactNative.Text, null, "Modal Content")));
    const content = getByText("Modal Content");
    expect(content).toBeDefined();
  });
  it("calls onOverlayPress when overlay is pressed", () => {
    const onOverlayPressMock = jest.fn();
    const {
      getByTestId
    } = (0, _reactNative2.render)( /*#__PURE__*/_react.default.createElement(_Modal.default, {
      isVisible: true,
      onOverlayPress: onOverlayPressMock
    }));
    const overlay = getByTestId("modal-backdrop");
    _reactNative2.fireEvent.press(overlay);
    expect(onOverlayPressMock).toHaveBeenCalled();
  });

  // Add more test cases to cover different interactions, scenarios, and edge cases
});
//# sourceMappingURL=Modal.test.js.map