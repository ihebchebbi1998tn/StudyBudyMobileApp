{"version":3,"names":["_padNumber","require","generateNumbers","numberOfItems","options","numbers","i","push","padNumber","padWithZero","padNumbersWithZero","repeatNTimes","Array","fill","flat","disableInfiniteScroll","padWithNItems","unshift","exports","generate12HourNumbers","hour"],"sources":["generateNumbers.ts"],"sourcesContent":["import { padNumber } from \"./padNumber\";\n\nexport const generateNumbers = (\n    numberOfItems: number,\n    options: {\n        repeatNTimes?: number;\n        padNumbersWithZero?: boolean;\n        disableInfiniteScroll?: boolean;\n        padWithNItems: number;\n    }\n) => {\n    if (numberOfItems <= 0) {\n        return [];\n    }\n\n    let numbers: string[] = [];\n    for (let i = 0; i <= numberOfItems; i++) {\n        numbers.push(padNumber(i, { padWithZero: options.padNumbersWithZero }));\n    }\n\n    if ((options.repeatNTimes ?? 1) > 1) {\n        numbers = Array(options.repeatNTimes).fill(numbers).flat();\n    }\n    if (options.disableInfiniteScroll) {\n        numbers.push(...Array(options.padWithNItems).fill(\"\"));\n        numbers.unshift(...Array(options.padWithNItems).fill(\"\"));\n    }\n    return numbers;\n};\n\nexport const generate12HourNumbers = (options: {\n    repeatNTimes?: number;\n    padNumbersWithZero?: boolean;\n    disableInfiniteScroll?: boolean;\n    padWithNItems: number;\n}) => {\n    let numbers: string[] = [];\n\n    // Generate numbers from 0 to 11 for AM\n    for (let i = 0; i <= 11; i++) {\n        numbers.push(\n            `${padNumber(i, { padWithZero: options.padNumbersWithZero })} AM`\n        );\n    }\n\n    // Generate numbers from 12 to 11 for PM\n    for (let i = 12; i <= 23; i++) {\n        const hour = i > 12 ? i - 12 : i;\n        numbers.push(\n            `${padNumber(hour, { padWithZero: options.padNumbersWithZero })} PM`\n        );\n    }\n\n    if ((options.repeatNTimes ?? 1) > 1) {\n        numbers = Array(options.repeatNTimes).fill(numbers).flat();\n    }\n\n    if (options.disableInfiniteScroll) {\n        numbers.push(...Array(options.padWithNItems).fill(\"\"));\n        numbers.unshift(...Array(options.padWithNItems).fill(\"\"));\n    }\n\n    return numbers;\n};\n"],"mappings":";;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AAEO,MAAMC,eAAe,GAAGA,CAC3BC,aAAqB,EACrBC,OAKC,KACA;EACD,IAAID,aAAa,IAAI,CAAC,EAAE;IACpB,OAAO,EAAE;EACb;EAEA,IAAIE,OAAiB,GAAG,EAAE;EAC1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIH,aAAa,EAAEG,CAAC,EAAE,EAAE;IACrCD,OAAO,CAACE,IAAI,CAAC,IAAAC,oBAAS,EAACF,CAAC,EAAE;MAAEG,WAAW,EAAEL,OAAO,CAACM;IAAmB,CAAC,CAAC,CAAC;EAC3E;EAEA,IAAI,CAACN,OAAO,CAACO,YAAY,IAAI,CAAC,IAAI,CAAC,EAAE;IACjCN,OAAO,GAAGO,KAAK,CAACR,OAAO,CAACO,YAAY,CAAC,CAACE,IAAI,CAACR,OAAO,CAAC,CAACS,IAAI,CAAC,CAAC;EAC9D;EACA,IAAIV,OAAO,CAACW,qBAAqB,EAAE;IAC/BV,OAAO,CAACE,IAAI,CAAC,GAAGK,KAAK,CAACR,OAAO,CAACY,aAAa,CAAC,CAACH,IAAI,CAAC,EAAE,CAAC,CAAC;IACtDR,OAAO,CAACY,OAAO,CAAC,GAAGL,KAAK,CAACR,OAAO,CAACY,aAAa,CAAC,CAACH,IAAI,CAAC,EAAE,CAAC,CAAC;EAC7D;EACA,OAAOR,OAAO;AAClB,CAAC;AAACa,OAAA,CAAAhB,eAAA,GAAAA,eAAA;AAEK,MAAMiB,qBAAqB,GAAIf,OAKrC,IAAK;EACF,IAAIC,OAAiB,GAAG,EAAE;;EAE1B;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC1BD,OAAO,CAACE,IAAI,CACP,GAAE,IAAAC,oBAAS,EAACF,CAAC,EAAE;MAAEG,WAAW,EAAEL,OAAO,CAACM;IAAmB,CAAC,CAAE,KACjE,CAAC;EACL;;EAEA;EACA,KAAK,IAAIJ,CAAC,GAAG,EAAE,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC3B,MAAMc,IAAI,GAAGd,CAAC,GAAG,EAAE,GAAGA,CAAC,GAAG,EAAE,GAAGA,CAAC;IAChCD,OAAO,CAACE,IAAI,CACP,GAAE,IAAAC,oBAAS,EAACY,IAAI,EAAE;MAAEX,WAAW,EAAEL,OAAO,CAACM;IAAmB,CAAC,CAAE,KACpE,CAAC;EACL;EAEA,IAAI,CAACN,OAAO,CAACO,YAAY,IAAI,CAAC,IAAI,CAAC,EAAE;IACjCN,OAAO,GAAGO,KAAK,CAACR,OAAO,CAACO,YAAY,CAAC,CAACE,IAAI,CAACR,OAAO,CAAC,CAACS,IAAI,CAAC,CAAC;EAC9D;EAEA,IAAIV,OAAO,CAACW,qBAAqB,EAAE;IAC/BV,OAAO,CAACE,IAAI,CAAC,GAAGK,KAAK,CAACR,OAAO,CAACY,aAAa,CAAC,CAACH,IAAI,CAAC,EAAE,CAAC,CAAC;IACtDR,OAAO,CAACY,OAAO,CAAC,GAAGL,KAAK,CAACR,OAAO,CAACY,aAAa,CAAC,CAACH,IAAI,CAAC,EAAE,CAAC,CAAC;EAC7D;EAEA,OAAOR,OAAO;AAClB,CAAC;AAACa,OAAA,CAAAC,qBAAA,GAAAA,qBAAA"}