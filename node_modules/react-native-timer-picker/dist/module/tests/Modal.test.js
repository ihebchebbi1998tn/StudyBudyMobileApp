import React from "react";
import { Text } from "react-native";
import { render, fireEvent } from "@testing-library/react-native";
import Modal from "../components/Modal";
describe("Modal", () => {
  it("renders without crashing", () => {
    const {
      getByTestId
    } = render( /*#__PURE__*/React.createElement(Modal, {
      isVisible: true
    }));
    const component = getByTestId("modal");
    expect(component).toBeDefined();
  });
  it("renders children when visible", () => {
    const {
      getByText
    } = render( /*#__PURE__*/React.createElement(Modal, {
      isVisible: true
    }, /*#__PURE__*/React.createElement(Text, null, "Modal Content")));
    const content = getByText("Modal Content");
    expect(content).toBeDefined();
  });
  it("calls onOverlayPress when overlay is pressed", () => {
    const onOverlayPressMock = jest.fn();
    const {
      getByTestId
    } = render( /*#__PURE__*/React.createElement(Modal, {
      isVisible: true,
      onOverlayPress: onOverlayPressMock
    }));
    const overlay = getByTestId("modal-backdrop");
    fireEvent.press(overlay);
    expect(onOverlayPressMock).toHaveBeenCalled();
  });

  // Add more test cases to cover different interactions, scenarios, and edge cases
});
//# sourceMappingURL=Modal.test.js.map