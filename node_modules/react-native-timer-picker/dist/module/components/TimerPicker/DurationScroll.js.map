{"version":3,"names":["React","useRef","useCallback","forwardRef","useImperativeHandle","View","Text","FlatList","generate12HourNumbers","generateNumbers","colorToRgba","getAdjustedLimit","getScrollIndex","KEY_EXTRACTOR","_","index","toString","DurationScroll","numberOfItems","label","initialValue","onDurationChange","padNumbersWithZero","disableInfiniteScroll","limit","isDisabled","aggressivelyGetLatestDuration","allowFontScaling","is12HourPicker","amLabel","pmLabel","padWithNItems","pickerGradientOverlayProps","topPickerGradientOverlayProps","bottomPickerGradientOverlayProps","LinearGradient","testID","styles","ref","data","repeatNTimes","numberOfItemsToShow","adjustedLimited","initialScrollIndex","value","latestDuration","flatListRef","reset","options","_flatListRef$current","current","scrollToIndex","animated","setValue","_flatListRef$current2","renderItem","item","stringItem","intItem","isAm","parseInt","includes","replace","createElement","key","style","pickerItemContainer","pickerItem","max","min","disabledPickerItem","pickerAmPmContainer","pointerEvents","pickerAmPmLabel","onScroll","e","newIndex","Math","round","nativeEvent","contentOffset","y","height","newDuration","onMomentumScrollEnd","_flatListRef$current3","targetScrollIndex","_flatListRef$current4","length","onViewableItemsChanged","viewableItems","_viewableItems$","_viewableItems$2","_flatListRef$current5","_flatListRef$current6","getItemLayout","offset","viewabilityConfigCallbackPairs","viewabilityConfig","viewAreaCoveragePercentThreshold","undefined","overflow","disabledPickerContainer","windowSize","keyExtractor","showsVerticalScrollIndicator","decelerationRate","scrollEventThrottle","snapToAlignment","scrollEnabled","snapToOffsets","Array","map","i","pickerLabelContainer","pickerLabel","Fragment","_extends","colors","pickerContainer","backgroundColor","color","opacity","start","x","end","pickerGradientOverlay","top","bottom","memo"],"sources":["DurationScroll.tsx"],"sourcesContent":["import React, {\n    useRef,\n    useCallback,\n    forwardRef,\n    useImperativeHandle,\n    MutableRefObject,\n} from \"react\";\nimport {\n    View,\n    Text,\n    FlatList,\n    ViewabilityConfigCallbackPairs,\n    ViewToken,\n    NativeSyntheticEvent,\n    NativeScrollEvent,\n} from \"react-native\";\n\nimport {\n    generate12HourNumbers,\n    generateNumbers,\n} from \"../../utils/generateNumbers\";\nimport { colorToRgba } from \"../../utils/colorToRgba\";\nimport { generateStyles } from \"./TimerPicker.styles\";\nimport { getAdjustedLimit } from \"../../utils/getAdjustedLimit\";\nimport { getScrollIndex } from \"../../utils/getScrollIndex\";\n\nexport interface DurationScrollRef {\n    reset: (options?: { animated?: boolean }) => void;\n    setValue: (value: number, options?: { animated?: boolean }) => void;\n    latestDuration: MutableRefObject<number>;\n}\n\ntype LinearGradientPoint = {\n    x: number;\n    y: number;\n};\n\nexport type LinearGradientProps = React.ComponentProps<typeof View> & {\n    colors: string[];\n    locations?: number[] | null;\n    start?: LinearGradientPoint | null;\n    end?: LinearGradientPoint | null;\n};\n\nexport type LimitType = {\n    max?: number;\n    min?: number;\n};\n\ninterface DurationScrollProps {\n    allowFontScaling?: boolean;\n    numberOfItems: number;\n    label?: string | React.ReactElement;\n    initialValue?: number;\n    onDurationChange: (duration: number) => void;\n    padNumbersWithZero?: boolean;\n    disableInfiniteScroll?: boolean;\n    isDisabled?: boolean;\n    limit?: LimitType;\n    aggressivelyGetLatestDuration: boolean;\n    is12HourPicker?: boolean;\n    amLabel?: string;\n    pmLabel?: string;\n    padWithNItems: number;\n    pickerGradientOverlayProps?: Partial<LinearGradientProps>;\n    topPickerGradientOverlayProps?: Partial<LinearGradientProps>;\n    bottomPickerGradientOverlayProps?: Partial<LinearGradientProps>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LinearGradient?: any;\n    testID?: string;\n    styles: ReturnType<typeof generateStyles>;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst KEY_EXTRACTOR = (_: any, index: number) => index.toString();\n\nconst DurationScroll = forwardRef<DurationScrollRef, DurationScrollProps>(\n    (\n        {\n            numberOfItems,\n            label,\n            initialValue = 0,\n            onDurationChange,\n            padNumbersWithZero = false,\n            disableInfiniteScroll = false,\n            limit,\n            isDisabled,\n            aggressivelyGetLatestDuration,\n            allowFontScaling = false,\n            is12HourPicker,\n            amLabel,\n            pmLabel,\n            padWithNItems,\n            pickerGradientOverlayProps,\n            topPickerGradientOverlayProps,\n            bottomPickerGradientOverlayProps,\n            LinearGradient,\n            testID,\n            styles,\n        },\n        ref\n    ): React.ReactElement => {\n        const data = !is12HourPicker\n            ? generateNumbers(numberOfItems, {\n                  padNumbersWithZero,\n                  repeatNTimes: 3,\n                  disableInfiniteScroll,\n                  padWithNItems,\n              })\n            : generate12HourNumbers({\n                  padNumbersWithZero,\n                  repeatNTimes: 3,\n                  disableInfiniteScroll,\n                  padWithNItems,\n              });\n\n        const numberOfItemsToShow = 1 + padWithNItems * 2;\n\n        const adjustedLimited = getAdjustedLimit(limit, numberOfItems);\n\n        const initialScrollIndex = getScrollIndex({\n            value: initialValue,\n            numberOfItems,\n            padWithNItems,\n            disableInfiniteScroll,\n        });\n\n        const latestDuration = useRef(0);\n\n        const flatListRef = useRef<FlatList | null>(null);\n\n        useImperativeHandle(ref, () => ({\n            reset: (options) => {\n                flatListRef.current?.scrollToIndex({\n                    animated: options?.animated ?? false,\n                    index: initialScrollIndex,\n                });\n            },\n            setValue: (value, options) => {\n                flatListRef.current?.scrollToIndex({\n                    animated: options?.animated ?? false,\n                    index: getScrollIndex({\n                        value: value,\n                        numberOfItems,\n                        padWithNItems,\n                        disableInfiniteScroll,\n                    }),\n                });\n            },\n            latestDuration: latestDuration,\n        }));\n\n        const renderItem = useCallback(\n            ({ item }: { item: string }) => {\n                let stringItem = item;\n                let intItem: number;\n                let isAm: boolean | undefined;\n\n                if (!is12HourPicker) {\n                    intItem = parseInt(item);\n                } else {\n                    isAm = item.includes(\"AM\");\n                    stringItem = item.replace(/\\s[AP]M/g, \"\");\n                    intItem = parseInt(stringItem);\n                }\n\n                return (\n                    <View\n                        key={item}\n                        style={styles.pickerItemContainer}\n                        testID=\"picker-item\">\n                        <Text\n                            allowFontScaling={allowFontScaling}\n                            style={[\n                                styles.pickerItem,\n                                intItem > adjustedLimited.max ||\n                                intItem < adjustedLimited.min\n                                    ? styles.disabledPickerItem\n                                    : {},\n                            ]}>\n                            {stringItem}\n                        </Text>\n                        {is12HourPicker ? (\n                            <View\n                                style={styles.pickerAmPmContainer}\n                                pointerEvents=\"none\">\n                                <Text\n                                    style={[styles.pickerAmPmLabel]}\n                                    allowFontScaling={allowFontScaling}>\n                                    {isAm ? amLabel : pmLabel}\n                                </Text>\n                            </View>\n                        ) : null}\n                    </View>\n                );\n            },\n            [\n                adjustedLimited.max,\n                adjustedLimited.min,\n                allowFontScaling,\n                amLabel,\n                is12HourPicker,\n                pmLabel,\n                styles.disabledPickerItem,\n                styles.pickerAmPmContainer,\n                styles.pickerAmPmLabel,\n                styles.pickerItem,\n                styles.pickerItemContainer,\n            ]\n        );\n\n        const onScroll = useCallback(\n            (e: NativeSyntheticEvent<NativeScrollEvent>) => {\n                // this function is only used when the picker is in a modal\n                // it is used to ensure that the modal gets the latest duration on clicking\n                // the confirm button, even if the scrollview is still scrolling\n                const newIndex = Math.round(\n                    e.nativeEvent.contentOffset.y /\n                        styles.pickerItemContainer.height\n                );\n                let newDuration =\n                    (disableInfiniteScroll\n                        ? newIndex\n                        : newIndex + padWithNItems) %\n                    (numberOfItems + 1);\n\n                // check limits\n                if (newDuration > adjustedLimited.max) {\n                    newDuration = adjustedLimited.max;\n                } else if (newDuration < adjustedLimited.min) {\n                    newDuration = adjustedLimited.min;\n                }\n                latestDuration.current = newDuration;\n            },\n            [\n                adjustedLimited.max,\n                adjustedLimited.min,\n                disableInfiniteScroll,\n                numberOfItems,\n                padWithNItems,\n                styles.pickerItemContainer.height,\n            ]\n        );\n\n        const onMomentumScrollEnd = useCallback(\n            (e: NativeSyntheticEvent<NativeScrollEvent>) => {\n                const newIndex = Math.round(\n                    e.nativeEvent.contentOffset.y /\n                        styles.pickerItemContainer.height\n                );\n                let newDuration =\n                    (disableInfiniteScroll\n                        ? newIndex\n                        : newIndex + padWithNItems) %\n                    (numberOfItems + 1);\n\n                // check limits\n                if (newDuration > adjustedLimited.max) {\n                    const targetScrollIndex =\n                        newIndex - (newDuration - adjustedLimited.max);\n                    flatListRef.current?.scrollToIndex({\n                        animated: true,\n                        index:\n                            // guard against scrolling beyond end of list\n                            targetScrollIndex >= 0\n                                ? targetScrollIndex\n                                : adjustedLimited.max - 1,\n                    }); // scroll down to max\n                    newDuration = adjustedLimited.max;\n                } else if (newDuration < adjustedLimited.min) {\n                    const targetScrollIndex =\n                        newIndex + (adjustedLimited.min - newDuration);\n                    flatListRef.current?.scrollToIndex({\n                        animated: true,\n                        index:\n                            // guard against scrolling beyond end of list\n                            targetScrollIndex <= data.length - 1\n                                ? targetScrollIndex\n                                : adjustedLimited.min,\n                    }); // scroll up to min\n                    newDuration = adjustedLimited.min;\n                }\n\n                onDurationChange(newDuration);\n            },\n            [\n                adjustedLimited.max,\n                adjustedLimited.min,\n                data.length,\n                disableInfiniteScroll,\n                numberOfItems,\n                onDurationChange,\n                padWithNItems,\n                styles.pickerItemContainer.height,\n            ]\n        );\n\n        const onViewableItemsChanged = useCallback(\n            ({ viewableItems }: { viewableItems: ViewToken[] }) => {\n                if (\n                    viewableItems[0]?.index &&\n                    viewableItems[0].index < numberOfItems * 0.5\n                ) {\n                    flatListRef.current?.scrollToIndex({\n                        animated: false,\n                        index: viewableItems[0].index + numberOfItems,\n                    });\n                } else if (\n                    viewableItems[0]?.index &&\n                    viewableItems[0].index >= numberOfItems * 2.5\n                ) {\n                    flatListRef.current?.scrollToIndex({\n                        animated: false,\n                        index: viewableItems[0].index - numberOfItems,\n                    });\n                }\n            },\n            [numberOfItems]\n        );\n\n        const getItemLayout = useCallback(\n            (_: ArrayLike<string> | null | undefined, index: number) => ({\n                length: styles.pickerItemContainer.height,\n                offset: styles.pickerItemContainer.height * index,\n                index,\n            }),\n            [styles.pickerItemContainer.height]\n        );\n\n        const viewabilityConfigCallbackPairs =\n            useRef<ViewabilityConfigCallbackPairs>([\n                {\n                    viewabilityConfig: { viewAreaCoveragePercentThreshold: 25 },\n                    onViewableItemsChanged: onViewableItemsChanged,\n                },\n            ]);\n\n        return (\n            <View\n                testID={testID}\n                pointerEvents={isDisabled ? \"none\" : undefined}\n                style={[\n                    {\n                        height:\n                            styles.pickerItemContainer.height *\n                            numberOfItemsToShow,\n                        overflow: \"visible\",\n                    },\n                    isDisabled && styles.disabledPickerContainer,\n                ]}>\n                <FlatList\n                    ref={flatListRef}\n                    data={data}\n                    getItemLayout={getItemLayout}\n                    initialScrollIndex={initialScrollIndex}\n                    windowSize={numberOfItemsToShow}\n                    renderItem={renderItem}\n                    keyExtractor={KEY_EXTRACTOR}\n                    showsVerticalScrollIndicator={false}\n                    decelerationRate={0.88}\n                    scrollEventThrottle={16}\n                    snapToAlignment=\"start\"\n                    scrollEnabled={!isDisabled}\n                    // used in place of snapToOffset due to bug on Android\n                    snapToOffsets={[...Array(data.length)].map(\n                        (_, i) => i * styles.pickerItemContainer.height\n                    )}\n                    viewabilityConfigCallbackPairs={\n                        !disableInfiniteScroll\n                            ? viewabilityConfigCallbackPairs?.current\n                            : undefined\n                    }\n                    onMomentumScrollEnd={onMomentumScrollEnd}\n                    onScroll={\n                        aggressivelyGetLatestDuration ? onScroll : undefined\n                    }\n                    testID=\"duration-scroll-flatlist\"\n                />\n                <View style={styles.pickerLabelContainer} pointerEvents=\"none\">\n                    {typeof label === \"string\" ? (\n                        <Text\n                            allowFontScaling={allowFontScaling}\n                            style={styles.pickerLabel}>\n                            {label}\n                        </Text>\n                    ) : (\n                        label ?? null\n                    )}\n                </View>\n                {LinearGradient ? (\n                    <>\n                        <LinearGradient\n                            colors={[\n                                styles.pickerContainer.backgroundColor ??\n                                    \"white\",\n                                colorToRgba({\n                                    color:\n                                        styles.pickerContainer\n                                            .backgroundColor ?? \"white\",\n                                    opacity: 0,\n                                }),\n                            ]}\n                            start={{ x: 1, y: 0.3 }}\n                            end={{ x: 1, y: 1 }}\n                            pointerEvents=\"none\"\n                            {...pickerGradientOverlayProps}\n                            {...topPickerGradientOverlayProps}\n                            style={[styles.pickerGradientOverlay, { top: 0 }]}\n                        />\n                        <LinearGradient\n                            colors={[\n                                colorToRgba({\n                                    color:\n                                        styles.pickerContainer\n                                            .backgroundColor ?? \"white\",\n                                    opacity: 0,\n                                }),\n                                styles.pickerContainer.backgroundColor ??\n                                    \"white\",\n                            ]}\n                            start={{ x: 1, y: 0 }}\n                            end={{ x: 1, y: 0.7 }}\n                            pointerEvents=\"none\"\n                            {...pickerGradientOverlayProps}\n                            {...bottomPickerGradientOverlayProps}\n                            style={[\n                                styles.pickerGradientOverlay,\n                                { bottom: -1 },\n                            ]}\n                        />\n                    </>\n                ) : null}\n            </View>\n        );\n    }\n);\n\nexport default React.memo(DurationScroll);\n"],"mappings":"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"}