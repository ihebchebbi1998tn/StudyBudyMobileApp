{"_id":"hashids","_rev":"102-9574403b5e0a36604d7d0f1af1db2482","name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","dist-tags":{"latest":"2.3.0","next":"2.0.0-prerelease.4"},"versions":{"0.1.0":{"author":{"name":"Ivan Akimov","email":"ivan@grather.com","url":"http://hashids.org"},"name":"hashids","description":"A tiny JavaScript class to generate YouTube-like hashes from one or many ids.","version":"0.1.0","preferGlobal":true,"homepage":"http://hashids.org","repository":{"type":"git","url":"git://github.com/ivanakimov/hashids.js.git"},"main":"index.js","dependencies":{},"devDependencies":{},"optionalDependencies":{},"license":"MIT","engines":{"node":"*"},"_npmUser":{"name":"ivan","email":"ivan@grather.com"},"_id":"hashids@0.1.0","_engineSupported":true,"_npmVersion":"1.1.16","_nodeVersion":"v0.6.15","_defaultsLoaded":true,"dist":{"shasum":"6662d2e4d9142dd9c6689a5e93878854d58cb6ed","tarball":"https://registry.npmjs.org/hashids/-/hashids-0.1.0.tgz","integrity":"sha512-htEVg/lua62ZuF15ShjtEXCg6fQoOlN9ZnT17pN7QBHYjo3kmKjyZX3d2U9jK/mkxoZzuXJ8TJykYCL+fJUxLw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHWOLTP4E01nHthCztqIRtZeilV4sXSK5xKQZ5jV2mzQAiEAvv2ecIo3TNikPjNHzUGqoBgT/GI2jR/Ub064j22xjZU="}]},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"directories":{}},"0.1.1":{"author":{"name":"Ivan Akimov","email":"ivan@grather.com","url":"http://hashids.org"},"name":"hashids","description":"A tiny Node.js module to generate YouTube-like hashes from one or many ids.","version":"0.1.1","preferGlobal":true,"homepage":"http://hashids.org","repository":{"type":"git","url":"git://github.com/ivanakimov/hashids.js.git"},"main":"index.js","dependencies":{"crypto":""},"devDependencies":{},"optionalDependencies":{},"license":"MIT","keywords":["hashids","hash","ids","youtube"],"engines":{"node":"*"},"_npmUser":{"name":"ivan","email":"ivan@grather.com"},"_id":"hashids@0.1.1","_engineSupported":true,"_npmVersion":"1.1.16","_nodeVersion":"v0.6.15","_defaultsLoaded":true,"dist":{"shasum":"f26bc1eca56a301f88311f32ac7a0eabad1edf9d","tarball":"https://registry.npmjs.org/hashids/-/hashids-0.1.1.tgz","integrity":"sha512-Fg+xFip8610u3vhuzD0IxYqHMdQeyKwtadn0DvvLG6j6fB+5GdVZM+5dDz+FfgdRDX9iA5PFF8wILDgt8Fo/YQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDsEJbNghebuFrZ2N6aCjcRD9GrUtV30f3aGXSFOmJ7jAIgKMqYCg1wqcuBIyIO/lvjzyxDOVpk9fLLVLRUwI4aPO0="}]},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"directories":{}},"0.1.2":{"author":{"name":"Ivan Akimov","email":"ivan@grather.com","url":"https://twitter.com/ivanakimov"},"name":"hashids","description":"A small Node.js class to generate YouTube-like hashes from one or many numbers. Use hashids when you do not want to expose your database ids to the user. ","version":"0.1.2","preferGlobal":true,"homepage":"http://www.hashids.org/node-js/","repository":{"type":"git","url":"https://github.com/ivanakimov/hashids.node.js"},"main":"index.js","dependencies":{},"devDependencies":{},"optionalDependencies":{},"license":"MIT","keywords":["hashids","hash","ids","youtube"],"engines":{"node":"*"},"_id":"hashids@0.1.2","dist":{"shasum":"53a3481e3ea4c51734fa3528cf08e720c505ff37","tarball":"https://registry.npmjs.org/hashids/-/hashids-0.1.2.tgz","integrity":"sha512-zFwfIh7FTAnyVZ/Ikh9vjRah6WMW/RQ1cA9oucj78PovON92MpVm2V1NwJCWWbt+F1BUhisSyQ3Ba/qXclwG5A==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGEQwCY837aS9JRpkieKqHiIfPiDLuSRy1v4g8mjfvpOAiEAwUf93shJPjaAY1p8bk7nrBoXkGRy/v17rTfiRKHDDHU="}]},"_npmVersion":"1.1.59","_npmUser":{"name":"ivan","email":"ivan@grather.com"},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"directories":{}},"0.1.3":{"author":{"name":"Ivan Akimov","email":"ivan@grather.com","url":"https://twitter.com/ivanakimov"},"name":"hashids","description":"A small Node.js class to generate YouTube-like hashes from one or many numbers. Use hashids when you do not want to expose your database ids to the user. ","version":"0.1.3","preferGlobal":true,"homepage":"http://www.hashids.org/node-js/","repository":{"type":"git","url":"https://github.com/ivanakimov/hashids.node.js"},"main":"index.js","dependencies":{},"devDependencies":{},"optionalDependencies":{},"license":"MIT","keywords":["hashids","hash","ids","youtube"],"engines":{"node":"*"},"_id":"hashids@0.1.3","dist":{"shasum":"a1a4507487b49a0d9cf324d79d148d6476174fe3","tarball":"https://registry.npmjs.org/hashids/-/hashids-0.1.3.tgz","integrity":"sha512-22b7PX7ixZs8509vWE/KhbNYEc3S88U2+8jcKct6GfvpNDdSzTDdKI16479ojvU6c1DheNv0XvOPG4/USgDR6Q==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFyqnfsuvTVeUrk5b10fhENhyCnDcPsINM1zuBboDLIyAiEA8bXR5n3396g8XB9kt4Rf8DmIOoesDQQnUVwXMjlNQsE="}]},"_npmVersion":"1.1.59","_npmUser":{"name":"ivan","email":"ivan@grather.com"},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"directories":{}},"0.1.4":{"author":{"name":"Ivan Akimov","email":"ivan@grather.com","url":"https://twitter.com/ivanakimov"},"name":"hashids","description":"A small Node.js class to generate YouTube-like hashes from one or many numbers. Use hashids when you do not want to expose your database ids to the user. ","version":"0.1.4","preferGlobal":true,"homepage":"http://www.hashids.org/node-js/","repository":{"type":"git","url":"https://github.com/ivanakimov/hashids.node.js"},"main":"index.js","dependencies":{},"devDependencies":{},"optionalDependencies":{},"license":"MIT","keywords":["hashids","hash","ids","youtube"],"engines":{"node":"*"},"_id":"hashids@0.1.4","dist":{"shasum":"d97811a4e7af806b6380eb5dd2d1dd5851d5b7fd","tarball":"https://registry.npmjs.org/hashids/-/hashids-0.1.4.tgz","integrity":"sha512-ANmrnLfuan7B55h0PJN19cXJcP67yvD0GH5p/iY0k/kFOyglm05M1o/Q5K5WBhM0WtD27yoAOuJ4Z53vhmGtOQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHhqDj4OpoKYYkSZUBjMRlqL8m5RhoRDYf3mKhYm1oqcAiBopT339ffcrFaAQOf7+4VB0XOSaz3iGIM1QgLGmbKf8g=="}]},"_npmVersion":"1.1.59","_npmUser":{"name":"ivan","email":"ivan@grather.com"},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"directories":{}},"0.3.0":{"author":{"name":"Ivan Akimov","email":"ivan@grather.com","url":"https://twitter.com/ivanakimov"},"name":"hashids","description":"A small Node.js class to generate YouTube-like hashes from one or many numbers. Use hashids when you do not want to expose your database ids to the user. ","version":"0.3.0","preferGlobal":true,"homepage":"http://www.hashids.org/node-js/","repository":{"type":"git","url":"https://github.com/ivanakimov/hashids.node.js"},"main":"lib/hashids.js","dependencies":{},"devDependencies":{},"optionalDependencies":{},"license":"MIT","keywords":["hashids","hash","ids","youtube","obfuscate","encrypt","decrypt","encode"],"engines":{"node":"*"},"_id":"hashids@0.3.0","dist":{"shasum":"1beae4237f07053b2aba98ef43f431a58316478b","tarball":"https://registry.npmjs.org/hashids/-/hashids-0.3.0.tgz","integrity":"sha512-5ezResA7c/dLeDo5UbpVg8OzS7wVNhBXwj/rgGV8BSWiFfuZ9EXgjxYg8b8mN7XZ28p+RSkh9lJfMXIT6AoMtw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDB2+lZ9rI264HZ9Pv15NGVw4juDqk+ksxMC8NA1Yx1vAiBHRP9mwnQTrewesPUYIfoCDWgfhISE7yAxXN2EP7O2+g=="}]},"_npmVersion":"1.1.66","_npmUser":{"name":"ivan","email":"ivan@grather.com"},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"directories":{}},"0.3.1":{"author":{"name":"Ivan Akimov","email":"ivan@grather.com","url":"https://twitter.com/ivanakimov"},"name":"hashids","description":"A small Node.js class to generate YouTube-like hashes from one or many numbers. Use hashids when you do not want to expose your database ids to the user. ","version":"0.3.1","preferGlobal":true,"homepage":"http://www.hashids.org/node-js/","repository":{"type":"git","url":"https://github.com/ivanakimov/hashids.node.js"},"main":"lib/hashids.js","dependencies":{},"devDependencies":{},"optionalDependencies":{},"license":"MIT","keywords":["hashids","hash","ids","youtube","obfuscate","encrypt","decrypt","encode"],"engines":{"node":"*"},"bugs":{"url":"https://github.com/ivanakimov/hashids.node.js/issues"},"_id":"hashids@0.3.1","dist":{"shasum":"23186a8192bd39d7dccd6d01fc4e1c046040892c","tarball":"https://registry.npmjs.org/hashids/-/hashids-0.3.1.tgz","integrity":"sha512-hnWP6esRdMwECkusS0GxH++03qDVZUrNX27aRFzmzXp3Av0Wm+0Ng0H68nwvOSQ8RP89II+aDZA5xVnwzUVNFw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDuBN0cYKxJE4IGeNLkXFCkj7pqP3Hi0aoHzOyB/LFj8gIhAM3jQfg0Y4StOQEnXc/EIDulvUmhpYjwEzbE1VSoitAF"}]},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"ivan","email":"ivan@grather.com"},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"directories":{}},"0.3.2":{"author":{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/ivanakimov"},"name":"hashids","description":"A small Node.js class to generate YouTube-like hashes from one or many numbers. Use hashids when you do not want to expose your database ids to the user. ","version":"0.3.2","preferGlobal":true,"homepage":"http://www.hashids.org/node-js/","repository":{"type":"git","url":"https://github.com/ivanakimov/hashids.node.js"},"main":"lib/hashids.js","dependencies":{},"devDependencies":{},"optionalDependencies":{},"license":"MIT","keywords":["hashids","hash","ids","youtube","obfuscate","encrypt","decrypt","encode"],"engines":{"node":"*"},"bugs":{"url":"https://github.com/ivanakimov/hashids.node.js/issues"},"_id":"hashids@0.3.2","dist":{"shasum":"191b3deba7fb804908979f8a3f6b1f619c046d61","tarball":"https://registry.npmjs.org/hashids/-/hashids-0.3.2.tgz","integrity":"sha512-Du43SBjOY2HvQmASZU6zIuQ3HAahl8+wCL+b19m4fZGtEbXV0JvW7gnbtafR/Cb8m1zca3xlTUIv5ALhbLAxWA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCjjM/UDMt4h4gyOmnzadBCSCzOqqsO9RTC46o9+QTqoAIgU4X7BYFIZKITXNm998Rbq3O4tFZ/GZdlZWrzSCy7ISY="}]},"_from":".","_npmVersion":"1.3.11","_npmUser":{"name":"ivan","email":"ivan@grather.com"},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"directories":{}},"0.3.3":{"author":{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/ivanakimov"},"name":"hashids","description":"A small Node.js class to generate YouTube-like hashes from one or many numbers. Use hashids when you do not want to expose your database ids to the user. ","version":"0.3.3","preferGlobal":true,"homepage":"http://www.hashids.org/node-js/","repository":{"type":"git","url":"https://github.com/ivanakimov/hashids.node.js"},"main":"lib/hashids.js","dependencies":{},"devDependencies":{},"optionalDependencies":{},"license":"MIT","keywords":["hashids","hash","ids","youtube","obfuscate","encrypt","decrypt","encode"],"engines":{"node":"*"},"bugs":{"url":"https://github.com/ivanakimov/hashids.node.js/issues"},"_id":"hashids@0.3.3","dist":{"shasum":"6461777583080a591a2abb149f9b745c955740f4","tarball":"https://registry.npmjs.org/hashids/-/hashids-0.3.3.tgz","integrity":"sha512-WxKQh4Q/W2RIiFpSeJIOsJWOkhjtixeZZB3skH7ywskf7TvqjksL1O9Uv7E+7LkRok4NaERibJxeIaps0ZGDjA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDlkc51reNz8Ioki9s6LYnsrYzIMcAHVtsjQDzp7mGvagIgbMu8i5sPqZQuvkjOxoOOS8xnYx9eeSMoMLR9vCDWXB4="}]},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"ivan","email":"ivan@grather.com"},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"directories":{}},"1.0.0":{"author":{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},"name":"hashids","description":"A small Node.js class to generate YouTube-like hashids from one or many numbers. Use hashids when you do not want to expose your database ids to the user. ","version":"1.0.0","preferGlobal":true,"homepage":"http://hashids.org/node-js","repository":{"type":"git","url":"https://github.com/ivanakimov/hashids.node.js"},"main":"lib/hashids.js","dependencies":{},"devDependencies":{},"optionalDependencies":{},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","obfuscate","encrypt","decrypt","encode","decode"],"engines":{"node":"*"},"gitHead":"7324dbc4c06b936974a587a05c12c38d0789952e","bugs":{"url":"https://github.com/ivanakimov/hashids.node.js/issues"},"_id":"hashids@1.0.0","scripts":{},"_shasum":"5b69aa4a3d592d1158d443289b7ac57bbd6f7a00","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"ivan","email":"ivan@grather.com"},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"dist":{"shasum":"5b69aa4a3d592d1158d443289b7ac57bbd6f7a00","tarball":"https://registry.npmjs.org/hashids/-/hashids-1.0.0.tgz","integrity":"sha512-F2C7HZntEzljJu8h4CN7iw6YszEgbarGrPtOd3kh+S43nnj/Or4JUKlg3wZkmIVOQsIfX+Fa21jjXQ9BtMQSUQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCdtVHcc6OKvsXIz+CD4mbLG+seduKjYgY/+VWAc40B+QIhAM0IuqpQdm4EiUP4huSxYJfuMmk7ksNljcaoAu/ezrVV"}]},"directories":{}},"1.0.1":{"author":{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},"name":"hashids","description":"A small Node.js class to generate YouTube-like hashids from one or many numbers. Use hashids when you do not want to expose your database ids to the user. ","version":"1.0.1","preferGlobal":true,"homepage":"http://hashids.org/node-js","repository":{"type":"git","url":"https://github.com/ivanakimov/hashids.node.js"},"main":"lib/hashids.js","dependencies":{},"devDependencies":{},"optionalDependencies":{},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","obfuscate","encrypt","decrypt","encode","decode"],"engines":{"node":"*"},"gitHead":"9aa696a19179e61eaea509c5e52591dc6a148588","bugs":{"url":"https://github.com/ivanakimov/hashids.node.js/issues"},"_id":"hashids@1.0.1","scripts":{},"_shasum":"9c79b246fe62428a91e02a72b117e224c16179b0","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"ivan","email":"ivan@grather.com"},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"dist":{"shasum":"9c79b246fe62428a91e02a72b117e224c16179b0","tarball":"https://registry.npmjs.org/hashids/-/hashids-1.0.1.tgz","integrity":"sha512-d05H22xiQsodlNnMqIEhyc4iRmtIRZCwJT1C47nPx5qMQVznX+PqxDtO5D1rMvPDfTAvkAKpm0nut9FS+TjeUA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDwhYC/UN2mtr+rPKrWGP4pOMqAyij6ytA4EgcmBaUN5AIgXiEiM+ChSn+Y42aN9FYKEfU3TKiXgJluPGpvFcv7sQE="}]},"directories":{}},"1.0.2":{"author":{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},"name":"hashids","description":"A small Node.js class to generate YouTube-like hashids from one or many numbers. Use hashids when you do not want to expose your database ids to the user. ","version":"1.0.2","homepage":"http://hashids.org/node-js","repository":{"type":"git","url":"https://github.com/ivanakimov/hashids.node.js"},"main":"lib/hashids.js","dependencies":{},"devDependencies":{},"optionalDependencies":{},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encrypt","decrypt","encode","decode"],"engines":{"node":"*"},"gitHead":"dea95bab8276e8f6efcae331737de60371fde737","bugs":{"url":"https://github.com/ivanakimov/hashids.node.js/issues"},"_id":"hashids@1.0.2","scripts":{},"_shasum":"75a8145113e48dd00bf36b6b1d2a9d12e450d5a7","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"ivan","email":"ivan@grather.com"},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"dist":{"shasum":"75a8145113e48dd00bf36b6b1d2a9d12e450d5a7","tarball":"https://registry.npmjs.org/hashids/-/hashids-1.0.2.tgz","integrity":"sha512-7FWeHtKjxDJ1AZmj9iXNFGW7SUyKsHZmTMO/tjZyIL1idFHt1bStXw/QQpZ+dznp7Pw1FzixHtrZ2N/51KDi2Q==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDeDo25wSsns3ANwskxIlR6oyVoamKc+sIwDoUXDxAe0QIgQBGu9g2u3Ke+9W8rDc6C5F0sfSal0Y+F0IkuaUKiFF0="}]},"directories":{}},"1.1.0":{"author":{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","version":"1.1.0","homepage":"http://hashids.org/javascript","repository":{"type":"git","url":"git+https://github.com/ivanakimov/hashids.js.git"},"bugs":{"url":"https://github.com/ivanakimov/issues"},"main":"dist/hashids.js","scripts":{"lint":"eslint hashids.js tests","test":"mocha tests --compilers js:babel-core/register","coverage":"nyc npm test && nyc report --reporter=text-lcov | coveralls","build:node":"babel hashids.js -o dist/hashids.js","rename:global":"sed -i '' 's/global.hashids/global.Hashids/g' dist/hashids.js","minify":"uglifyjs dist/hashids.js -o dist/hashids.min.js --source-map dist/hashids.min.map --compress --mangle","build":"npm run test && npm run build:node && npm run rename:global && npm run minify","clean":"rm -rf coverage .nyc_output npm-debug.log","all":"npm run lint && npm run coverage && npm run build && npm run clean"},"dependencies":{},"devDependencies":{"babel-cli":"^6.10.1","babel-core":"^6.10.4","babel-plugin-add-module-exports":"^0.2.1","babel-plugin-transform-es2015-modules-umd":"^6.8.0","babel-preset-es2015":"^6.9.0","chai":"^3.5.0","coveralls":"^2.11.9","eslint":"^3.0.1","mocha":"^2.5.3","nyc":"^7.0.0","uglify-js":"^2.7.0"},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"gitHead":"785c6af76d3b5a63a85e4a0760172d9196620176","_id":"hashids@1.1.0","_shasum":"2e398a5fbe232a471a79787c61485ef2061985dd","_from":".","_npmVersion":"2.14.12","_nodeVersion":"4.3.2","_npmUser":{"name":"ivan","email":"ivan@barreleye.com"},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"dist":{"shasum":"2e398a5fbe232a471a79787c61485ef2061985dd","tarball":"https://registry.npmjs.org/hashids/-/hashids-1.1.0.tgz","integrity":"sha512-QV1wF41GRz587rhFHto3C6pM1dmd3/VFGe76N55KyQ+9iy6Kw1s4pE+EjWFRW6p3/qjJ027K6hUt8sfQtHHvAg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQD14S4Nk9fRMnoqomXkRJJHpZ7GWVRY8dnUBtL+2G59TAIhAOVlPHYWAHnMKJ1Gtkk2SZnvdAaCWs7xHfRcdqi3U7mR"}]},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/hashids-1.1.0.tgz_1468192406751_0.32665127655491233"},"directories":{}},"1.1.1":{"author":{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","version":"1.1.1","homepage":"http://hashids.org/javascript","repository":{"type":"git","url":"git+https://github.com/ivanakimov/hashids.js.git"},"bugs":{"url":"https://github.com/ivanakimov/hashids.js/issues"},"main":"dist/hashids.js","scripts":{"lint":"eslint lib tests","test":"mocha tests --compilers js:babel-core/register","coverage":"nyc npm test && nyc report --reporter=text-lcov | coveralls","build:node":"babel lib/hashids.js -o dist/hashids.js","rename:global":"sed -i '' 's/global.hashids/global.Hashids/g' dist/hashids.js","minify":"uglifyjs dist/hashids.js -o dist/hashids.min.js --source-map dist/hashids.min.map --compress --mangle","build":"npm run test && npm run build:node && npm run rename:global && npm run minify","clean":"rm -rf coverage .nyc_output npm-debug.log","all":"npm run lint && npm run coverage && npm run build && npm run clean"},"dependencies":{},"devDependencies":{"babel-cli":"^6.10.1","babel-core":"^6.10.4","babel-plugin-add-module-exports":"^0.2.1","babel-plugin-transform-es2015-modules-umd":"^6.8.0","babel-preset-es2015":"^6.9.0","chai":"^3.5.0","coveralls":"^2.11.9","eslint":"^3.0.1","mocha":"^2.5.3","nyc":"^7.0.0","uglify-js":"^2.7.0"},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"gitHead":"38e8975ecbbed956554ab8ed037f2d2c2549c293","_id":"hashids@1.1.1","_shasum":"3c36fcc5b3ba1a96a8fa67a632eb7877c41c6d3e","_from":".","_npmVersion":"2.14.12","_nodeVersion":"4.3.2","_npmUser":{"name":"ivan","email":"ivan@barreleye.com"},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"dist":{"shasum":"3c36fcc5b3ba1a96a8fa67a632eb7877c41c6d3e","tarball":"https://registry.npmjs.org/hashids/-/hashids-1.1.1.tgz","integrity":"sha512-FQONX10YRg88wfsnEcNII1sTZKYb17xOr2uHc92BEjM4mFbSWRGWBvLbPKKChTbtFmgGzj2glir5N/RXJC6qyQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQD8fobGSVPHqv7/Y36Wa5OC4wLttLnoxPG9qlNRSEa2aAIhAMpMKskqpUbH1wcs8AORhta0RY0bK3wgsrrsdXmxAz1C"}]},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/hashids-1.1.1.tgz_1472562886873_0.38658378180116415"},"directories":{}},"1.1.2":{"author":{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","version":"1.1.2","homepage":"http://hashids.org/javascript","repository":{"type":"git","url":"git+https://github.com/ivanakimov/hashids.js.git"},"bugs":{"url":"https://github.com/ivanakimov/hashids.js/issues"},"main":"dist/hashids.js","scripts":{"lint":"eslint lib tests","test":"mocha tests --compilers js:babel-core/register","coverage":"nyc npm test && nyc report --reporter=text-lcov | coveralls","build:node":"babel lib/hashids.js -o dist/hashids.js","rename:global":"sed -i '' 's/global.hashids/global.Hashids/g' dist/hashids.js","minify":"cd dist && uglifyjs hashids.js -o hashids.min.js --source-map hashids.min.map --compress --mangle","build":"npm run test && npm run build:node && npm run rename:global && npm run minify","clean":"rm -rf coverage .nyc_output npm-debug.log","all":"npm run lint && npm run coverage && npm run build && npm run clean"},"dependencies":{},"devDependencies":{"babel-cli":"^6.10.1","babel-core":"^6.10.4","babel-plugin-add-module-exports":"^0.2.1","babel-plugin-transform-es2015-modules-umd":"^6.8.0","babel-preset-es2015":"^6.9.0","chai":"^3.5.0","coveralls":"^2.11.9","eslint":"^3.0.1","mocha":"^2.5.3","nyc":"^7.0.0","uglify-js":"^2.7.0"},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"gitHead":"aaa5a9875115b18c65418f848ccb495b2817a7b8","_id":"hashids@1.1.2","_npmVersion":"5.3.0","_nodeVersion":"8.6.0","_npmUser":{"name":"ivan","email":"ivan@barreleye.com"},"dist":{"integrity":"sha512-vEmaZaj5mTdcYuhxplrm3isX3zY02TgmssOcSvDchZLPW3iDq+sVorBrzY2mdonlB5cs9tMcqrv87tbo12AeqQ==","shasum":"4f4f22c6bed8b9b6718c579b810aa4e603cf5a01","tarball":"https://registry.npmjs.org/hashids/-/hashids-1.1.2.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICJZwFYZQPIEDwLB72ocF8dR2yM45CDwM/ArAbK4mEhpAiAnzhL1fyazvNxBMjCQ3uMQogOwZaUo0cH9FWtcgwVLPA=="}]},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hashids-1.1.2.tgz_1507751451793_0.7209123561624438"},"directories":{}},"1.1.3":{"author":{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","version":"1.1.3","homepage":"http://hashids.org/javascript","repository":{"type":"git","url":"git+https://github.com/ivanakimov/hashids.js.git"},"bugs":{"url":"https://github.com/ivanakimov/hashids.js/issues"},"main":"dist/hashids.js","scripts":{"lint":"eslint lib tests","test":"mocha tests --compilers js:babel-core/register","coverage":"nyc npm test && nyc report --reporter=text-lcov | coveralls","build:node":"babel lib/hashids.js -o dist/hashids.js","rename:global":"sed -i '' 's/global.hashids/global.Hashids/g' dist/hashids.js","minify":"cd dist && uglifyjs hashids.js -o hashids.min.js --source-map hashids.min.map --compress --mangle","build":"npm run test && npm run build:node && npm run rename:global && npm run minify","clean":"rm -rf coverage .nyc_output npm-debug.log","all":"npm run lint && npm run coverage && npm run build && npm run clean"},"dependencies":{},"devDependencies":{"babel-cli":"^6.10.1","babel-core":"^6.10.4","babel-plugin-add-module-exports":"^0.2.1","babel-plugin-transform-es2015-modules-umd":"^6.8.0","babel-preset-es2015":"^6.9.0","chai":"^3.5.0","coveralls":"^2.11.9","eslint":"^3.0.1","mocha":"^2.5.3","nyc":"^7.0.0","uglify-js":"^2.7.0"},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"gitHead":"5e9aed64641026bf6f06ecdfceaa6a53b19425fd","_id":"hashids@1.1.3","_npmVersion":"5.3.0","_nodeVersion":"8.6.0","_npmUser":{"name":"ivan","email":"ivan@barreleye.com"},"dist":{"integrity":"sha512-Mq1ZlET9I2ajurbEmnMbEenwJ0PevD+NbqLnBjxGbkfmTq7DBihd2IEGccvkmwSWyUYPbniZapxgW2oNtatdvw==","shasum":"65f674d61cbb8b0568f586650ad30b7887d2aae4","tarball":"https://registry.npmjs.org/hashids/-/hashids-1.1.3.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDIoPXEp9JfnLQSytAVZ95h3AGSOFdDWT4HVKuG+BfZMgIhAKPCInCgdUeQkzKozI19yQudWP26eF6WZLQdCuhjNWrm"}]},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hashids-1.1.3.tgz_1509840653582_0.7842850971501321"},"directories":{}},"1.1.4":{"author":{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","version":"1.1.4","homepage":"http://hashids.org/javascript","repository":{"type":"git","url":"git+https://github.com/ivanakimov/hashids.js.git"},"bugs":{"url":"https://github.com/ivanakimov/hashids.js/issues"},"main":"dist/hashids.js","scripts":{"lint":"eslint lib tests","test":"mocha tests --compilers js:babel-core/register","coverage":"nyc npm test && nyc report --reporter=text-lcov | coveralls","build:node":"babel lib/hashids.js -o dist/hashids.js","rename:global":"sed -i '' 's/global.hashids/global.Hashids/g' dist/hashids.js","minify":"cd dist && uglifyjs hashids.js -o hashids.min.js --source-map hashids.min.map --compress --mangle","build":"npm run test && npm run build:node && npm run rename:global && npm run minify","clean":"rm -rf coverage .nyc_output npm-debug.log","all":"npm run lint && npm run coverage && npm run build && npm run clean"},"dependencies":{},"devDependencies":{"babel-cli":"^6.10.1","babel-core":"^6.10.4","babel-plugin-add-module-exports":"^0.2.1","babel-plugin-transform-es2015-modules-umd":"^6.8.0","babel-preset-es2015":"^6.9.0","chai":"^3.5.0","coveralls":"^2.11.9","eslint":"^3.0.1","mocha":"^2.5.3","nyc":"^7.0.0","uglify-js":"^2.7.0"},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"gitHead":"d208f522ffdd2356655911b90274a625e2262c0a","_id":"hashids@1.1.4","_npmVersion":"5.3.0","_nodeVersion":"8.6.0","_npmUser":{"name":"ivan","email":"ivan@barreleye.com"},"dist":{"integrity":"sha512-U/fnTE3edW0AV92ZI/BfEluMZuVcu3MDOopsN7jS+HqDYcarQo8rXQiWlsBlm0uX48/taYSdxRsfzh2HRg5Z6w==","shasum":"e4ff92ad66b684a3bd6aace7c17d66618ee5fa21","tarball":"https://registry.npmjs.org/hashids/-/hashids-1.1.4.tgz","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGqHWDIu4fRzJLJOxGY9zjJMiusRDoMJf1I+Ik6FsAUfAiEA+gPE+Iwv0i4l2flCaYBKU+mXlMLdSHFxqkmrqe6Gn/Y="}]},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hashids-1.1.4.tgz_1509841089975_0.07181882043369114"},"directories":{}},"1.2.0":{"author":{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","version":"1.2.0","homepage":"http://hashids.org/javascript","repository":{"type":"git","url":"git+https://github.com/ivanakimov/hashids.js.git"},"bugs":{"url":"https://github.com/ivanakimov/hashids.js/issues"},"main":"dist/hashids","module":"dist/hashids-esm","browser":"dist/hashids.min","scripts":{"precommit":"npm run lint && npm run test","lint":"eslint lib tests","test":"mocha tests --require @babel/register","coverage":"nyc npm test && nyc report --reporter=text-lcov | coveralls","build:node":"babel lib/hashids.js --source-maps -o dist/index.js","build:modules":"BABEL_MODULES=1 babel lib/hashids.js --source-maps -o dist/hashids.mjs && cp dist/hashids.mjs dist/hashids-esm.js","rename:global":"sed -i '' 's/global.hashids/global.Hashids/g' dist/index.js","minify":"cd dist && uglifyjs index.js -o hashids.min.js --source-map \"url=hashids.min.js.map\" --compress --mangle","build":"npm run test && npm run build:node && npm run build:modules && npm run rename:global && npm run minify","clean":"rm -rf coverage .nyc_output npm-debug.log","all":"npm run lint && npm run coverage && npm run build && npm run clean"},"browserslist":["last 2 version","> 0.5%","maintained node versions","not dead"],"dependencies":{},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","@babel/preset-env":"^7.0.0","@babel/register":"^7.0.0","chai":"^4.1.2","coveralls":"^3.0.2","eslint":"^5.4.0","husky":"^0.14.3","mocha":"^5.2.0","nyc":"^13.0.1","uglify-js":"^3.4.8"},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"gitHead":"e8586c60c9b0a15af52b19405d08d7070fb68228","_id":"hashids@1.2.0","_npmVersion":"5.6.0","_nodeVersion":"8.6.0","_npmUser":{"name":"ivan","email":"ivan@barreleye.com"},"dist":{"integrity":"sha512-cCpyTk6eFWaT1W1q5XgnkmoL+CHSfVfOI00bmFIsHz9WRGetuz6JhiZ1q5E2oRZjdC0HCLm9KrK0XiWn84JLqg==","shasum":"94d20800d53b8b476b2019faf8627723eec3cc61","tarball":"https://registry.npmjs.org/hashids/-/hashids-1.2.0.tgz","fileCount":28,"unpackedSize":107412,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbnUc1CRA9TVsSAnZWagAAW7AP/jW2X6IlG+y7JLeOk4Or\n9G8R8mftnmtPdPhyZN/ByXJlLBVL0EcWBPxlCPLMg7lF7Fqw6jt8Z0lCmgLa\n0zhOXuIB100Zhya2lZLDQDlOmFWzA+uSICx3gaLnptbPlJe09XDl3xDTgnlG\nGYohNn7VQ6zeJdXmLmo0EIPetCx9azW0+S5JuJCy+il+cxGC0d8eATqhPeg9\neIyoSp4T+CpjiqnSW/RLZng9+ZqEqwqwleY5lZygyffcrbKPXOHEZ4/izkJV\nCXEAQxrXXsJQMc+O3Lu4fjIWVwke6rLoc8/kXKg1sbv0/Pf7h2cgChaaB60p\nJgFIiFmHHpXAIlvt4/zyFPxfqj9NUHtK+dwonZ6xLdeeCrIPxvxT2ibKTMlW\n9ietXXpG7w8pG88pid2JnHCGPzQccEVCrL3mTxB0dCyvtzIxB/fFK/z1Vhm1\nJFaKn5aLbZBwWxA/0/m4Zsa26vJWCHN/FWj7PvWFKr1t6vxuy9amfapJ7wTU\nctXVpK/n2x9iRwUKiSTynW7XlmraybvG0qtXjZOR10moAmwXFx0wdj8tF74e\nWPKqq0YQKC+orFn4IwnkGiTPPXGsiDL+bWF6Swn3DUrZ9z0k70t6DLwlBftB\nuJJ1nD/fRnjgHtUmSQdASD+2zthZDWyUnds1XiR039vz/9EDZiSixPDpy7kh\nvHt/\r\n=6OzS\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCAVH2B+Gj/pH6r83rbKSgbhSKbco/J9mkcHb6bfB/HvwIgAK8HRr6GfBPXXJ3XC0/qz6sEx5NA/D8sgL3uZJUonvM="}]},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hashids_1.2.0_1537034036722_0.2044081378487983"},"_hasShrinkwrap":false},"1.2.1":{"author":{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","version":"1.2.1","homepage":"http://hashids.org/javascript","repository":{"type":"git","url":"git+https://github.com/ivanakimov/hashids.js.git"},"bugs":{"url":"https://github.com/ivanakimov/hashids.js/issues"},"main":"dist/hashids","module":"dist/hashids-esm","browser":"dist/hashids.min","scripts":{"precommit":"npm run lint && npm run test","lint":"eslint lib tests","test":"mocha tests --require @babel/register","coverage":"nyc npm test && nyc report --reporter=text-lcov | coveralls","build:node":"babel lib/hashids.js --source-maps -o dist/index.js","build:modules":"BABEL_MODULES=1 babel lib/hashids.js --source-maps -o dist/hashids.mjs && cp dist/hashids.mjs dist/hashids-esm.js","rename:global":"sed -i '' 's/global.hashids/global.Hashids/g' dist/index.js","minify":"cd dist && uglifyjs index.js -o hashids.min.js --source-map \"url=hashids.min.js.map\" --compress --mangle","build":"npm run test && npm run build:node && npm run build:modules && npm run rename:global && npm run minify","clean":"rm -rf coverage .nyc_output npm-debug.log","all":"npm run lint && npm run coverage && npm run build && npm run clean"},"browserslist":["last 2 version","> 0.5%","maintained node versions","not dead"],"dependencies":{},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","@babel/preset-env":"^7.0.0","@babel/register":"^7.0.0","chai":"^4.1.2","coveralls":"^3.0.2","eslint":"^5.4.0","husky":"^0.14.3","mocha":"^5.2.0","nyc":"^13.0.1","uglify-js":"^3.4.8"},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"gitHead":"da67465417b71ca2efbebd3481f6b9e2f0a745d2","_id":"hashids@1.2.1","_npmVersion":"5.6.0","_nodeVersion":"8.6.0","_npmUser":{"name":"ivan","email":"ivan@barreleye.com"},"dist":{"integrity":"sha512-U/cqtcPIC8oVnXBYWLrqGLB0R0YU+1BgXcITHPhHaejbnankACOHuuoVceq2WLQUQZFVgAqzDq/Dm/E6Vxu01A==","shasum":"b19d9c9eebca73c393f6e6df25929ca0771a92e2","tarball":"https://registry.npmjs.org/hashids/-/hashids-1.2.1.tgz","fileCount":28,"unpackedSize":107507,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbnqn3CRA9TVsSAnZWagAAaKcQAISoawxPSvEuqnoEyCJq\nt19OAnQnC319stSYKqJlnflKdyCyYZkTufgdSyVumURn8XZ5DlCyqTlC9cs9\nluwb81vaZr4KBL+j6Cch/A2iP/IcWxRkseUsybsQ8tfRxmlFIc+lubCa9Nvj\nytlu15Oc60wG4FvwkSsiroJwSS5bYunLTDZ6UW0CdTsTTX5ofU0aRRGfAZGU\nF8YCmhVtCED+VGvGuj3wiPnPlMXrIQrKbeSXtoCJ/RDQYsv1bKGrCLqoR4QT\nc/WPTD/OKHoquPj4GKv0aUNh8dLkNqWT5mY1vnnzeJFop7TKoisMDyq40Zn3\nHxJVCswzsqfGRk962dsahgfmpke+/a6bRDV+gXi3o2BG8N5YWGyCuTKVp/HZ\n1TzP9+/KM+Zkd1p2F98wo54LdsKXlxsEthKnIvVOT0l/RxhPj+SPdnfvTPL+\n+hQeMxRjoCcZHSNtRa+WQABfZSYkBPZTN1V40Ws4l9MBizihzSwsgDcp6BvE\nCbGvW994PouKXOOmtur6qJSqS25epIle9FYVAFnZ2mYwflGFh+ZR1ig8rPyb\nwD2xpC3AvUv0RzquFLkbU02C8iyQgn5emZLoYJYOoKesM3iH7KJUpG90iWbk\nXLz9vqwVeQAl9ESmT0119TmVXwNTUpJRSERZLnW6Zb5mMHPvN5QcAYO0HQ1K\n5i2G\r\n=NDuo\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCeqK1Dw48D5OgJwH6PuaLUnUaRyOujiPfPFHOcXs7mlgIgPE2Q24ifo0mnOqAevTv2UBrqGLEWrjPyVcvH/Iby/zg="}]},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hashids_1.2.1_1537124854523_0.4273447181683525"},"_hasShrinkwrap":false},"1.2.2":{"author":{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","version":"1.2.2","homepage":"http://hashids.org/javascript","repository":{"type":"git","url":"git+https://github.com/ivanakimov/hashids.js.git"},"bugs":{"url":"https://github.com/ivanakimov/hashids.js/issues"},"main":"dist/hashids","module":"dist/hashids-esm","browser":"dist/hashids.min","scripts":{"precommit":"npm run lint && npm run test","lint":"eslint lib tests","test":"mocha tests --require @babel/register","test-modules":"node --experimental-modules node_modules/mocha/bin/_mocha tests-mjs","coverage":"nyc npm test && nyc report --reporter=text-lcov | coveralls","build:node":"babel lib/hashids.js --source-maps -o dist/index.js","build:modules":"BABEL_MODULES=1 babel lib/hashids.js --source-maps -o dist/hashids.mjs && cp dist/hashids.mjs dist/hashids-esm.js","rename:global":"sed -i '' 's/global.hashids/global.Hashids/g' dist/index.js","minify":"cd dist && uglifyjs index.js -o hashids.min.js --source-map \"url=hashids.min.js.map\" --compress --mangle","build":"npm run test && npm run build:node && npm run build:modules && npm run rename:global && npm run minify","clean":"rm -rf coverage .nyc_output npm-debug.log","all":"npm run lint && npm run coverage && npm run build && npm run clean"},"browserslist":["last 2 version","> 0.5%","maintained node versions","not dead"],"dependencies":{},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","@babel/plugin-syntax-dynamic-import":"7.0.0","@babel/preset-env":"^7.0.0","@babel/register":"^7.0.0","babel-eslint":"9.0.0","chai":"^4.1.2","coveralls":"^3.0.2","eslint":"^5.4.0","husky":"^0.14.3","mocha":"^5.2.0","nyc":"^13.0.1","uglify-js":"^3.4.8"},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"gitHead":"d637de9eb46acdadae8759c1c83f155cc894a573","_id":"hashids@1.2.2","_npmVersion":"5.6.0","_nodeVersion":"8.6.0","_npmUser":{"name":"ivan","email":"ivan@barreleye.com"},"dist":{"integrity":"sha512-dEHCG2LraR6PNvSGxosZHIRgxF5sNLOIBFEHbj8lfP9WWmu/PWPMzsip1drdVSOFi51N2pU7gZavrgn7sbGFuw==","shasum":"28635c7f2f7360ba463686078eee837479e8eafb","tarball":"https://registry.npmjs.org/hashids/-/hashids-1.2.2.tgz","fileCount":31,"unpackedSize":109994,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJboBgiCRA9TVsSAnZWagAAyVQQAI27ilb+LwK9Og51kqrK\n6Zr5D9X+z0C9oab5zhgB1Xml7rd13PrZvxiC/+04CVtQaL9D2OPsCbNKEcWC\nWmDJCXUazZjZUxv0djcLebYSyKlWmn6hrq413YiM14MtxoOnyW7Vu8FndKZb\nhFbHSzxS5aUsst+6UletyLC+ZVhLzRUgJkqjQrRb5RtQLTMb50wdmiNZGRpL\nfksCmy+D4/OY6iebJcYcgy/IyWlmqG0IXQgSMWUKRhVuWjsfmp0P8SVEaaf/\nRpXCMV3xLuCKYlaaLFmD3gpiRgDi1nVcqlPjUnlKJrJxhEnC+G1dVU/t6yK/\nE7wFZ7RUPA/lW2o7qCnlS5OKR3S/7CUr2+7H1lrAo7Aw8SX3g1jMiv9D6e0O\n1QI/n4TTrgt0VszuqghYsxUrov028M3KTO+Yiy/S6BAE+nF+LKuXjJkb2d/7\nsfKf1o1mrOWON64M5M46+aVunp5YiSifajYQ0IgP9JDQH1XC10oKJ1NtM2gw\nicOSkTAlduOI7n5bh6Sss+Jo+uLmUINmruixl4CGWvXfKkBN/LYqSjs8EUhV\n1WtqqOQHlAZc9VTYYxa18Nb3lkQX5BNXxByffXGQfSTX8q/CG6MXhY3l5gOt\nW20J7PQU1XSfDXkTdN+PoNed+hcAcpHHskoo4sXdJTJhNpr+gUGWXT5DWeeP\nL7bM\r\n=8rSn\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCFf3CMmz/H23959oWS7xyGiujeWUMv63xr/9TSYUzAzQIgZUI99iusSrePilMRXQjWEYCcKS6IMwh0EBnf2GQNFcA="}]},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hashids_1.2.2_1537218593288_0.2776130558417007"},"_hasShrinkwrap":false},"2.0.0-prerelease.2":{"author":{"name":"hashids.org","email":"npm@invent.life","url":"https://github.com/hashids"},"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","contributors":[{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},{"name":"Bazyli Brzóska","email":"npm@invent.life","url":"https://twitter.com/niieani"}],"version":"2.0.0-prerelease.2","homepage":"http://hashids.org/javascript","repository":{"type":"git","url":"git+https://github.com/niieani/hashids.js.git"},"bugs":{"url":"https://github.com/niieani/hashids.js/issues"},"main":"dist/hashids.mjs","module":"dist/hashids.mjs","browser":"dist/hashids.min","scripts":{"lint":"eslint lib/* tests/*","prettier:check":"prettier --check lib/* tests*/*","prettier:write":"prettier --write lib/* tests*/*","test":"jest","coverage":"jest --coverage && cat coverage/lcov.info | coveralls","build:umd":"babel lib/hashids.ts --source-maps -o dist/hashids.js","build:modules":"BABEL_MODULES=1 babel lib/hashids.ts --source-maps -o dist/hashids.mjs","minify":"cd dist && uglifyjs hashids.js -o hashids.min.js --source-map \"url=hashids.min.js.map\" --compress --mangle","build":"yarn run build:umd && yarn run build:modules && yarn run minify","clean":"rm -rf coverage yarn-debug.log","all":"yarn run lint && yarn run coverage && yarn run build && yarn run clean","semantic-release":"semantic-release"},"husky":{"hooks":{"pre-commit":"yarn run lint && yarn run test"}},"browserslist":["last 2 version","> 0.5%","maintained node versions","not dead"],"dependencies":{},"devDependencies":{"@babel/cli":"^7.5.5","@babel/core":"^7.5.5","@babel/plugin-syntax-bigint":"^7.4.4","@babel/preset-env":"^7.5.5","@babel/preset-typescript":"^7.3.3","@babel/register":"^7.5.5","@types/jest":"^24.0.17","@types/node":"^12.7.1","@typescript-eslint/eslint-plugin":"^2.0.0","@typescript-eslint/parser":"^2.0.0","babel-eslint":"^10.0.2","coveralls":"^3.0.6","eslint":"^6.1.0","eslint-config-prettier":"^6.0.0","eslint-plugin-eslint-comments":"^3.1.2","eslint-plugin-import":"^2.18.2","eslint-plugin-jest":"^22.15.1","expect":"^24.8.0","husky":"^3.0.3","jest":"^24.8.0","prettier":"^1.18.2","semantic-release":"^16.0.0-beta.22","typescript":"^3.5.3","uglify-js":"^3.4.8"},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"prettier":{"semi":false,"tabWidth":2,"singleQuote":true,"trailingComma":"all","arrowParens":"always","bracketSpacing":false},"jest":{"collectCoverageFrom":["lib/**/*.ts"]},"gitHead":"efa6f273acc31539d954fd21b93cb7822abe1267","readme":"[![hashids](http://hashids.org/public/img/hashids.gif 'Hashids')](http://hashids.org/)\n\n[![Build Status][travis-image]][travis-url]\n[![Coveralls Status][coveralls-image]][coveralls-url]\n[![NPM downloads][npm-downloads-image]][npm-url]\n[![NPM version][npm-version-image]][npm-url]\n[![License][license-image]][license-url]\n[![Chat][chat-image]][chat-url]\n\n**Hashids** is small JavaScript library to generate YouTube-like ids from numbers. Use it when you don't want to expose your database ids to the user: [http://hashids.org/javascript](http://hashids.org/javascript)\n\n## Getting started\n\nInstall Hashids via:\n\n- [node.js](https://nodejs.org): `yarn add hashids`\n- [bower](http://bower.io/): `bower install hashids`\n- [jam](http://jamjs.org/): `jam install hashids`\n\n(or just use the code at `dist/hashids.js`)\n\nUse in ESM-compatible environments (webpack, modern browsers):\n\n```javascript\nimport Hashids from 'hashids'\nconst hashids = new Hashids()\n\nconsole.log(hashids.encode(1))\n```\n\nUse in Node.js:\n\n```javascript\nconst Hashids = require('hashids/cjs')\nconst hashids = new Hashids()\n\nconsole.log(hashids.encode(1))\n```\n\nUse in the browser without ESM (wherever ES5 is supported; 5KB):\n\n```javascript\n<script type=\"text/javascript\" src=\"hashids.min.js\"></script>\n<script type=\"text/javascript\">\n\n    var hashids = new Hashids();\n    console.log(hashids.encode(1));\n\n</script>\n```\n\n## Quick example\n\n```javascript\nconst hashids = new Hashids()\n\nconst id = hashids.encode(1, 2, 3) // o2fXhV\nconst numbers = hashids.decode(id) // [1, 2, 3]\n```\n\n## More options\n\n**A few more ways to pass to `encode()`:**\n\n```javascript\nconst hashids = new Hashids()\n\nconsole.log(hashids.encode(1, 2, 3)) // o2fXhV\nconsole.log(hashids.encode([1, 2, 3])) // o2fXhV\n// strings containing integers are coerced to numbers:\nconsole.log(hashids.encode('1', '2', '3')) // o2fXhV\nconsole.log(hashids.encode(['1', '2', '3'])) // o2fXhV\n// BigInt support:\nconsole.log(hashids.encode([1n, 2n, 3n])) // o2fXhV\n// Hex notation BigInt:\nconsole.log(hashids.encode([0x1n, 0x2n, 0x3n])) // o2fXhV\n```\n\n**Make your ids unique:**\n\nPass a \"salt\" to make your ids unique (e.g. a project name):\n\n```javascript\nvar hashids = new Hashids('My Project')\nconsole.log(hashids.encode(1, 2, 3)) // Z4UrtW\n\nvar hashids = new Hashids('My Other Project')\nconsole.log(hashids.encode(1, 2, 3)) // gPUasb\n```\n\n**Use padding to make your ids longer:**\n\nNote that ids are only padded to fit **at least** a certain length. It doesn't mean that your ids will be _exactly_ that length.\n\n```javascript\nconst hashids = new Hashids() // no padding\nconsole.log(hashids.encode(1)) // jR\n\nconst hashids = new Hashids('', 10) // pad to length 10\nconsole.log(hashids.encode(1)) // VolejRejNm\n```\n\n**Pass a custom alphabet:**\n\n```javascript\nconst hashids = new Hashids('', 0, 'abcdefghijklmnopqrstuvwxyz') // all lowercase\nconsole.log(hashids.encode(1, 2, 3)) // mdfphx\n```\n\nDefault alphabet is `abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890`.\n\nSince v2.0 you can even use emojis as the alphabet.\n\n**Encode hex instead of numbers:**\n\nUseful if you want to encode numbers like [Mongo](https://www.mongodb.com/)'s ObjectIds.\n\nNote that there is _no_ limit on how large of a hex number you can pass.\n\n```javascript\nvar hashids = new Hashids()\n\nvar id = hashids.encodeHex('507f1f77bcf86cd799439011') // y42LW46J9luq3Xq9XMly\nvar hex = hashids.decodeHex(id) // 507f1f77bcf86cd799439011\n```\n\nPlease note that this is not the equivalent of:\n\n```javascript\nconst hashids = new Hashids()\n\nconst id = Hashids.encode(BigInt('0x507f1f77bcf86cd799439011')) // y8qpJL3ZgzJ8lWk4GEV\nconst hex = Hashids.decode(id)[0].toString(16) // 507f1f77bcf86cd799439011\n```\n\nThe difference between the two is that the built-in `encodeHex` will\nalways result in the same length, even if it contained leading zeros.\n\nFor example `hashids.encodeHex('00000000') would encode to`qExOgK7`and decode back to`'00000000'` (length information is preserved).\n\n## Pitfalls\n\n1. When decoding, output is always an array of numbers (even if you encode only one number):\n\n   ```javascript\n   const hashids = new Hashids()\n\n   const id = hashids.encode(1)\n   console.log(hashids.decode(id)) // [1]\n   ```\n\n2. Encoding negative numbers is not supported.\n3. If you pass bogus input to `encode()`, an empty string will be returned:\n\n   ```javascript\n   const hashids = new Hashids()\n\n   const id = hashids.encode('123a')\n   console.log(id === '') // true\n   ```\n\n4. Do not use this library as a security tool and do not encode sensitive data. This is **not** an encryption library.\n\n## Randomness\n\nThe primary purpose of Hashids is to obfuscate ids. It's not meant or tested to be used as a security or compression tool. Having said that, this algorithm does try to make these ids random and unpredictable:\n\nNo repeating patterns showing there are 3 identical numbers in the id:\n\n```javascript\nconst hashids = new Hashids()\nconsole.log(hashids.encode(5, 5, 5)) // A6t1tQ\n```\n\nSame with incremented numbers:\n\n```javascript\nconst hashids = new Hashids()\n\nconsole.log(hashids.encode(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) // wpfLh9iwsqt0uyCEFjHM\n\nconsole.log(hashids.encode(1)) // jR\nconsole.log(hashids.encode(2)) // k5\nconsole.log(hashids.encode(3)) // l5\nconsole.log(hashids.encode(4)) // mO\nconsole.log(hashids.encode(5)) // nR\n```\n\n## Curses! #\\$%@\n\nThis code was written with the intent of placing created ids in visible places, like the URL. Therefore, the algorithm tries to avoid generating most common English curse words by generating ids that never have the following letters next to each other:\n\n    c, f, h, i, s, t, u\n\n## BigInt\n\nIf your environment supports `BigInt`, you can use the standard API\nto encode and decode them the same way as ordinary numbers.\n\nTrying to decode a `BigInt`-encoded hashid on an unsupported environment will throw an error.\n\n## License\n\nMIT License. See the [LICENSE](LICENSE) file.\nYou can use Hashids in open source projects and commercial products.\nDon't break the Internet. Kthxbye.\n\n[travis-url]: https://travis-ci.org/niieani/hashids.js\n[travis-image]: https://travis-ci.org/niieani/hashids.js.svg\n[coveralls-url]: https://coveralls.io/github/niieani/hashids.js\n[coveralls-image]: https://coveralls.io/repos/github/niieani/hashids.js/badge.svg\n[npm-downloads-image]: https://img.shields.io/npm/dm/hashids.svg?style=flat-square\n[npm-version-image]: https://img.shields.io/npm/v/hashids.svg\n[npm-url]: https://www.npmjs.com/package/hashids\n[license-url]: https://github.com/niieani/hashids.js/blob/master/LICENSE\n[license-image]: https://img.shields.io/packagist/l/hashids/hashids.svg?style=flat\n[chat-url]: https://gitter.im/hashids/hashids?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n[chat-image]: https://badges.gitter.im/Join%20Chat.svg\n","readmeFilename":"README.md","_id":"hashids@2.0.0-prerelease.2","_npmVersion":"6.5.0","_nodeVersion":"12.8.1","_npmUser":{"name":"niieani","email":"npm@invent.life"},"dist":{"integrity":"sha512-5ckMT8MOQKtUGkiXGAI5OuFNSQ1f3uQXJ6c5MykmGuRCaxMWakCj1qLhhFIjhvlbhHQIdREYNUJG/a1R3S1IrA==","shasum":"5983581242bd4a7240f7759c6e94c1d3e6c11041","tarball":"https://registry.npmjs.org/hashids/-/hashids-2.0.0-prerelease.2.tgz","fileCount":38,"unpackedSize":483925,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdVcc0CRA9TVsSAnZWagAA3V8P/3iJvyBFF5xTG8ZvS94s\nhoMkB1Pa5C/UsGICZDcrKo4uXgnAwaBgR0wVvnMh1fyzNTGvo/zx9K/BdYqL\niRkAP6nA/+X7wivHEy8K2o+D29Qt29zImPFQHl1vR808D4JDDvT7XKbjVxVT\nXH0KNH1p24D0JU1xnJFKCMQKl5LEcyMFohimBGzD38JPxj2J0R2QucUUcYAF\nKC8O8Lrdz9Xo11NwzVXELAlJnNo/gsH+KLHNz+mfvwnjvXj7548s0Q5rC2ZK\nQaj40uI3WncO+vyZS4c+npYuhiATZL7tIk5ZaWnEb2LkE8Bia8sKU1Iar95F\nE26Xm75LfWCs5i5aAduaY8AZmO71mV/4DnKcaajEsz6tDp8l+xWDdaXjuRJU\nubgox2MLOpGKDl+8IejqzWir1zs97ejSjb669RPDaZMLMC5wseIZZNHhzP92\nh4B2ZjPvZki+GvGpk/F5SmgiJfqIH7jV8H89OC1QAmbJ4Q7QqzGpM0dO7mih\nAPj0dOBhZIWwDasp8JR+tUE1xkN1DyXowBZ34xlE2S2zdIJwPfEG3JWdSZ/c\nJwSd+v/fzHTmbYd+RWc2tFZcJhRK8oD/H5F1r4A+JXBV1AelMLIBFVXHsWo3\ndIz0pDyKqa11X5Lt/R8abo9az7wQnzcMRT3wKiw2EZm8myYJCew0hWKzLxbB\nDONF\r\n=Ul0m\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD3HFGYBf8vkSq2KfqQHXT/SDV+Hb51uaC91u5GxBF2NgIgKFjRSwEP6xbTtLasNhIKw0drmVNoZKaKChElYkzAGlw="}]},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hashids_2.0.0-prerelease.2_1565902643520_0.9471815506442427"},"_hasShrinkwrap":false},"2.0.0-prerelease.1":{"author":{"name":"hashids.org","email":"npm@invent.life","url":"https://github.com/hashids"},"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","contributors":[{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},{"name":"Bazyli Brzóska","email":"npm@invent.life","url":"https://twitter.com/niieani"}],"version":"2.0.0-prerelease.1","homepage":"http://hashids.org/javascript","repository":{"type":"git","url":"git+https://github.com/niieani/hashids.js.git"},"bugs":{"url":"https://github.com/niieani/hashids.js/issues"},"main":"dist/hashids.mjs","module":"dist/hashids.mjs","browser":"dist/hashids.min","scripts":{"lint":"eslint lib/* tests/*","prettier:check":"prettier --check lib/* tests*/*","prettier:write":"prettier --write lib/* tests*/*","test":"jest","coverage":"jest --coverage && cat coverage/lcov.info | coveralls","build:umd":"babel lib/hashids.ts --source-maps -o dist/hashids.js","build:modules":"BABEL_MODULES=1 babel lib/hashids.ts --source-maps -o dist/hashids.mjs","minify":"cd dist && uglifyjs hashids.js -o hashids.min.js --source-map \"url=hashids.min.js.map\" --compress --mangle","build":"yarn run build:umd && yarn run build:modules && yarn run minify","clean":"rm -rf coverage yarn-debug.log","all":"yarn run lint && yarn run coverage && yarn run build && yarn run clean","semantic-release":"semantic-release"},"husky":{"hooks":{"pre-commit":"yarn run lint && yarn run test"}},"browserslist":["last 2 version","> 0.5%","maintained node versions","not dead"],"dependencies":{},"devDependencies":{"@babel/cli":"^7.5.5","@babel/core":"^7.5.5","@babel/plugin-syntax-bigint":"^7.4.4","@babel/preset-env":"^7.5.5","@babel/preset-typescript":"^7.3.3","@babel/register":"^7.5.5","@types/jest":"^24.0.17","@types/node":"^12.7.1","@typescript-eslint/eslint-plugin":"^2.0.0","@typescript-eslint/parser":"^2.0.0","babel-eslint":"^10.0.2","coveralls":"^3.0.6","eslint":"^6.1.0","eslint-config-prettier":"^6.0.0","eslint-plugin-eslint-comments":"^3.1.2","eslint-plugin-import":"^2.18.2","eslint-plugin-jest":"^22.15.1","expect":"^24.8.0","husky":"^3.0.3","jest":"^24.8.0","prettier":"^1.18.2","semantic-release":"^16.0.0-beta.22","typescript":"^3.5.3","uglify-js":"^3.4.8"},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"prettier":{"semi":false,"tabWidth":2,"singleQuote":true,"trailingComma":"all","arrowParens":"always","bracketSpacing":false},"jest":{"collectCoverageFrom":["lib/**/*.ts"]},"gitHead":"6d682eaf1883bbd28d6cb8c5e94b3ba432c71b7a","readme":"[![hashids](http://hashids.org/public/img/hashids.gif 'Hashids')](http://hashids.org/)\n\n[![Build Status][travis-image]][travis-url]\n[![Coveralls Status][coveralls-image]][coveralls-url]\n[![NPM downloads][npm-downloads-image]][npm-url]\n[![NPM version][npm-version-image]][npm-url]\n[![License][license-image]][license-url]\n[![Chat][chat-image]][chat-url]\n\n**Hashids** is small JavaScript library to generate YouTube-like ids from numbers. Use it when you don't want to expose your database ids to the user: [http://hashids.org/javascript](http://hashids.org/javascript)\n\n## Getting started\n\nInstall Hashids via:\n\n- [node.js](https://nodejs.org): `yarn add hashids`\n- [bower](http://bower.io/): `bower install hashids`\n- [jam](http://jamjs.org/): `jam install hashids`\n\n(or just use the code at `dist/hashids.js`)\n\nUse in ESM-compatible environments (webpack, modern browsers):\n\n```javascript\nimport Hashids from 'hashids'\nconst hashids = new Hashids()\n\nconsole.log(hashids.encode(1))\n```\n\nUse in Node.js:\n\n```javascript\nconst Hashids = require('hashids/cjs')\nconst hashids = new Hashids()\n\nconsole.log(hashids.encode(1))\n```\n\nUse in the browser without ESM (wherever ES5 is supported; 5KB):\n\n```javascript\n<script type=\"text/javascript\" src=\"hashids.min.js\"></script>\n<script type=\"text/javascript\">\n\n    var hashids = new Hashids();\n    console.log(hashids.encode(1));\n\n</script>\n```\n\n## Quick example\n\n```javascript\nconst hashids = new Hashids()\n\nconst id = hashids.encode(1, 2, 3) // o2fXhV\nconst numbers = hashids.decode(id) // [1, 2, 3]\n```\n\n## More options\n\n**A few more ways to pass to `encode()`:**\n\n```javascript\nconst hashids = new Hashids()\n\nconsole.log(hashids.encode(1, 2, 3)) // o2fXhV\nconsole.log(hashids.encode([1, 2, 3])) // o2fXhV\n// strings containing integers are coerced to numbers:\nconsole.log(hashids.encode('1', '2', '3')) // o2fXhV\nconsole.log(hashids.encode(['1', '2', '3'])) // o2fXhV\n// BigInt support:\nconsole.log(hashids.encode([1n, 2n, 3n])) // o2fXhV\n// Hex notation BigInt:\nconsole.log(hashids.encode([0x1n, 0x2n, 0x3n])) // o2fXhV\n```\n\n**Make your ids unique:**\n\nPass a \"salt\" to make your ids unique (e.g. a project name):\n\n```javascript\nvar hashids = new Hashids('My Project')\nconsole.log(hashids.encode(1, 2, 3)) // Z4UrtW\n\nvar hashids = new Hashids('My Other Project')\nconsole.log(hashids.encode(1, 2, 3)) // gPUasb\n```\n\n**Use padding to make your ids longer:**\n\nNote that ids are only padded to fit **at least** a certain length. It doesn't mean that your ids will be _exactly_ that length.\n\n```javascript\nconst hashids = new Hashids() // no padding\nconsole.log(hashids.encode(1)) // jR\n\nconst hashids = new Hashids('', 10) // pad to length 10\nconsole.log(hashids.encode(1)) // VolejRejNm\n```\n\n**Pass a custom alphabet:**\n\n```javascript\nconst hashids = new Hashids('', 0, 'abcdefghijklmnopqrstuvwxyz') // all lowercase\nconsole.log(hashids.encode(1, 2, 3)) // mdfphx\n```\n\nDefault alphabet is `abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890`.\n\nSince v2.0 you can even use emojis as the alphabet.\n\n**Encode hex instead of numbers:**\n\nUseful if you want to encode numbers like [Mongo](https://www.mongodb.com/)'s ObjectIds.\n\nNote that there is _no_ limit on how large of a hex number you can pass.\n\n```javascript\nvar hashids = new Hashids()\n\nvar id = hashids.encodeHex('507f1f77bcf86cd799439011') // y42LW46J9luq3Xq9XMly\nvar hex = hashids.decodeHex(id) // 507f1f77bcf86cd799439011\n```\n\nPlease note that this is not the equivalent of:\n\n```javascript\nconst hashids = new Hashids()\n\nconst id = Hashids.encode(BigInt('0x507f1f77bcf86cd799439011')) // y8qpJL3ZgzJ8lWk4GEV\nconst hex = Hashids.decode(id)[0].toString(16) // 507f1f77bcf86cd799439011\n```\n\nThe difference between the two is that the built-in `encodeHex` will\nalways result in the same length, even if it contained leading zeros.\n\nFor example `hashids.encodeHex('00000000') would encode to`qExOgK7`and decode back to`'00000000'` (length information is preserved).\n\n## Pitfalls\n\n1. When decoding, output is always an array of numbers (even if you encode only one number):\n\n   ```javascript\n   const hashids = new Hashids()\n\n   const id = hashids.encode(1)\n   console.log(hashids.decode(id)) // [1]\n   ```\n\n2. Encoding negative numbers is not supported.\n3. If you pass bogus input to `encode()`, an empty string will be returned:\n\n   ```javascript\n   const hashids = new Hashids()\n\n   const id = hashids.encode('123a')\n   console.log(id === '') // true\n   ```\n\n4. Do not use this library as a security tool and do not encode sensitive data. This is **not** an encryption library.\n\n## Randomness\n\nThe primary purpose of Hashids is to obfuscate ids. It's not meant or tested to be used as a security or compression tool. Having said that, this algorithm does try to make these ids random and unpredictable:\n\nNo repeating patterns showing there are 3 identical numbers in the id:\n\n```javascript\nconst hashids = new Hashids()\nconsole.log(hashids.encode(5, 5, 5)) // A6t1tQ\n```\n\nSame with incremented numbers:\n\n```javascript\nconst hashids = new Hashids()\n\nconsole.log(hashids.encode(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) // wpfLh9iwsqt0uyCEFjHM\n\nconsole.log(hashids.encode(1)) // jR\nconsole.log(hashids.encode(2)) // k5\nconsole.log(hashids.encode(3)) // l5\nconsole.log(hashids.encode(4)) // mO\nconsole.log(hashids.encode(5)) // nR\n```\n\n## Curses! #\\$%@\n\nThis code was written with the intent of placing created ids in visible places, like the URL. Therefore, the algorithm tries to avoid generating most common English curse words by generating ids that never have the following letters next to each other:\n\n    c, f, h, i, s, t, u\n\n## BigInt\n\nIf your environment supports `BigInt`, you can use the standard API\nto encode and decode them the same way as ordinary numbers.\n\nTrying to decode a `BigInt`-encoded hashid on an unsupported environment will throw an error.\n\n## License\n\nMIT License. See the [LICENSE](LICENSE) file.\nYou can use Hashids in open source projects and commercial products.\nDon't break the Internet. Kthxbye.\n\n[travis-url]: https://travis-ci.org/niieani/hashids.js\n[travis-image]: https://travis-ci.org/niieani/hashids.js.svg\n[coveralls-url]: https://coveralls.io/github/niieani/hashids.js\n[coveralls-image]: https://coveralls.io/repos/github/niieani/hashids.js/badge.svg\n[npm-downloads-image]: https://img.shields.io/npm/dm/hashids.svg?style=flat-square\n[npm-version-image]: https://img.shields.io/npm/v/hashids.svg\n[npm-url]: https://www.npmjs.com/package/hashids\n[license-url]: https://github.com/niieani/hashids.js/blob/master/LICENSE\n[license-image]: https://img.shields.io/packagist/l/hashids/hashids.svg?style=flat\n[chat-url]: https://gitter.im/hashids/hashids?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n[chat-image]: https://badges.gitter.im/Join%20Chat.svg\n","readmeFilename":"README.md","_id":"hashids@2.0.0-prerelease.1","_npmVersion":"6.5.0","_nodeVersion":"12.8.1","_npmUser":{"name":"niieani","email":"npm@invent.life"},"dist":{"integrity":"sha512-z0bu7dqiMpJYNu8jRoM/V//6mq2zDjdJ4Un36zAbs+gRCIvRFP+gz9wcXkx+NuJXdGhBYklL0xyzeKmNfmlCLQ==","shasum":"62f630905e46384f696e87a7e00f4a4c94459d10","tarball":"https://registry.npmjs.org/hashids/-/hashids-2.0.0-prerelease.1.tgz","fileCount":38,"unpackedSize":483925,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdVcs2CRA9TVsSAnZWagAAa7AP/jdyLdc3eH8nZz13GTEq\nwcy0T7ScJKCgWuh7Inl7/3HVH9llUOqeW0WWJU1gZfaQSbz5LW9NIBlAXs94\n5qx3MVYFnP9YAa4iz6N2PvcTLo7pcs8LflzWR9Dm1B3rNsBEcmVrYuS+N5uf\nJYz6ktl3j1OzSTASPHDYqJJa+usFB0hum/D5EADPQ8HlHLS5yEEK7oEr2lL1\nfWBOTPPkjZvrxo77GwkPXNZivDYsFOywINNpdd/0kSyLR0HzDaSsgCrthDu7\nXAQ8sJuXqaoFIZp4XYljmj3vf1g+MUF5EyFHJd01kq/Mz0BvUZc7ftmNs29l\nu4QgZesj25uch+gQQLCGEwazAkTzA0EoagxT64W3ZAY7oj0T4npR7l9eanmt\nVYpvoyVdcBMuPUyYj+cD5hShD9/vpLa6kc37wH3gjDo3qzxntoUUmBmEkBHV\nzsOm8ehmd/MxRjoAxs2ezR9aRSqk3uk8NGpnFH4pKGeKOmP13vA2pSeU9Sjj\nBWHvrFgN6JgalXQSI2IiynbSE5+GsVwCpBOh927rx5Kur/O2p/snYvbkjHVY\nQB/ziI77WTS/4sxSfpmk0txORK+acVsjPBQ2m9i64Lo4gy8pDAuXUH4y+RwK\ndhzmPrzTiA4QOpkdXsYOGKBSQnPBp8imcASl9JWVgd5A5JyrD4nTlEEHTFYd\nU/1e\r\n=/q74\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCddKughRea40E0dBrluewOpdAOoch2CYyjuCiuvDfO8wIgf8AEKA5qeecc5f+I6d4xqCdZ7PpkErbiCyJXbr18pq0="}]},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hashids_2.0.0-prerelease.1_1565903669728_0.6948300629472899"},"_hasShrinkwrap":false},"2.0.0-prerelease.3":{"author":{"name":"hashids.org","email":"npm@invent.life","url":"https://github.com/hashids"},"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","contributors":[{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},{"name":"Bazyli Brzóska","email":"npm@invent.life","url":"https://twitter.com/niieani"}],"version":"2.0.0-prerelease.3","homepage":"http://hashids.org/javascript","repository":{"type":"git","url":"git+https://github.com/niieani/hashids.js.git"},"bugs":{"url":"https://github.com/niieani/hashids.js/issues"},"main":"dist/hashids.mjs","module":"dist/hashids.mjs","browser":"dist/hashids.min","scripts":{"lint":"eslint lib/* tests/*","prettier:check":"prettier --check lib/* tests*/*","prettier:write":"prettier --write lib/* tests*/*","test":"jest","coverage":"jest --coverage && cat coverage/lcov.info | coveralls","build:umd":"babel lib/hashids.ts --source-maps -o dist/hashids.js","build:modules":"BABEL_MODULES=1 babel lib/hashids.ts --source-maps -o dist/hashids.mjs","minify":"cd dist && uglifyjs hashids.js -o hashids.min.js --source-map \"url=hashids.min.js.map\" --compress --mangle","build":"yarn run build:umd && yarn run build:modules && yarn run minify","clean":"rm -rf coverage yarn-debug.log","all":"yarn run lint && yarn run coverage && yarn run build && yarn run clean","semantic-release":"semantic-release"},"husky":{"hooks":{"pre-commit":"yarn run lint && yarn run test"}},"browserslist":["last 2 version","> 0.5%","maintained node versions","not dead"],"dependencies":{},"devDependencies":{"@babel/cli":"^7.5.5","@babel/core":"^7.5.5","@babel/plugin-syntax-bigint":"^7.4.4","@babel/preset-env":"^7.5.5","@babel/preset-typescript":"^7.3.3","@babel/register":"^7.5.5","@types/jest":"^24.0.17","@types/node":"^12.7.1","@typescript-eslint/eslint-plugin":"^2.0.0","@typescript-eslint/parser":"^2.0.0","babel-eslint":"^10.0.2","coveralls":"^3.0.6","eslint":"^6.1.0","eslint-config-prettier":"^6.0.0","eslint-plugin-eslint-comments":"^3.1.2","eslint-plugin-import":"^2.18.2","eslint-plugin-jest":"^22.15.1","expect":"^24.8.0","husky":"^3.0.3","jest":"^24.8.0","prettier":"^1.18.2","semantic-release":"^16.0.0-beta.22","typescript":"^3.5.3","uglify-js":"^3.4.8"},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"prettier":{"semi":false,"tabWidth":2,"singleQuote":true,"trailingComma":"all","arrowParens":"always","bracketSpacing":false},"jest":{"collectCoverageFrom":["lib/**/*.ts"]},"gitHead":"875bb2789fad2f1b1aaeb774ae6c3f8b111cfbde","readme":"[![hashids](http://hashids.org/public/img/hashids.gif 'Hashids')](http://hashids.org/)\n\n[![Build Status][travis-image]][travis-url]\n[![Coveralls Status][coveralls-image]][coveralls-url]\n[![NPM downloads][npm-downloads-image]][npm-url]\n[![NPM version][npm-version-image]][npm-url]\n[![License][license-image]][license-url]\n[![Chat][chat-image]][chat-url]\n\n**Hashids** is small JavaScript library to generate YouTube-like ids from numbers. Use it when you don't want to expose your database ids to the user: [http://hashids.org/javascript](http://hashids.org/javascript)\n\n## Getting started\n\nInstall Hashids via:\n\n- [node.js](https://nodejs.org): `yarn add hashids`\n- [bower](http://bower.io/): `bower install hashids`\n- [jam](http://jamjs.org/): `jam install hashids`\n\n(or just use the code at `dist/hashids.js`)\n\nUse in ESM-compatible environments (webpack, modern browsers):\n\n```javascript\nimport Hashids from 'hashids'\nconst hashids = new Hashids()\n\nconsole.log(hashids.encode(1))\n```\n\nUse in Node.js:\n\n```javascript\nconst Hashids = require('hashids/cjs')\nconst hashids = new Hashids()\n\nconsole.log(hashids.encode(1))\n```\n\nUse in the browser without ESM (wherever ES5 is supported; 5KB):\n\n```javascript\n<script type=\"text/javascript\" src=\"hashids.min.js\"></script>\n<script type=\"text/javascript\">\n\n    var hashids = new Hashids();\n    console.log(hashids.encode(1));\n\n</script>\n```\n\n## Quick example\n\n```javascript\nconst hashids = new Hashids()\n\nconst id = hashids.encode(1, 2, 3) // o2fXhV\nconst numbers = hashids.decode(id) // [1, 2, 3]\n```\n\n## More options\n\n**A few more ways to pass to `encode()`:**\n\n```javascript\nconst hashids = new Hashids()\n\nconsole.log(hashids.encode(1, 2, 3)) // o2fXhV\nconsole.log(hashids.encode([1, 2, 3])) // o2fXhV\n// strings containing integers are coerced to numbers:\nconsole.log(hashids.encode('1', '2', '3')) // o2fXhV\nconsole.log(hashids.encode(['1', '2', '3'])) // o2fXhV\n// BigInt support:\nconsole.log(hashids.encode([1n, 2n, 3n])) // o2fXhV\n// Hex notation BigInt:\nconsole.log(hashids.encode([0x1n, 0x2n, 0x3n])) // o2fXhV\n```\n\n**Make your ids unique:**\n\nPass a \"salt\" to make your ids unique (e.g. a project name):\n\n```javascript\nvar hashids = new Hashids('My Project')\nconsole.log(hashids.encode(1, 2, 3)) // Z4UrtW\n\nvar hashids = new Hashids('My Other Project')\nconsole.log(hashids.encode(1, 2, 3)) // gPUasb\n```\n\n**Use padding to make your ids longer:**\n\nNote that ids are only padded to fit **at least** a certain length. It doesn't mean that your ids will be _exactly_ that length.\n\n```javascript\nconst hashids = new Hashids() // no padding\nconsole.log(hashids.encode(1)) // jR\n\nconst hashids = new Hashids('', 10) // pad to length 10\nconsole.log(hashids.encode(1)) // VolejRejNm\n```\n\n**Pass a custom alphabet:**\n\n```javascript\nconst hashids = new Hashids('', 0, 'abcdefghijklmnopqrstuvwxyz') // all lowercase\nconsole.log(hashids.encode(1, 2, 3)) // mdfphx\n```\n\nDefault alphabet is `abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890`.\n\nSince v2.0 you can even use emojis as the alphabet.\n\n**Encode hex instead of numbers:**\n\nUseful if you want to encode numbers like [Mongo](https://www.mongodb.com/)'s ObjectIds.\n\nNote that there is _no_ limit on how large of a hex number you can pass.\n\n```javascript\nvar hashids = new Hashids()\n\nvar id = hashids.encodeHex('507f1f77bcf86cd799439011') // y42LW46J9luq3Xq9XMly\nvar hex = hashids.decodeHex(id) // 507f1f77bcf86cd799439011\n```\n\nPlease note that this is not the equivalent of:\n\n```javascript\nconst hashids = new Hashids()\n\nconst id = Hashids.encode(BigInt('0x507f1f77bcf86cd799439011')) // y8qpJL3ZgzJ8lWk4GEV\nconst hex = Hashids.decode(id)[0].toString(16) // 507f1f77bcf86cd799439011\n```\n\nThe difference between the two is that the built-in `encodeHex` will\nalways result in the same length, even if it contained leading zeros.\n\nFor example `hashids.encodeHex('00000000') would encode to`qExOgK7`and decode back to`'00000000'` (length information is preserved).\n\n## Pitfalls\n\n1. When decoding, output is always an array of numbers (even if you encode only one number):\n\n   ```javascript\n   const hashids = new Hashids()\n\n   const id = hashids.encode(1)\n   console.log(hashids.decode(id)) // [1]\n   ```\n\n2. Encoding negative numbers is not supported.\n3. If you pass bogus input to `encode()`, an empty string will be returned:\n\n   ```javascript\n   const hashids = new Hashids()\n\n   const id = hashids.encode('123a')\n   console.log(id === '') // true\n   ```\n\n4. Do not use this library as a security tool and do not encode sensitive data. This is **not** an encryption library.\n\n## Randomness\n\nThe primary purpose of Hashids is to obfuscate ids. It's not meant or tested to be used as a security or compression tool. Having said that, this algorithm does try to make these ids random and unpredictable:\n\nNo repeating patterns showing there are 3 identical numbers in the id:\n\n```javascript\nconst hashids = new Hashids()\nconsole.log(hashids.encode(5, 5, 5)) // A6t1tQ\n```\n\nSame with incremented numbers:\n\n```javascript\nconst hashids = new Hashids()\n\nconsole.log(hashids.encode(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) // wpfLh9iwsqt0uyCEFjHM\n\nconsole.log(hashids.encode(1)) // jR\nconsole.log(hashids.encode(2)) // k5\nconsole.log(hashids.encode(3)) // l5\nconsole.log(hashids.encode(4)) // mO\nconsole.log(hashids.encode(5)) // nR\n```\n\n## Curses! #\\$%@\n\nThis code was written with the intent of placing created ids in visible places, like the URL. Therefore, the algorithm tries to avoid generating most common English curse words by generating ids that never have the following letters next to each other:\n\n    c, f, h, i, s, t, u\n\n## BigInt\n\nIf your environment supports `BigInt`, you can use the standard API\nto encode and decode them the same way as ordinary numbers.\n\nTrying to decode a `BigInt`-encoded hashid on an unsupported environment will throw an error.\n\n## License\n\nMIT License. See the [LICENSE](LICENSE) file.\nYou can use Hashids in open source projects and commercial products.\nDon't break the Internet. Kthxbye.\n\n[travis-url]: https://travis-ci.org/niieani/hashids.js\n[travis-image]: https://travis-ci.org/niieani/hashids.js.svg\n[coveralls-url]: https://coveralls.io/github/niieani/hashids.js\n[coveralls-image]: https://coveralls.io/repos/github/niieani/hashids.js/badge.svg\n[npm-downloads-image]: https://img.shields.io/npm/dm/hashids.svg?style=flat-square\n[npm-version-image]: https://img.shields.io/npm/v/hashids.svg\n[npm-url]: https://www.npmjs.com/package/hashids\n[license-url]: https://github.com/niieani/hashids.js/blob/master/LICENSE\n[license-image]: https://img.shields.io/packagist/l/hashids/hashids.svg?style=flat\n[chat-url]: https://gitter.im/hashids/hashids?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n[chat-image]: https://badges.gitter.im/Join%20Chat.svg\n","readmeFilename":"README.md","_id":"hashids@2.0.0-prerelease.3","_npmVersion":"6.5.0","_nodeVersion":"12.8.1","_npmUser":{"name":"niieani","email":"npm@invent.life"},"dist":{"integrity":"sha512-K+yBGsBVMomsNW8B6zI38ms5GGbUwACygqNONcNNuo7y92r9sXZvF2P1GQh7+oNx3jABMLPuIoxMd1SLN9JizA==","shasum":"dd339efcb6f1a2cdfefa8e119ba7517dfaf67500","tarball":"https://registry.npmjs.org/hashids/-/hashids-2.0.0-prerelease.3.tgz","fileCount":39,"unpackedSize":484113,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdVdwtCRA9TVsSAnZWagAAGIcP+gID/1nEfH4Cn3Rp/mzp\nRjCnPtlM1hK462dtvnrX8idCmBNTyk+Z4hcaLsHzqdoyr8ov3w/OYXRlMyWi\nd7HUfAZgV07Ezh0b8vA3gSwiC77YpxSVeXCY3gL6QjvZQ9WXiN7hSoUuVJ6S\njMvQsnV9oy2Uo2i20K1rMrAHClG2ynv3aYymBacbygLPzudMbiKELJv5mpDv\nmStfcvpc/0kIpkJq2tWCHEJ48SEv2qhxasAcNqBl1fsVBdV46sMYMG3QR5xz\nLgK9x9wSw4XqJ+G8HYgZGb5bX4qWzZur3BoaJ8YNLI+VLOWhY7DG/innxale\nwX25ki3zeUARm7ddijwuO6IyXbKOYeoGADT+/B2C9TeKiuxy09wHxexVQeO1\nxV6R+zCv/JpKxXIX4fpIhRoxSDkBZmavkHGUItYfF3RUnOBh+Q1fslGU61AK\nFAoBm+0ux4IakFqlM5lmHvounZD64JxFUos5RDMYhkrk7U+5vAzh5xNjw9vn\nMTfSdWY/eaKJTrrHJDLf4Q/GtK+mmW2d2R29j8BnV7iDE6oy82M3LieRIG1X\nIP5RBc26YUFtioG+03asGnKxaGlftaqATRF7FJwaVN3VM2Ov8zVDun/92Iyr\niBZ9bnuFm4JXCGz9szVzkVkjtH8HIE5BQaDCm2UPw/81rUTCtHsgo1IlNwLQ\nfucx\r\n=9tv9\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCHxkGYT9z7hNg2L7VsvrpYhSdi962tYPWitxyTY+e3uwIgKwdG2upnVyiXDDnHo/nlme88R9vV29smhyNZtTEspJw="}]},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hashids_2.0.0-prerelease.3_1565908012912_0.30200044790898173"},"_hasShrinkwrap":false},"2.0.0-prerelease.4":{"author":{"name":"hashids.org","email":"npm@invent.life","url":"https://github.com/hashids"},"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","contributors":[{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},{"name":"Bazyli Brzóska","email":"npm@invent.life","url":"https://twitter.com/niieani"}],"version":"2.0.0-prerelease.4","homepage":"http://hashids.org/javascript","repository":{"type":"git","url":"git+https://github.com/niieani/hashids.js.git"},"bugs":{"url":"https://github.com/niieani/hashids.js/issues"},"main":"esm/index.js","module":"esm/index.js","browser":"dist/hashids.min","scripts":{"lint":"eslint lib/* tests/*","prettier:check":"prettier --check lib/* tests*/*","prettier:write":"prettier --write lib/* tests*/*","test":"jest","coverage":"jest --coverage && cat coverage/lcov.info | coveralls","build:umd":"babel lib/hashids.ts --source-maps -o dist/hashids.js","build:esm":"BABEL_MODULES=1 babel lib/hashids.ts --source-maps -o esm/index.js","minify":"cd dist && terser hashids.js -o hashids.min.js --source-map \"url=hashids.min.js.map\" --compress --mangle","build":"yarn run build:umd && yarn run build:esm && yarn run minify","clean":"rm -rf coverage yarn-debug.log","all":"yarn run lint && yarn run coverage && yarn run build && yarn run clean","semantic-release":"semantic-release"},"husky":{"hooks":{"pre-commit":"yarn run lint && yarn run test"}},"browserslist":["last 2 version","> 0.5%","maintained node versions","not dead"],"dependencies":{},"devDependencies":{"@babel/cli":"^7.5.5","@babel/core":"^7.5.5","@babel/plugin-syntax-bigint":"^7.4.4","@babel/preset-env":"^7.5.5","@babel/preset-typescript":"^7.3.3","@babel/register":"^7.5.5","@types/jest":"^24.0.17","@types/node":"^12.7.2","@typescript-eslint/eslint-plugin":"^2.0.0","@typescript-eslint/parser":"^2.0.0","babel-eslint":"^10.0.2","coveralls":"^3.0.6","eslint":"^6.1.0","eslint-config-prettier":"^6.0.0","eslint-plugin-eslint-comments":"^3.1.2","eslint-plugin-import":"^2.18.2","eslint-plugin-jest":"^22.15.1","husky":"^3.0.4","jest":"^24.9.0","prettier":"^1.18.2","semantic-release":"^16.0.0-beta.22","terser":"^4.1.4","typescript":"^3.5.3"},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"prettier":{"semi":false,"tabWidth":2,"singleQuote":true,"trailingComma":"all","arrowParens":"always","bracketSpacing":false},"jest":{"collectCoverageFrom":["lib/**/*.ts"]},"gitHead":"e9aebcf82d0295f9c02f572c65148b3aff4f7bc7","readme":"[![hashids](http://hashids.org/public/img/hashids.gif 'Hashids')](http://hashids.org/)\n\n[![Build Status][travis-image]][travis-url]\n[![Coveralls Status][coveralls-image]][coveralls-url]\n[![NPM downloads][npm-downloads-image]][npm-url]\n[![NPM version][npm-version-image]][npm-url]\n[![License][license-image]][license-url]\n[![Chat][chat-image]][chat-url]\n\n**Hashids** is small JavaScript library to generate YouTube-like ids from numbers. Use it when you don't want to expose your database ids to the user: [http://hashids.org/javascript](http://hashids.org/javascript)\n\n## Getting started\n\nInstall Hashids via:\n\n- [node.js](https://nodejs.org): `yarn add hashids`\n- [bower](http://bower.io/): `bower install hashids`\n- [jam](http://jamjs.org/): `jam install hashids`\n\n(or just use the code at `dist/hashids.js`)\n\nUse in ESM-compatible environments (webpack, modern browsers):\n\n```javascript\nimport Hashids from 'hashids'\nconst hashids = new Hashids()\n\nconsole.log(hashids.encode(1))\n```\n\nUse in Node.js:\n\n```javascript\nconst Hashids = require('hashids/cjs')\nconst hashids = new Hashids()\n\nconsole.log(hashids.encode(1))\n```\n\nUse in the browser without ESM (wherever ES5 is supported; 5KB):\n\n```javascript\n<script type=\"text/javascript\" src=\"hashids.min.js\"></script>\n<script type=\"text/javascript\">\n\n    var hashids = new Hashids();\n    console.log(hashids.encode(1));\n\n</script>\n```\n\n## Quick example\n\n```javascript\nconst hashids = new Hashids()\n\nconst id = hashids.encode(1, 2, 3) // o2fXhV\nconst numbers = hashids.decode(id) // [1, 2, 3]\n```\n\n## More options\n\n**A few more ways to pass to `encode()`:**\n\n```javascript\nconst hashids = new Hashids()\n\nconsole.log(hashids.encode(1, 2, 3)) // o2fXhV\nconsole.log(hashids.encode([1, 2, 3])) // o2fXhV\n// strings containing integers are coerced to numbers:\nconsole.log(hashids.encode('1', '2', '3')) // o2fXhV\nconsole.log(hashids.encode(['1', '2', '3'])) // o2fXhV\n// BigInt support:\nconsole.log(hashids.encode([1n, 2n, 3n])) // o2fXhV\n// Hex notation BigInt:\nconsole.log(hashids.encode([0x1n, 0x2n, 0x3n])) // o2fXhV\n```\n\n**Make your ids unique:**\n\nPass a \"salt\" to make your ids unique (e.g. a project name):\n\n```javascript\nvar hashids = new Hashids('My Project')\nconsole.log(hashids.encode(1, 2, 3)) // Z4UrtW\n\nvar hashids = new Hashids('My Other Project')\nconsole.log(hashids.encode(1, 2, 3)) // gPUasb\n```\n\n**Use padding to make your ids longer:**\n\nNote that ids are only padded to fit **at least** a certain length. It doesn't mean that your ids will be _exactly_ that length.\n\n```javascript\nconst hashids = new Hashids() // no padding\nconsole.log(hashids.encode(1)) // jR\n\nconst hashids = new Hashids('', 10) // pad to length 10\nconsole.log(hashids.encode(1)) // VolejRejNm\n```\n\n**Pass a custom alphabet:**\n\n```javascript\nconst hashids = new Hashids('', 0, 'abcdefghijklmnopqrstuvwxyz') // all lowercase\nconsole.log(hashids.encode(1, 2, 3)) // mdfphx\n```\n\nDefault alphabet is `abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890`.\n\nSince v2.0 you can even use emojis as the alphabet.\n\n**Encode hex instead of numbers:**\n\nUseful if you want to encode numbers like [Mongo](https://www.mongodb.com/)'s ObjectIds.\n\nNote that there is _no_ limit on how large of a hex number you can pass.\n\n```javascript\nvar hashids = new Hashids()\n\nvar id = hashids.encodeHex('507f1f77bcf86cd799439011') // y42LW46J9luq3Xq9XMly\nvar hex = hashids.decodeHex(id) // 507f1f77bcf86cd799439011\n```\n\nPlease note that this is not the equivalent of:\n\n```javascript\nconst hashids = new Hashids()\n\nconst id = Hashids.encode(BigInt('0x507f1f77bcf86cd799439011')) // y8qpJL3ZgzJ8lWk4GEV\nconst hex = Hashids.decode(id)[0].toString(16) // 507f1f77bcf86cd799439011\n```\n\nThe difference between the two is that the built-in `encodeHex` will\nalways result in the same length, even if it contained leading zeros.\n\nFor example `hashids.encodeHex('00000000') would encode to`qExOgK7`and decode back to`'00000000'` (length information is preserved).\n\n## Pitfalls\n\n1. When decoding, output is always an array of numbers (even if you encode only one number):\n\n   ```javascript\n   const hashids = new Hashids()\n\n   const id = hashids.encode(1)\n   console.log(hashids.decode(id)) // [1]\n   ```\n\n2. Encoding negative numbers is not supported.\n3. If you pass bogus input to `encode()`, an empty string will be returned:\n\n   ```javascript\n   const hashids = new Hashids()\n\n   const id = hashids.encode('123a')\n   console.log(id === '') // true\n   ```\n\n4. Do not use this library as a security tool and do not encode sensitive data. This is **not** an encryption library.\n\n## Randomness\n\nThe primary purpose of Hashids is to obfuscate ids. It's not meant or tested to be used as a security or compression tool. Having said that, this algorithm does try to make these ids random and unpredictable:\n\nNo repeating patterns showing there are 3 identical numbers in the id:\n\n```javascript\nconst hashids = new Hashids()\nconsole.log(hashids.encode(5, 5, 5)) // A6t1tQ\n```\n\nSame with incremented numbers:\n\n```javascript\nconst hashids = new Hashids()\n\nconsole.log(hashids.encode(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) // wpfLh9iwsqt0uyCEFjHM\n\nconsole.log(hashids.encode(1)) // jR\nconsole.log(hashids.encode(2)) // k5\nconsole.log(hashids.encode(3)) // l5\nconsole.log(hashids.encode(4)) // mO\nconsole.log(hashids.encode(5)) // nR\n```\n\n## Curses! #\\$%@\n\nThis code was written with the intent of placing created ids in visible places, like the URL. Therefore, the algorithm tries to avoid generating most common English curse words by generating ids that never have the following letters next to each other:\n\n    c, f, h, i, s, t, u\n\n## BigInt\n\nIf your environment supports `BigInt`, you can use the standard API\nto encode and decode them the same way as ordinary numbers.\n\nTrying to decode a `BigInt`-encoded hashid on an unsupported environment will throw an error.\n\n## License\n\nMIT License. See the [LICENSE](LICENSE) file.\nYou can use Hashids in open source projects and commercial products.\nDon't break the Internet. Kthxbye.\n\n[travis-url]: https://travis-ci.org/niieani/hashids.js\n[travis-image]: https://travis-ci.org/niieani/hashids.js.svg\n[coveralls-url]: https://coveralls.io/github/niieani/hashids.js\n[coveralls-image]: https://coveralls.io/repos/github/niieani/hashids.js/badge.svg\n[npm-downloads-image]: https://img.shields.io/npm/dm/hashids.svg?style=flat-square\n[npm-version-image]: https://img.shields.io/npm/v/hashids.svg\n[npm-url]: https://www.npmjs.com/package/hashids\n[license-url]: https://github.com/niieani/hashids.js/blob/master/LICENSE\n[license-image]: https://img.shields.io/packagist/l/hashids/hashids.svg?style=flat\n[chat-url]: https://gitter.im/hashids/hashids?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n[chat-image]: https://badges.gitter.im/Join%20Chat.svg\n","readmeFilename":"README.md","_id":"hashids@2.0.0-prerelease.4","_npmVersion":"6.5.0","_nodeVersion":"12.8.1","_npmUser":{"name":"niieani","email":"npm@invent.life"},"dist":{"integrity":"sha512-kKGUT97GJYP6pRA5U4WbZNfmTVvTMLjU5BtkmINpVP+SisDr7lvLqx6b4YDg4j5ksmQsDAxN+Av1YFRIyiKMsg==","shasum":"1e8f581f749c4e0a694c838984583d7aa26a7990","tarball":"https://registry.npmjs.org/hashids/-/hashids-2.0.0-prerelease.4.tgz","fileCount":41,"unpackedSize":489061,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdWGPkCRA9TVsSAnZWagAA+bQP+gJAcDrRTukQ2shTNsf0\n65oGxzBrt3JecyiVmCMS1jl93pQPQW8ytckgFO+28SmJIMasalsnfjelZxgR\nHGeDa1HsQD81wLGxjSXpIReubinDiLv3Gz7Zo52HQ8FHmey9QtfLJOHbYSMC\nI8Ev4hzPsu42iibOiqNctkpWKOUIKMTAbLb/mTWyrj97smoBTIZ02TK5ULo/\noSb9rDZqwB/irRB+Y6BAQ6S56MkFsGIRXmodxoiVgbNctJm7MnYInSMvqHIV\nqwm0SxuFpc2jcxIJ5TUWkZouJ+fspWYBsvMKtIOCt4iaMI9YKTG0kbnlg7SF\nSKeXHbZG/jloBCJGQm7Lilxn2DT2yLn9GOFNtATxu9KyC32xkPZ30JhlQgqE\nTCYw2gW4B5gQq2IwCiVpERS3HEg8HX05rukdC3SA5Iw3CHPfjjy/zOSow8/m\neYDm+NBr8OBmtUnNLglS8qrmlLMv23JOiTm6NBik1Ofsmcc3MQN5n/JezKMF\nuhHlR0J8deVTxGufc94CkoWUbr1TWCvlqeLofWL+kWLWXf5vmFEINN7845At\n3BUl9Ck5a6fmm/LvX2QAOsMGj1st1Mn2jwPnRpYJn/Kkz32nSZNU5tshBd2l\nheUPcBO9lXDI2eJq4qAEvA3DUJI7LvFmmh2cSmdLxrKV3MgGYY6CsMAGQPsf\nP9Ku\r\n=yGZe\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIC+Uvdybi/PSYF3QiFRCiw3+WllPSooQ5GJnDXe6EIYCAiEAkujSWdqs7XGVZm6WYElPa+3Qd8jOFF/plbyoOW84/do="}]},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hashids_2.0.0-prerelease.4_1566073828188_0.9232178915611742"},"_hasShrinkwrap":false},"2.0.0":{"author":{"name":"hashids.org","email":"npm@invent.life","url":"https://github.com/hashids"},"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","contributors":[{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},{"name":"Bazyli Brzóska","email":"npm@invent.life","url":"https://twitter.com/niieani"}],"version":"2.0.0","homepage":"http://hashids.org/javascript","repository":{"type":"git","url":"git+https://github.com/niieani/hashids.js.git"},"bugs":{"url":"https://github.com/niieani/hashids.js/issues"},"main":"esm/index.js","module":"esm/index.js","browser":"dist/hashids.min","scripts":{"lint":"eslint lib/* tests/*","prettier:check":"prettier --check lib/* tests*/*","prettier:write":"prettier --write lib/* tests*/*","test":"jest","coverage":"jest --coverage && cat coverage/lcov.info | coveralls","build:umd":"babel lib/hashids.ts --source-maps -o dist/hashids.js","build:esm":"BABEL_MODULES=1 babel lib/hashids.ts --source-maps -o esm/index.js","minify":"cd dist && terser hashids.js -o hashids.min.js --source-map \"url=hashids.min.js.map\" --compress --mangle","build":"yarn run build:umd && yarn run build:esm && yarn run minify","clean":"rm -rf coverage yarn-debug.log","all":"yarn run lint && yarn run coverage && yarn run build && yarn run clean","semantic-release":"semantic-release"},"husky":{"hooks":{"pre-commit":"yarn run lint && yarn run test"}},"browserslist":["last 2 version","> 0.5%","maintained node versions","not dead"],"dependencies":{},"devDependencies":{"@babel/cli":"^7.5.5","@babel/core":"^7.5.5","@babel/plugin-syntax-bigint":"^7.4.4","@babel/preset-env":"^7.5.5","@babel/preset-typescript":"^7.3.3","@babel/register":"^7.5.5","@types/jest":"^24.0.18","@types/node":"^12.7.3","@typescript-eslint/eslint-plugin":"^2.0.0","@typescript-eslint/parser":"^2.0.0","coveralls":"^3.0.6","eslint":"^6.3.0","eslint-config-prettier":"^6.1.0","eslint-plugin-eslint-comments":"^3.1.2","eslint-plugin-import":"^2.18.2","eslint-plugin-jest":"^22.16.0","husky":"^3.0.4","jest":"^24.9.0","prettier":"^1.18.2","semantic-release":"^16.0.0-beta.22","terser":"^4.2.1","typescript":"^3.6.2"},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"prettier":{"semi":false,"tabWidth":2,"singleQuote":true,"trailingComma":"all","arrowParens":"always","bracketSpacing":false},"jest":{"collectCoverageFrom":["lib/**/*.ts"]},"gitHead":"4b4e3ad1bfd152251c28b02c26af9abac9d0a45c","_id":"hashids@2.0.0","_nodeVersion":"12.9.1","_npmVersion":"6.11.2","dist":{"integrity":"sha512-URg7dQlk6wQS9WqhQwKBC0cT/G0JMaEcwlHTvtRNB45JcIrr6mxY7dXiCUJwESf+tXnyaFdz7C8ETDYrQsyY1A==","shasum":"8a3ad77598233e399594b73ad5fdb3c2c880528e","tarball":"https://registry.npmjs.org/hashids/-/hashids-2.0.0.tgz","fileCount":41,"unpackedSize":144621,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdalXICRA9TVsSAnZWagAAyMkP/igyI18gr1VsMpdyJKqV\nkl739XoM4IXp8VTi/yDHWH5czK3VxgnCw5dXcRgab4MeyIdfnKBDfBPsDxs8\nfVb7l8ogvas2Fl6cm9uzYt5aBU/zuSrKqyBNHri17wydEqGm5b74MlNHumLo\nDBvk7INPZIgJaRM6j6fW/4Ik298wpAfSzcFXhxrUyuqhz5R7nBTLl51uRTn5\nHdoGsCIPvJbE6YjG57qsBUu5GSAlGPh3Noiv4jkHrs6jHjDCFJ9Y7SjJpKpd\nSyupCpf3xZqlTxS4M7wB6/AFkVQ0vE2aR51ccveKxNTBe1uxlGi/8ukG6COG\nbSrWvXuJhnxXt8beCOXkAbHtR/voxc1Bony6AxuIS/gcpVIjG9SUT+NTyuih\nEj5mrsZFHAehqVAZLt6eGuoCyfpE4K+DpgFxhoyTAt9xsGxENEh1XW5JZPpf\nlc1M7NbXMM27VRXVyvRCX4sfJqECC5TFVzOtvPH7gc2hjEBQFqknPcNK6LPQ\nFSaIGOrUN2i4SovnJM1HltF3L1fB0bNo9oh4BvSPuFUQZ8rXqPGWvm3aY65y\nIO3zdbqayKLQI1gH7iGaXBdH344W2iNvGCtiLlemi8KLbHoPLWheIAKBSlxx\nP4nGmjpHc6/19sVmgiZUyP869KXIyuTjuU294N9vqVLhlLaC9h4hdK3G0SUD\nHxdL\r\n=qBm0\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCdmheIO2xznS0Rj+q7+I+v9SJAxTwhiJ5QMtnEWjGRGwIgEvtebGv8kVNV9emiNNf/kETTmdFkkRaRjVZ6RAipt8Y="}]},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"_npmUser":{"name":"niieani","email":"npm@invent.life"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hashids_2.0.0_1567249864257_0.0975705566006666"},"_hasShrinkwrap":false},"2.0.1":{"author":{"name":"hashids.org","email":"npm@invent.life","url":"https://github.com/hashids"},"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","contributors":[{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},{"name":"Bazyli Brzóska","email":"npm@invent.life","url":"https://twitter.com/niieani"}],"version":"2.0.1","homepage":"http://hashids.org/javascript","repository":{"type":"git","url":"git+https://github.com/niieani/hashids.js.git"},"bugs":{"url":"https://github.com/niieani/hashids.js/issues"},"main":"esm/index.js","module":"esm/index.js","browser":"dist/hashids.min","scripts":{"lint":"eslint lib/* tests/*","prettier:check":"prettier --check lib/* tests*/*","prettier:write":"prettier --write lib/* tests*/*","test":"jest","coverage":"jest --coverage && cat coverage/lcov.info | coveralls","build:umd":"babel lib/hashids.ts --source-maps -o dist/hashids.js","build:esm":"BABEL_MODULES=1 babel lib/hashids.ts --source-maps -o esm/index.js","minify":"cd dist && terser hashids.js -o hashids.min.js --source-map \"url=hashids.min.js.map\" --compress --mangle","build":"yarn run build:umd && yarn run build:esm && yarn run minify","clean":"rm -rf coverage yarn-debug.log","all":"yarn run lint && yarn run coverage && yarn run build && yarn run clean","semantic-release":"semantic-release"},"husky":{"hooks":{"pre-commit":"yarn run lint && yarn run test"}},"browserslist":["last 2 version","> 0.5%","maintained node versions","not dead"],"dependencies":{},"devDependencies":{"@babel/cli":"^7.5.5","@babel/core":"^7.5.5","@babel/plugin-syntax-bigint":"^7.4.4","@babel/preset-env":"^7.5.5","@babel/preset-typescript":"^7.3.3","@babel/register":"^7.5.5","@types/jest":"^24.0.18","@types/node":"^12.7.3","@typescript-eslint/eslint-plugin":"^2.0.0","@typescript-eslint/parser":"^2.0.0","coveralls":"^3.0.6","eslint":"^6.3.0","eslint-config-prettier":"^6.1.0","eslint-plugin-eslint-comments":"^3.1.2","eslint-plugin-import":"^2.18.2","eslint-plugin-jest":"^22.16.0","husky":"^3.0.4","jest":"^24.9.0","prettier":"^1.18.2","semantic-release":"^16.0.0-beta.22","terser":"^4.2.1","typescript":"^3.6.2"},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"prettier":{"semi":false,"tabWidth":2,"singleQuote":true,"trailingComma":"all","arrowParens":"always","bracketSpacing":false},"jest":{"collectCoverageFrom":["lib/**/*.ts"]},"gitHead":"978a87fc2b54d229fb990ed6f9883c4b692bd8c6","_id":"hashids@2.0.1","_nodeVersion":"12.10.0","_npmVersion":"6.11.2","dist":{"integrity":"sha512-Hr1lPEGhCkZSniYj9jAj8gQtcTBKNhf/tF14R1tu3zvIcwCT89/ucHEyObSIUZ42Y30SlIfOt7Sq0Uw+rhs6iQ==","shasum":"cdee93b6de1a6f941c955084fe82658c4fba28da","tarball":"https://registry.npmjs.org/hashids/-/hashids-2.0.1.tgz","fileCount":42,"unpackedSize":145447,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdcsqTCRA9TVsSAnZWagAAUsQP/0QAUQBbjaOMlzZ870IL\n3s7qeXRLXSKc3dxOYCEO784otqR2MEycavxx2zZRW42rhBy7Yd9PR6RCVqBp\naZ2fjpjkd3s0EC/qpi8GfVlX1eWriwbQKyoRMaE4Z0Sbtj1jvdsCMBjTp5L7\nwo7yryUF+CKQ84r9WttTs+otwzwahVKyu9mDKK8MnuRXJAGWojt9VsCJvcEs\nTaGPPilulHENwSSRYmJDYMRJNS84wMKZPQwddEct0xsEU6t41v/vNNTXlbfQ\nIvjUZ0T7fxNLWYA2KNpZ4c50G578cyI18YlhLBXww5gJ4HEsAcBSvKMssHl4\n5K6nrww/dsowfLB9zefsDin+ly0zobtSF4+8BHUjj3oRrDYF3bjY5Lpor9iD\nvg7dyOtasTEUYda4E1GYlc1EsYzXpfreRwQ2bAbjwFOHNnnyIMPdcWEEohwb\n63AIxqWOWw75GRBSd86LCHtS6uYlapBNFARoOmMEG/xViJPyTFPanCkq5GJ1\nyJQoJRtTwy1+SrEdVHknNypHhnxUmBnAM8IW6TIBbm8/XtIe8PqEhmIrM3D9\nauiqCBWKX8O++UKFG+jpWiSCHNTafzFSx3eTAtwtS2EUCaMYBYmLmDTAQNKB\nzzQfN8pv1Vg5487OMITofxOduflC8XeYludN7PlOTPahTDrtC1oL//X/qkqS\nmdq3\r\n=wArK\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFlg0Bw5P55mkjlk+eOQisf75/Ue99avHaw7lyUHbqIcAiARPsH5OPlTrN7qEYAm/YRNjV5mAQNs4ROZk+SrsxJ5LA=="}]},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"_npmUser":{"name":"niieani","email":"npm@invent.life"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hashids_2.0.1_1567804050402_0.7807629190167156"},"_hasShrinkwrap":false},"2.1.0":{"author":{"name":"hashids.org","email":"npm@invent.life","url":"https://github.com/hashids"},"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","contributors":[{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},{"name":"Bazyli Brzóska","email":"npm@invent.life","url":"https://twitter.com/niieani"}],"version":"2.1.0","homepage":"http://hashids.org/javascript","repository":{"type":"git","url":"git+https://github.com/niieani/hashids.js.git"},"bugs":{"url":"https://github.com/niieani/hashids.js/issues"},"main":"esm/index.js","module":"esm/index.js","browser":"dist/hashids.min","scripts":{"lint":"eslint lib/* tests/*","prettier:check":"prettier --check lib/* tests*/*","prettier:write":"prettier --write lib/* tests*/*","test":"jest","coverage":"jest --coverage && cat coverage/lcov.info | coveralls","build:umd":"babel lib/hashids.ts --source-maps -o dist/hashids.js","build:esm":"BABEL_MODULES=1 babel lib/hashids.ts --source-maps -o esm/index.js","minify":"cd dist && terser hashids.js -o hashids.min.js --source-map \"url=hashids.min.js.map\" --compress --mangle","build":"yarn run build:umd && yarn run build:esm && yarn run minify","clean":"rm -rf coverage yarn-debug.log","all":"yarn run lint && yarn run coverage && yarn run build && yarn run clean","semantic-release":"semantic-release"},"husky":{"hooks":{"pre-commit":"yarn run lint && yarn run test"}},"browserslist":["last 2 version","> 0.5%","maintained node versions","not dead"],"dependencies":{},"devDependencies":{"@babel/cli":"^7.7.0","@babel/core":"^7.7.2","@babel/plugin-syntax-bigint":"^7.4.4","@babel/preset-env":"^7.7.1","@babel/preset-typescript":"^7.7.2","@babel/register":"^7.7.0","@types/jest":"^24.0.22","@types/node":"^12.12.7","@typescript-eslint/eslint-plugin":"^2.6.1","@typescript-eslint/parser":"^2.6.1","coveralls":"^3.0.7","eslint":"^6.6.0","eslint-config-prettier":"^6.5.0","eslint-plugin-eslint-comments":"^3.1.2","eslint-plugin-import":"^2.18.2","eslint-plugin-jest":"^23.0.3","husky":"^3.0.9","jest":"^24.9.0","prettier":"^1.19.1","semantic-release":"^16.0.0-beta.31","terser":"^4.3.9","ts-node":"^8.4.1","typescript":"^3.7.2"},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"prettier":{"semi":false,"tabWidth":2,"singleQuote":true,"trailingComma":"all","arrowParens":"always","bracketSpacing":false},"jest":{"collectCoverageFrom":["lib/**/*.ts"]},"gitHead":"ce0707d01026e8bc10ef3f48ba09ffdffeb91e2f","_id":"hashids@2.1.0","_nodeVersion":"12.13.0","_npmVersion":"6.11.2","dist":{"integrity":"sha512-N53K2p7TrwKLNHKHcEDH+qpiAgO9JfyPEg8Tfy4fB9AcVhwxlTanJ55HVV9BQJQ6ajM1Wfmtl2wgKuEbcucolw==","shasum":"96eec6de3081a76dcd839650a6a26e6081e729d3","tarball":"https://registry.npmjs.org/hashids/-/hashids-2.1.0.tgz","fileCount":42,"unpackedSize":148491,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdxv8cCRA9TVsSAnZWagAALAEP/RpzeUHCeiDnGaDi6Dd9\nG9w/fLNP7C3GKgB/3fbqNzBl7hEnx6mtyZ0vHBkF2XF6DZth/N9SnK/TBTUg\n1cP85SFtA9cKR80AtjmB1GUuCkQGFaR4s2twuQj1YmP7T9OJzq9Bj9jWKTvw\nZZVwba1IxluOKPwyAmHi69jQTYjs5ktc5Y89idfE5vrndlO/EPGI/Gid3Q7C\nK53mMCcbyDbczd3x3BwXxIxzuK0Q114fS8UWy3uMElFbfwnGdEqv9re4mzPR\navhZYbx522UPWDra9IWcKdiro22qbFe4hLaCws/XuMWdLecsZQnkAiSyAIuG\nVbHXkMWq5hSSF0ltmwcJ04Z9zQeyH2TBkX+iuO4GLTLZ/YPajzTeHnje1NhT\numB2z4USo2wBD9RcBkd53+kapCxpkPxWTNH/v6jcKZGUPSWM9Ai1XM2ePz1r\nh2cwKCrRMq7wZoHMiT+3gc4kioD5x4xYqKpOVBipBidHzl/Yc9BWHSxDJ9tK\nEi3q6CLfCBhL70tPYFuKv0jM+pZ4euG11dpFeEvKYvpa1gUTfU/2itkRXFLG\nBSEtbNLX6kxXcYxXq00ea9EcNkm6QUbamuil9LFZgQUgNU9ArjRSsPJ81hri\n2KAJgss7iqYBRGea3Yua4tqDHYMLTSdFQchMlnQzb3DEGelgnzE/5KABiL7x\ngUlV\r\n=Om8i\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDsxo+vyvQNanGlD5qF+bRumFUCvSnwq0DeKy7hMx5glQIhAKVL0APRYQwLBaHmTgegfJwOnSvz99pY+IVKq0Q7r4Qj"}]},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"_npmUser":{"name":"niieani","email":"npm@invent.life"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hashids_2.1.0_1573322523677_0.7931839843573569"},"_hasShrinkwrap":false},"2.2.0":{"author":{"name":"hashids.org","email":"npm@invent.life","url":"https://github.com/hashids"},"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","contributors":[{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},{"name":"Bazyli Brzóska","email":"npm@invent.life","url":"https://twitter.com/niieani"}],"version":"2.2.0","homepage":"http://hashids.org/javascript","repository":{"type":"git","url":"git+https://github.com/niieani/hashids.js.git"},"bugs":{"url":"https://github.com/niieani/hashids.js/issues"},"main":"esm/index.js","module":"esm/index.js","browser":"dist/hashids.min","exports":{"import":"./esm/index.js","require":"./cjs/index.js","browser":"dist/hashids.min"},"scripts":{"lint":"eslint lib/* tests/*","prettier:check":"prettier --check lib/* tests*/*","prettier:write":"prettier --write lib/* tests*/*","test":"jest","coverage":"jest --coverage && cat coverage/lcov.info | coveralls","build:umd":"babel lib/hashids.ts --source-maps -o dist/hashids.js","build:esm":"BABEL_MODULES=1 babel lib/hashids.ts --source-maps -o esm/index.js","minify":"cd dist && terser hashids.js -o hashids.min.js --source-map \"url=hashids.min.js.map\" --compress --mangle","build":"yarn run build:umd && yarn run build:esm && yarn run minify","clean":"rm -rf coverage yarn-debug.log","all":"yarn run lint && yarn run coverage && yarn run build && yarn run clean","semantic-release":"semantic-release","benchmark":"yarn ts-node -O '{\"module\": \"commonjs\"}' -T tests/benchmark"},"husky":{"hooks":{"pre-commit":"yarn run lint && yarn run test"}},"browserslist":["last 2 version","> 0.5%","maintained node versions","not dead"],"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.4","@babel/plugin-syntax-bigint":"^7.8.3","@babel/plugin-transform-destructuring":"^7.8.3","@babel/plugin-transform-spread":"^7.8.3","@babel/preset-env":"^7.8.4","@babel/preset-typescript":"^7.8.3","@babel/register":"^7.8.3","@types/jest":"^25.1.1","@types/node":"^13.7.0","@typescript-eslint/eslint-plugin":"^2.19.0","@typescript-eslint/parser":"^2.19.0","@yarnpkg/pnpify":"^2.0.0-rc.17","coveralls":"^3.0.9","eslint":"^6.8.0","eslint-config-prettier":"^6.10.0","eslint-import-resolver-node":"^0.3.3","eslint-plugin-eslint-comments":"^3.1.2","eslint-plugin-import":"^2.20.1","eslint-plugin-jest":"^23.6.0","husky":"^4.2.1","jest":"^25.1.0","nodemark":"^0.3.0","prettier":"^1.19.1","require-from-web":"^1.1.1","semantic-release":"^17.0.2","terser":"^4.6.3","ts-node":"^8.6.2","typescript":"^3.7.5"},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"prettier":{"semi":false,"tabWidth":2,"singleQuote":true,"trailingComma":"all","arrowParens":"always","bracketSpacing":false},"jest":{"collectCoverageFrom":["lib/**/*.ts"]},"gitHead":"16743b8cfc7e010bb6c30a0479bd124c72c22170","_id":"hashids@2.2.0","_nodeVersion":"12.14.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-l2E88aM4Bktb/B+6UUO9XBx+sXOfcYVY8KCoZxgXXqilVWZuI19Q77G6iMUs+KwJFSQBBlBWvUWJdzMbl9/GsQ==","shasum":"a4983ff9e8229cf580b9e0f47be7bbe2b826b147","tarball":"https://registry.npmjs.org/hashids/-/hashids-2.2.0.tgz","fileCount":50,"unpackedSize":3203525,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeOJYOCRA9TVsSAnZWagAArLgP/3JrTepzbUyoEo/k/zE8\nOWyG3Zo0XSvfK9kFHYCA0tjNCfqPcjw2r3z+b6ra3GXIvF/SPvxOBGsU5Vrr\nc41ov+lV11eET2dBLec1RaBiBvSIDjUdmiP0v+5AKs/6CvxPlbOVmHYAkU9h\nx6MexnftL4mtdTzZIelt5FzfZp2zbp5hDAkU2T+fkm4DUyf1m9lcwwAZjSoJ\n2gX6+PPSqJodcw8YPgsubsmJb7dj530He+n9mehP3O/6gO6UPgk2cMUDjAN6\nr9raVV/nQbNHKBB4CBGqhgvRdrBewe1GVRPrByvnIup7v0eyhw+CHr2rmtcw\nrS5LqDAP1a4bzKKF0jmlPTsxXaR2YwSZsHLCOlZxmQYH7/4afVgt8OsJjRbd\nhRKq9La7yKM5kRPhnTn59QsCtSTdtnQpItJwwFBKriQkKHgXFOKQDOIQLmZY\nPdCij6EgG9CWQsjIpYs3U7T95ITd3t5nUzFMWHW+NFMDm8K5Gh9+6SU0K3Uh\nYk6l96B1SQ+1wyMQjEVn9kKW0I7fM9cdPQ80IvXjDnC5ihW/GCJsNpRkSOTt\nAW8nSqASWFafOfqOXk3T420gA+F3ddcHLVgMc2DfOaMTOvnxqzzYPZe5AL+/\n820n6N2q/Jug2GmZtqSm5rcAWjjpVrX9fgT7ZyR1s5fgCwxE63+wqal8OtvX\not1E\r\n=VeOl\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFNc84sGx+wNeWgZgJx/I+wuILoi7jc3fXRj41GLPgcbAiAWN9K4+Qm+0GnB8NjcqrqF8X1T3GAJOSMEkHW/R6DIWA=="}]},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"_npmUser":{"name":"niieani","email":"npm@invent.life"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hashids_2.2.0_1580766734304_0.2834118078928689"},"_hasShrinkwrap":false},"2.2.1":{"author":{"name":"hashids.org","email":"npm@invent.life","url":"https://github.com/hashids"},"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","contributors":[{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},{"name":"Bazyli Brzóska","email":"npm@invent.life","url":"https://twitter.com/niieani"}],"version":"2.2.1","homepage":"http://hashids.org/javascript","repository":{"type":"git","url":"git+https://github.com/niieani/hashids.js.git"},"bugs":{"url":"https://github.com/niieani/hashids.js/issues"},"main":"esm/index.js","module":"esm/index.js","browser":"dist/hashids.min","exports":{".":{"import":"./esm/index.js","require":"./cjs/index.js","browser":"./dist/hashids.min.js"},"./cjs":{"require":"./cjs/index.js"},"./cjs/":{"require":"./cjs/"},"./esm/":{"import":"./esm/"}},"scripts":{"lint":"eslint lib/* tests/*","prettier:check":"prettier --check lib/* tests*/*","prettier:write":"prettier --write lib/* tests*/*","test":"jest","coverage":"jest --coverage && cat coverage/lcov.info | coveralls","build:umd":"babel lib/hashids.ts --source-maps -o dist/hashids.js","build:esm":"BABEL_MODULES=1 babel lib/hashids.ts --source-maps -o esm/index.js","minify":"cd dist && terser hashids.js -o hashids.min.js --source-map \"url=hashids.min.js.map\" --compress --mangle","build":"yarn run build:umd && yarn run build:esm && yarn run minify","clean":"rm -rf coverage yarn-debug.log","all":"yarn run lint && yarn run coverage && yarn run build && yarn run clean","semantic-release":"semantic-release","benchmark":"yarn ts-node -O '{\"module\": \"commonjs\"}' -T tests/benchmark"},"husky":{"hooks":{"pre-commit":"yarn run lint && yarn run test"}},"browserslist":["last 2 version","> 0.5%","maintained node versions","not dead"],"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.4","@babel/plugin-syntax-bigint":"^7.8.3","@babel/plugin-transform-destructuring":"^7.8.3","@babel/plugin-transform-spread":"^7.8.3","@babel/preset-env":"^7.8.4","@babel/preset-typescript":"^7.8.3","@babel/register":"^7.8.3","@types/jest":"^25.1.1","@types/node":"^13.7.0","@typescript-eslint/eslint-plugin":"^2.19.0","@typescript-eslint/parser":"^2.19.0","@yarnpkg/pnpify":"^2.0.0-rc.17","coveralls":"^3.0.9","eslint":"^6.8.0","eslint-config-prettier":"^6.10.0","eslint-import-resolver-node":"^0.3.3","eslint-plugin-eslint-comments":"^3.1.2","eslint-plugin-import":"^2.20.1","eslint-plugin-jest":"^23.6.0","husky":"^4.2.1","jest":"^25.1.0","nodemark":"^0.3.0","prettier":"^1.19.1","require-from-web":"^1.1.1","semantic-release":"^17.0.2","terser":"^4.6.3","ts-node":"^8.6.2","typescript":"^3.7.5"},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"prettier":{"semi":false,"tabWidth":2,"singleQuote":true,"trailingComma":"all","arrowParens":"always","bracketSpacing":false},"jest":{"collectCoverageFrom":["lib/**/*.ts"]},"gitHead":"3bc650b7e1071d8c190411d0d7f82fdc63de9cb2","_id":"hashids@2.2.1","_nodeVersion":"12.14.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-+hQeKWwpSDiWFeu/3jKUvwboE4Z035gR6FnpscbHPOEEjCbgv2px9/Mlb3O0nOTRyZOw4MMFRYfVL3zctOV6OQ==","shasum":"ad0c600f0083aa0df7451dfd184e53db34f71289","tarball":"https://registry.npmjs.org/hashids/-/hashids-2.2.1.tgz","fileCount":52,"unpackedSize":3205503,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeOe38CRA9TVsSAnZWagAAnUwQAKGQz1TfoCiVfx/JGXEW\nmaX5Zrdg9aVt9QvK+eIxHtPaAQqr0qc9PFdzQHSlcPy/VBp90H8eQVBjQKOV\nYhNuj3Phxy6H4ZDZx98WhwtkEG94pBaBuaFc0zJRKbAyili0iHfOcm65y4Ei\nIxxXzoEPMl3OLPqmS6gO+lmsjbcEVtucK08TG24UAxyld5yGiVCc7aPRVryF\ntZSgd7JCrPRowx5wzdC4YxDStHSJTuwC/WvwOgklLsX/m8J8qeltiK5ElAOi\n09OCYqIemdTp/rKwIQ7IO8mTDCqxPAM5tE+hRNHWPwrLeM+v8J1oCCa62ubb\nizfDA9HlEfQlsjVSIFENl7wKZ4eG0vBAWSaLzXU4llmbVFHIRu0+Np4yuYd1\n4qSF0DGTZMFbD3Z21kG/hraOW/ogfEQ70BGOo1Fv7jtaSPeWxMaXRKEC2fFi\nSmIFgaAlRzuThkjpsD/9GwGVKyMWCMK+KLhN9ZPlcXWQDaw/obKC574WQ6Bo\nx8ediGifjfgIURIA5ptgsvRt0KFesve4zCfh68ShLCXG1mS6EXj+2BwgMhZw\niaFB14BozTyjkPLx2gNzuK6P9jBB/t2+fzKdkWfEAPbUKUeCYu9heCEhbx/X\n+ciRktcU+CUqCyOLLNc8FbnHCj/9uZh5LywWNoTEooB0OnkpEYNcFeaX4OR5\n/Fej\r\n=yvVs\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCg5ojHf6cOO8KtZ05c5sF2cAHqrtGUrKRqv0oSnVuysgIhAP+rDn7jJcGScGGE8ME7K3MPvrpAIK4pePZFSj5GU8pZ"}]},"maintainers":[{"name":"ivan","email":"ivan@grather.com"}],"_npmUser":{"name":"niieani","email":"npm@invent.life"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hashids_2.2.1_1580854780065_0.052222452848036616"},"_hasShrinkwrap":false},"2.2.2":{"author":{"name":"hashids.org","email":"npm@invent.life","url":"https://github.com/hashids"},"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","contributors":[{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},{"name":"Bazyli Brzóska","email":"npm@invent.life","url":"https://twitter.com/niieani"}],"version":"2.2.2","homepage":"http://hashids.org/javascript","repository":{"type":"git","url":"git+https://github.com/niieani/hashids.js.git"},"bugs":{"url":"https://github.com/niieani/hashids.js/issues"},"main":"esm/index.js","module":"esm/index.js","exports":{".":{"browser":"./dist/hashids.min.js","import":"./esm/index.js","require":"./cjs/index.js"},"./cjs":{"require":"./cjs/index.js"},"./cjs/":{"require":"./cjs/"},"./esm/":{"import":"./esm/"}},"scripts":{"lint":"eslint lib/* tests/*","prettier:check":"prettier --check lib/* tests*/*","prettier:write":"prettier --write lib/* tests*/*","test":"jest","coverage":"jest --coverage && cat coverage/lcov.info | coveralls","build:umd":"babel lib/hashids.ts --source-maps -o dist/hashids.js","build:esm":"BABEL_MODULES=1 babel lib/hashids.ts --source-maps -o esm/index.js","minify":"cd dist && terser hashids.js -o hashids.min.js --source-map \"url=hashids.min.js.map\" --compress --mangle","build":"yarn run build:umd && yarn run build:esm && yarn run minify","clean":"rm -rf coverage yarn-debug.log","all":"yarn run lint && yarn run coverage && yarn run build && yarn run clean","semantic-release":"semantic-release","benchmark":"yarn ts-node -O '{\"module\": \"commonjs\"}' -T tests/benchmark"},"husky":{"hooks":{"pre-commit":"yarn run lint && yarn run test"}},"browserslist":["last 2 version","> 0.5%","maintained node versions","not dead"],"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.4","@babel/plugin-syntax-bigint":"^7.8.3","@babel/plugin-transform-destructuring":"^7.8.3","@babel/plugin-transform-spread":"^7.8.3","@babel/preset-env":"^7.8.4","@babel/preset-typescript":"^7.8.3","@babel/register":"^7.8.3","@types/jest":"^25.1.1","@types/node":"^13.7.0","@typescript-eslint/eslint-plugin":"^2.19.0","@typescript-eslint/parser":"^2.19.0","@yarnpkg/pnpify":"^2.0.0-rc.17","coveralls":"^3.0.9","eslint":"^6.8.0","eslint-config-prettier":"^6.10.0","eslint-import-resolver-node":"^0.3.3","eslint-plugin-eslint-comments":"^3.1.2","eslint-plugin-import":"^2.20.1","eslint-plugin-jest":"^23.6.0","husky":"^4.2.1","jest":"^25.1.0","nodemark":"^0.3.0","prettier":"^1.19.1","require-from-web":"^1.1.1","semantic-release":"^17.0.2","terser":"^4.6.3","ts-node":"^8.6.2","typescript":"^3.7.5"},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"prettier":{"semi":false,"tabWidth":2,"singleQuote":true,"trailingComma":"all","arrowParens":"always","bracketSpacing":false},"jest":{"collectCoverageFrom":["lib/**/*.ts"]},"gitHead":"8c8152a9b05c6b0eca548a53e1edd693f3fcd04e","_id":"hashids@2.2.2","_nodeVersion":"12.19.0","_npmVersion":"6.14.8","dist":{"integrity":"sha512-nqH06JLFeBBCg31jYSArbOs/XddTdnHSul/hb6XbrWg/UlUWFQc9KR21sVLoGKQGKPW1D3zgTgTew0oY7nhrhQ==","shasum":"5381257b34f0d0aca2063967b14a30a9312f650d","tarball":"https://registry.npmjs.org/hashids/-/hashids-2.2.2.tgz","fileCount":53,"unpackedSize":3207035,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfpxJFCRA9TVsSAnZWagAAWIkQAJlXH1jhUOyR8SgHPM5K\nmIlOTsAsr7uUZtIqkvqw1duMMJXxrh2DZgptJLJNF5X8t5+0HXKKq3VAiWaQ\nljUm+VNLCAa5ZudvrLYqpwZwZGdQuSmYEH7cH2N7z89yKGj0zM+HkyfnFQYy\nocdMFRWXOpvlW050xM28oKIvngMGHFxRtFIckw7ZKM7e35PUNjwCf9VgeA/z\nY86LHKxs+WoJQdcYAbzn+DrXhRXNTC5nEnR1gwT//XvmlcG+zba8E2p7lPUh\nsqSE3nEddJ0g3H5oJJruWIGERuBmIq9NU8yRVHF+3tVu2KYruHghlpLMUwSP\nIz9U/7ahbcIMf9gGY+mX9O3aKGicjsKSMEFdSfB9I9kk55zNshMwvwY9TQIW\n4ho7UGBbKWrpXGSI34wD8Y9hIIYAgdKKB8Q5ZyMxElkpk63d1ZuA7023K58L\nng8fXt3GbpbCGFr/WZvpiV9h0pppCaZIqgHOgmgITL2IYkT1Ks/t81LlB05E\nS7yDuwHzUtfKkqNBn4VBJjyBCEbAxFkhFB2T6Md5Vkq/+HH+dXQZc2Dbsc4f\n76N+PVZdq4p/ql0JOkQSeUDh2+2uVghLEC+OmAu8J7BUli5FUACt67MF/usp\njmo2c2Ju1i2ViERvyQ3ZrOlHTssPXXmWzNTjK9DzVuslWv1FMl1aVQkrNUfU\nT8Y/\r\n=2p9H\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDndZLDS6wryn05MGg2Y3W8svBQ6pPiTvQCzLrylshOjgIhAKNwQLoUkJWA/JpI6+K3hdUfbjTFLXvSpD5vdPB97GAG"}]},"_npmUser":{"name":"niieani","email":"npm@invent.life"},"directories":{},"maintainers":[{"name":"ivan","email":"ivan@barreleye.com"},{"name":"niieani","email":"npm@invent.life"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hashids_2.2.2_1604784709084_0.9179198818154892"},"_hasShrinkwrap":false},"2.2.3":{"author":{"name":"hashids.org","email":"npm@invent.life","url":"https://github.com/hashids"},"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","contributors":[{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},{"name":"Bazyli Brzóska","email":"npm@invent.life","url":"https://twitter.com/niieani"}],"version":"2.2.3","homepage":"http://hashids.org/javascript","repository":{"type":"git","url":"git+https://github.com/niieani/hashids.js.git"},"bugs":{"url":"https://github.com/niieani/hashids.js/issues"},"main":"esm/index.js","module":"esm/index.js","exports":{".":{"import":"./esm/index.js","require":"./cjs/index.js"},"./cjs":{"require":"./cjs/index.js"},"./cjs/":{"require":"./cjs/"},"./esm/":{"import":"./esm/"}},"scripts":{"lint":"eslint lib/* tests/*","prettier:check":"prettier --check lib/* tests*/*","prettier:write":"prettier --write lib/* tests*/*","test":"jest","coverage":"jest --coverage && cat coverage/lcov.info | coveralls","build:umd":"babel lib/hashids.ts --source-maps -o dist/hashids.js","build:esm":"BABEL_MODULES=1 babel lib/hashids.ts --source-maps -o esm/index.js","minify":"cd dist && terser hashids.js -o hashids.min.js --source-map \"url=hashids.min.js.map\" --compress --mangle","build":"yarn run build:umd && yarn run build:esm && yarn run minify","clean":"rm -rf coverage yarn-debug.log","all":"yarn run lint && yarn run coverage && yarn run build && yarn run clean","semantic-release":"semantic-release","benchmark":"yarn ts-node -O '{\"module\": \"commonjs\"}' -T tests/benchmark"},"husky":{"hooks":{"pre-commit":"yarn run lint && yarn run test"}},"browserslist":["last 2 version","> 0.5%","maintained node versions","not dead"],"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.4","@babel/plugin-syntax-bigint":"^7.8.3","@babel/plugin-transform-destructuring":"^7.8.3","@babel/plugin-transform-spread":"^7.8.3","@babel/preset-env":"^7.8.4","@babel/preset-typescript":"^7.8.3","@babel/register":"^7.8.3","@types/jest":"^25.1.1","@types/node":"^13.7.0","@typescript-eslint/eslint-plugin":"^2.19.0","@typescript-eslint/parser":"^2.19.0","@yarnpkg/pnpify":"^2.0.0-rc.17","coveralls":"^3.0.9","eslint":"^6.8.0","eslint-config-prettier":"^6.10.0","eslint-import-resolver-node":"^0.3.3","eslint-plugin-eslint-comments":"^3.1.2","eslint-plugin-import":"^2.20.1","eslint-plugin-jest":"^23.6.0","husky":"^4.2.1","jest":"^25.1.0","nodemark":"^0.3.0","prettier":"^1.19.1","require-from-web":"^1.1.1","semantic-release":"^17.0.2","terser":"^4.6.3","ts-node":"^8.6.2","typescript":"^3.7.5"},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"prettier":{"semi":false,"tabWidth":2,"singleQuote":true,"trailingComma":"all","arrowParens":"always","bracketSpacing":false},"jest":{"collectCoverageFrom":["lib/**/*.ts"]},"gitHead":"c01ce33e093501cdb50982a439c49436e78d8dc2","_id":"hashids@2.2.3","_nodeVersion":"12.20.0","_npmVersion":"6.14.8","dist":{"integrity":"sha512-WEeaHLWDp1TKlyQzi69kuQRBshUpQzfr5HZ62kgKCzlOUiZKPTg6ZEb/bVBVdz0yNMsPQMy/OKq2KbT3ykZT0w==","shasum":"470cc8bd8a5f7cd297684f5ed3987b0c5ceb85e1","tarball":"https://registry.npmjs.org/hashids/-/hashids-2.2.3.tgz","fileCount":53,"unpackedSize":3206993,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf1YYICRA9TVsSAnZWagAAFbgP/3XPLn/mXGchWQ6NtPi/\n+SSHl6mgDt9dkc4WoHBba/cRbsY0CVjLejYBTTJBrahsKcLXiWk0W8blSAMv\nJJsSG9O8J1G379BJXawoB4kpc2vX//nv8Oh6UrjtPIH+JCO8avVG2J2ndm7V\nMSjggPbWr7iAWfmcw2MZhHkYJnw43F+0YySy+AuLlqItEltywoRIdhyySa4T\nrotp5ITmk3iWhCqYiqGxugS12bHKlTIrpr4mzoXcSmYFEPee/IaS5D18ursq\nPLS94EXD5S4AYKrjPcV3xN7xp6CmyPgqz+h74wfqUmvsOjn3h98I+pOGZkG+\nGTGfLyKnz8TQzVYHSomIoZECZtH5sJyPjnTxyeYubOGgK21Q6zjD2ZLR4EEi\n2neS1sKif5WxI5AukCe68yVjbXhkYvfdf2OHc30zQMgC/whU3Fc80O6DiENq\nLIotUthSXDpU0zSwn4h2UGszcB9JtCYEDLr1fAIiYsGYR9od1GefeB0SEVAK\nldmXKYsBN0PiVNajirxFtDKvA+NNu4qtsY6A/UaR4csPFgGx2iUPikpsTOcc\n74JjAlrU72tz/CU8nXy6lbuZoFcgMaPyaMtfw2gY/0tOp533Hzc92YoTTxVL\njfZkoTGPeTBMcPmWc7zswKwTHhOA6Sy8JR717BDbrw1ya5p+c6xOYOXwTbSm\nAbc+\r\n=Jq1u\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICWyBe/mm8LETZ/orlSBdzc74/wpp5d2eNFv/XwAxHpqAiA7V/EIrVF9mFUcJtKLzNYQjbjnn8g9d2beKyimZtNJyw=="}]},"_npmUser":{"name":"niieani","email":"npm@invent.life"},"directories":{},"maintainers":[{"name":"ivan","email":"ivan@barreleye.com"},{"name":"niieani","email":"npm@invent.life"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hashids_2.2.3_1607829000232_0.07844591978739524"},"_hasShrinkwrap":false},"2.2.4":{"author":{"name":"hashids.org","email":"npm@invent.life","url":"https://github.com/hashids"},"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","contributors":[{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},{"name":"Bazyli Brzóska","email":"npm@invent.life","url":"https://twitter.com/niieani"}],"version":"2.2.4","homepage":"http://hashids.org/javascript","repository":{"type":"git","url":"git+https://github.com/niieani/hashids.js.git"},"bugs":{"url":"https://github.com/niieani/hashids.js/issues"},"main":"cjs/index.js","module":"esm/index.js","exports":{".":{"import":"./esm/index.js","require":"./cjs/index.js"},"./cjs":{"require":"./cjs/index.js"},"./cjs/":{"require":"./cjs/"},"./esm/":{"import":"./esm/"}},"scripts":{"lint":"eslint lib/* tests/*","prettier:check":"prettier --check lib/* tests*/*","prettier:write":"prettier --write lib/* tests*/*","test":"jest","coverage":"jest --coverage && cat coverage/lcov.info | coveralls","build:umd":"babel lib/hashids.ts --source-maps -o dist/hashids.js","build:esm":"BABEL_MODULES=1 babel lib/hashids.ts --source-maps -o esm/index.js","minify":"cd dist && terser hashids.js -o hashids.min.js --source-map \"url=hashids.min.js.map\" --compress --mangle","build":"yarn run build:umd && yarn run build:esm && yarn run minify","clean":"rm -rf coverage yarn-debug.log","all":"yarn run lint && yarn run coverage && yarn run build && yarn run clean","semantic-release":"semantic-release","benchmark":"yarn ts-node -O '{\"module\": \"commonjs\"}' -T tests/benchmark"},"husky":{"hooks":{"pre-commit":"yarn run lint && yarn run test"}},"browserslist":["last 2 version","> 0.5%","maintained node versions","not dead"],"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.4","@babel/plugin-syntax-bigint":"^7.8.3","@babel/plugin-transform-destructuring":"^7.8.3","@babel/plugin-transform-spread":"^7.8.3","@babel/preset-env":"^7.8.4","@babel/preset-typescript":"^7.8.3","@babel/register":"^7.8.3","@types/jest":"^25.1.1","@types/node":"^13.7.0","@typescript-eslint/eslint-plugin":"^2.19.0","@typescript-eslint/parser":"^2.19.0","@yarnpkg/pnpify":"^2.0.0-rc.17","coveralls":"^3.0.9","eslint":"^6.8.0","eslint-config-prettier":"^6.10.0","eslint-import-resolver-node":"^0.3.3","eslint-plugin-eslint-comments":"^3.1.2","eslint-plugin-import":"^2.20.1","eslint-plugin-jest":"^23.6.0","husky":"^4.2.1","jest":"^25.1.0","nodemark":"^0.3.0","prettier":"^1.19.1","require-from-web":"^1.1.1","semantic-release":"^17.0.2","terser":"^4.6.3","ts-node":"^8.6.2","typescript":"^3.7.5"},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"prettier":{"semi":false,"tabWidth":2,"singleQuote":true,"trailingComma":"all","arrowParens":"always","bracketSpacing":false},"jest":{"collectCoverageFrom":["lib/**/*.ts"]},"gitHead":"38c93bffce04091a42d2e2a6e455f5f52687db42","_id":"hashids@2.2.4","_nodeVersion":"12.20.0","_npmVersion":"6.14.8","dist":{"integrity":"sha512-ogx42OUyOICoEBtiCDAsLtMeFRtiRrJGxfQo9vB5h/PHaaOxwotOgurhnjf/cy+4vPP1SVC64UJMvLM3UVXqLQ==","shasum":"c22e5668e33f90acc8703e08b57192c984675aae","tarball":"https://registry.npmjs.org/hashids/-/hashids-2.2.4.tgz","fileCount":53,"unpackedSize":3206993,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf3DZeCRA9TVsSAnZWagAA//YP/jGqMrwjk4TqMBGx8cz3\ne1tR8a7b7i4+27N07fX5p+Qb0h+RiIsx3JWJ8ahEJEQp9YBAbmfr5xo18q28\nHvX8KkJm7O0T2x5zIXtYbZSsjxyp9nAhSDVlSQp0FqG2X19SHAHNfpN7yqSM\n8Dy50/XzowamOA9AobQ6Kw2MlrEk6a8cGl0nnNn4jTMqL0zALkdRDNJshiLF\nzPCvaCg3C9q5WefK9oRcOtJsJcswt7MxQAN0ZZDFAQWc+0yTIeklwsL+MFXR\nTd/nmUIBVeCQZmo93jbeQ12fURAlyo2tzu76m6uqulGauRq9Gz7DUVIOa0lS\nSH1x3dVA/Xytw3sCKEAv1l8rCq79p3ZQdHyPzH+LEaHQuFnWvhVKE36fSFxW\nPzoACpk+WIARKjCYNyyl6dV5Zps/hAzgFASoEnSgJWfzhosdvAP7NMO3fyJw\nRDl4QB7koio32bTbNT1AfK1f9NGhvU++N/k/vLX24iUedCQFYkx348Hacs9a\n5um4LSEGbL+tb11lldjY27OJuho+ZKUQ0cGGzilieRmxGqDbduN1x+g68EsT\nqcEngl25lcp9WvRd+B10lIOZEUXmvK84TeY0UyOlfViEka5yEU6CUngEUdJd\nDUUsaDIMcjWrpGRbt/AB6d8pJhImLjeJXcpZqCowFSVCGuqJEtivioOf2F4g\nja5Z\r\n=QbnL\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIBr9M9avNuV0mG6G4aSrsPoqcKRednfV7iJEppffsx4OAiBdeO1VQvWpMsLvzS6GuqoYksNAFM0/2uA9FS+Ic2xdFw=="}]},"_npmUser":{"name":"niieani","email":"npm@invent.life"},"directories":{},"maintainers":[{"name":"ivan","email":"ivan@barreleye.com"},{"name":"niieani","email":"npm@invent.life"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hashids_2.2.4_1608267358238_0.43334800054535827"},"_hasShrinkwrap":false},"2.2.5":{"author":{"name":"hashids.org","email":"npm@invent.life","url":"https://github.com/hashids"},"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","contributors":[{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},{"name":"Bazyli Brzóska","email":"npm@invent.life","url":"https://twitter.com/niieani"}],"version":"2.2.5","homepage":"http://hashids.org/javascript","repository":{"type":"git","url":"git+https://github.com/niieani/hashids.js.git"},"bugs":{"url":"https://github.com/niieani/hashids.js/issues"},"main":"cjs/index.js","module":"esm/index.js","exports":{".":{"import":"./esm/index.js","require":"./cjs/index.js"},"./cjs":{"require":"./cjs/index.js"},"./cjs/":{"require":"./cjs/"},"./esm/":{"import":"./esm/"}},"scripts":{"lint":"eslint lib/* tests/*","prettier:check":"prettier --check lib/* tests*/*","prettier:write":"prettier --write lib/* tests*/*","test":"jest","coverage":"jest --coverage && cat coverage/lcov.info | coveralls","build:umd":"babel lib/hashids.ts --source-maps -o dist/hashids.js","build:esm":"BABEL_MODULES=1 babel lib/hashids.ts --source-maps -o esm/index.js","minify":"cd dist && terser hashids.js -o hashids.min.js --source-map \"url=hashids.min.js.map\" --compress --mangle","build":"yarn run build:umd && yarn run build:esm && yarn run minify","clean":"rm -rf coverage yarn-debug.log","all":"yarn run lint && yarn run coverage && yarn run build && yarn run clean","semantic-release":"semantic-release","benchmark":"yarn ts-node -O '{\"module\": \"commonjs\"}' -T tests/benchmark"},"husky":{"hooks":{"pre-commit":"yarn run lint && yarn run test"}},"browserslist":["last 2 version","> 0.5%","maintained node versions","not dead"],"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.4","@babel/plugin-syntax-bigint":"^7.8.3","@babel/plugin-transform-destructuring":"^7.8.3","@babel/plugin-transform-spread":"^7.8.3","@babel/preset-env":"^7.8.4","@babel/preset-typescript":"^7.8.3","@babel/register":"^7.8.3","@types/jest":"^25.1.1","@types/node":"^13.7.0","@typescript-eslint/eslint-plugin":"^2.19.0","@typescript-eslint/parser":"^2.19.0","@yarnpkg/pnpify":"^2.0.0-rc.17","coveralls":"^3.0.9","eslint":"^6.8.0","eslint-config-prettier":"^6.10.0","eslint-import-resolver-node":"^0.3.3","eslint-plugin-eslint-comments":"^3.1.2","eslint-plugin-import":"^2.20.1","eslint-plugin-jest":"^23.6.0","husky":"^4.2.1","jest":"^25.1.0","nodemark":"^0.3.0","prettier":"^1.19.1","require-from-web":"^1.1.1","semantic-release":"^17.0.2","terser":"^4.6.3","ts-node":"^8.6.2","typescript":"^3.7.5"},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"prettier":{"semi":false,"tabWidth":2,"singleQuote":true,"trailingComma":"all","arrowParens":"always","bracketSpacing":false},"jest":{"collectCoverageFrom":["lib/**/*.ts"]},"gitHead":"602ff0ca55d641567d2b693cfeac97b50ab0db73","_id":"hashids@2.2.5","_nodeVersion":"12.20.0","_npmVersion":"6.14.8","dist":{"integrity":"sha512-uFfwz6LRcIoNdwsUrV/aYvkiTI2LtBJ8Gu+1ObfnX45Kv5fMqJvA9wxXIH55qwAuCfHvP/txpNJWxyrsPoAsIQ==","shasum":"ec33730902b771cdfade6a0089363be6877ed51b","tarball":"https://registry.npmjs.org/hashids/-/hashids-2.2.5.tgz","fileCount":15,"unpackedSize":123160,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf3DePCRA9TVsSAnZWagAAXmkP/3A6q1BQ4/youBQT+WVf\naM6PrQ7VaUdRW6a1Xu3J6d8qopBInSBF6Eeuv4WLFitVPtgjAD06eVazOP8Q\nTJN79kygjXqpBFnH1ZLldM4QqmlViDUhxRCc2EoxNvvSzsiQ3InF6S0BHrWN\n1vkeishcpJ2UBrNkBE4OXazLa+eTmb5S5tn9CFL4NsWr6tAzYbkQG3gt5t1P\n+8fWhf9uBm4RgeEMIFzzART2HB89QexuKPHT8Ky+JiT6+BaOmFKWQx/id0CW\nG8w+T4lqpkCa5n/7xEj8zhDIthbsej7T5lWrDEA6qGzaKRCS81NZsr0pir8D\nKtN4BxZG5qaegz5GOpdbDzLOGfO3PUKQYqz9qHUF3y5k9mgZISIyuPQ9MKWp\nplL3UeuuCBrs/NG8HCefJQvFkegof3tM00W6LdmmMW4guXkX2+2ZjTdajnxY\nuk6QhwBUAP/s23EWqTRwsf36PHuaBudqunb5aMaH7qf+/5qAYIT0DAEWtTfi\nGF2i6PzGztKUnYgKK+PNbR66EsEdRhUatk+e160eyZTAWzDxq1cZqhfxXTF+\nkRTQVUlcdm3h2QeLaYkdS3Ke91+sHcGMl+ocE8oyJABZ48T6/oWM85Sr3huU\nE4RpFJZcYxOEWijItuvMks+9ZHx561vTqbrJKzH9p0nobgh3mxA5Msdr2RUm\n696U\r\n=U+y/\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIA5P6Seb+0T75JBQ4VBZw91sddftxiZI8aB2wZiBlhnJAiEA3svpDq8whGe5hVKIVpcPd2Z3HR1t+OFODimXbcBtYcc="}]},"_npmUser":{"name":"niieani","email":"npm@invent.life"},"directories":{},"maintainers":[{"name":"ivan","email":"ivan@barreleye.com"},{"name":"niieani","email":"npm@invent.life"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hashids_2.2.5_1608267663122_0.18888411023589313"},"_hasShrinkwrap":false},"2.2.6":{"author":{"name":"hashids.org","email":"npm@invent.life","url":"https://github.com/hashids"},"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","contributors":[{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},{"name":"Bazyli Brzóska","email":"npm@invent.life","url":"https://twitter.com/niieani"}],"version":"2.2.6","homepage":"http://hashids.org/javascript","repository":{"type":"git","url":"git+https://github.com/niieani/hashids.js.git"},"bugs":{"url":"https://github.com/niieani/hashids.js/issues"},"main":"cjs/index.js","module":"esm/index.js","exports":{".":{"import":"./esm/index.js","require":"./cjs/index.js"},"./cjs":{"require":"./cjs/index.js"},"./cjs/":{"require":"./cjs/"},"./esm/":{"import":"./esm/"},"./package.json":"./package.json"},"scripts":{"lint":"eslint lib/* tests/*","prettier:check":"prettier --check lib/* tests*/*","prettier:write":"prettier --write lib/* tests*/*","test":"jest","coverage":"jest --coverage && cat coverage/lcov.info | coveralls","build:umd":"babel lib/hashids.ts --source-maps -o dist/hashids.js","build:esm":"BABEL_MODULES=1 babel lib/hashids.ts --source-maps -o esm/index.js","minify":"cd dist && terser hashids.js -o hashids.min.js --source-map \"url=hashids.min.js.map\" --compress --mangle","build":"yarn run build:umd && yarn run build:esm && yarn run minify","clean":"rm -rf coverage yarn-debug.log","all":"yarn run lint && yarn run coverage && yarn run build && yarn run clean","semantic-release":"semantic-release","benchmark":"yarn ts-node -O '{\"module\": \"commonjs\"}' -T tests/benchmark"},"husky":{"hooks":{"pre-commit":"yarn run lint && yarn run test"}},"browserslist":["last 2 version","> 0.5%","maintained node versions","not dead"],"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.4","@babel/plugin-syntax-bigint":"^7.8.3","@babel/plugin-transform-destructuring":"^7.8.3","@babel/plugin-transform-spread":"^7.8.3","@babel/preset-env":"^7.8.4","@babel/preset-typescript":"^7.8.3","@babel/register":"^7.8.3","@types/jest":"^26.0.19","@types/node":"^13.7.0","@typescript-eslint/eslint-plugin":"^2.19.0","@typescript-eslint/parser":"^2.19.0","@yarnpkg/pnpify":"^2.0.0-rc.17","coveralls":"^3.0.9","eslint":"^6.8.0","eslint-config-prettier":"^6.10.0","eslint-import-resolver-node":"^0.3.3","eslint-plugin-eslint-comments":"^3.1.2","eslint-plugin-import":"^2.20.1","eslint-plugin-jest":"^23.6.0","husky":"^4.2.1","jest":"^25.1.0","nodemark":"^0.3.0","prettier":"^1.19.1","require-from-web":"^1.1.1","semantic-release":"^17.0.2","terser":"^4.6.3","ts-node":"^8.6.2","typescript":"^3.7.5"},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"prettier":{"semi":false,"tabWidth":2,"singleQuote":true,"trailingComma":"all","arrowParens":"always","bracketSpacing":false},"jest":{"collectCoverageFrom":["lib/**/*.ts"]},"gitHead":"b36555978d287ed09c97ddc5e5f0990f74b4cfb3","_id":"hashids@2.2.6","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-WnYRaTw6cVLOsPTeqKPDlCvJ6TtvfytXXNeuEvVLrk2QGMcFWrWc4bv6VgFO30LqY+vkUDALQ0K9+R9w68DMKg==","shasum":"7a813240aa373878804531c1922d436a1f2f6c0a","tarball":"https://registry.npmjs.org/hashids/-/hashids-2.2.6.tgz","fileCount":15,"unpackedSize":123201,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf3Fk6CRA9TVsSAnZWagAAtKwP/0sOW3kSQ7HngfyQVqut\nq3IgrrEi5AYAy9Rzek0WJQu3vcugwsYkZqZJje+74wfxMMEQKfLEQ3I7Z8qC\npdz+UrHiVHCxK3cl1e9GOkvKBUfAhegQqDBxf44iywVTEBv9Syquf7bKn8XJ\nyUSyAr8Fk5xFLoLdGHcmuGCHoF+/Qzr5zlBtiOkEkUYB0W1a+a/QYf8gHPan\nJ/hrfSxJPDyku47lT72IJ6iCe0k6BjyGJNiIcYEzU7BSN2L60aSf81YVP6/f\nv/gmP5BwSe/EHSsxiCgzB31d4cZYZNAl6pBCHZuT2ttGEmAJRyBGtR64r/Oe\nupAsqYAQXycVVaSca37HhiU003YU7Sli7GEyz1cD557phigTO73KSHe5QKXf\nkw1VcE/upQ9TkXo/98aUb9xuTvFq9gn46mze+HZWT22ScYLFc5tf2u2wHE5V\nqOUsQqUSRL/uTM3MLTqfpLk/OTFa70OCAVhnL839YLMzTybcy9Wpkj8860iE\nYxRbe+0Ao4Lr7QYOc5yo+atOmaflWRbuoJd1OQ7lO7Tq6yxi8DpqqSVC1bEF\nxaTwPLh8Yo1WSvI9UniRuvIl8YquQPCy2QYqqg5WXOqEjhmjgkPJkcBHAj2P\nUmuyUFqIkHj9xFJVj5FY07UZdk/TVJ61puAmP2uV2A3EBVyGDiYjgyHJPHXe\nAb0E\r\n=IB1G\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDpBent3q5CTSoszf3eTQw2yjWHyxVFPCPcVGKLtEjqdAIhAO+iqFgiyJvPiiY1GNeRCMABNu+Y0tl2AhHqSUShRbS3"}]},"_npmUser":{"name":"niieani","email":"npm@invent.life"},"directories":{},"maintainers":[{"name":"ivan","email":"ivan@barreleye.com"},{"name":"niieani","email":"npm@invent.life"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hashids_2.2.6_1608276281726_0.15273021333541026"},"_hasShrinkwrap":false},"2.2.7":{"author":{"name":"hashids.org","email":"npm@invent.life","url":"https://github.com/hashids"},"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","contributors":[{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},{"name":"Bazyli Brzóska","email":"npm@invent.life","url":"https://twitter.com/niieani"}],"version":"2.2.7","homepage":"http://hashids.org/javascript","repository":{"type":"git","url":"git+https://github.com/niieani/hashids.js.git"},"bugs":{"url":"https://github.com/niieani/hashids.js/issues"},"main":"cjs/index.js","module":"esm/index.js","exports":{".":{"import":"./esm/index.js","require":"./cjs/index.js"},"./cjs":{"require":"./cjs/index.js"},"./cjs/":{"require":"./cjs/"},"./esm/":{"import":"./esm/"},"./package.json":"./package.json"},"scripts":{"lint":"eslint lib/* tests/*","prettier:check":"prettier --check lib/* tests*/*","prettier:write":"prettier --write lib/* tests*/*","test":"jest","coverage":"jest --coverage && cat coverage/lcov.info | coveralls","build:umd":"babel lib/hashids.ts --source-maps -o dist/hashids.js && replace-in-files --string='global.Hashids = mod.exports;' --replacement='global.Hashids = mod.exports.default;' dist/hashids.js","build:esm":"BABEL_MODULES=1 babel lib/hashids.ts --source-maps -o esm/index.js","minify":"cd dist && terser hashids.js -o hashids.min.js --source-map \"url=hashids.min.js.map\" --compress --mangle","build":"yarn run build:umd && yarn run build:esm && yarn run minify","clean":"rm -rf coverage yarn-debug.log","all":"yarn run lint && yarn run coverage && yarn run build && yarn run clean","semantic-release":"semantic-release","benchmark":"yarn ts-node -O '{\"module\": \"commonjs\"}' -T tests/benchmark"},"husky":{"hooks":{"pre-commit":"yarn run lint && yarn run test"}},"browserslist":["last 2 version","> 0.5%","maintained node versions","not dead"],"devDependencies":{"@babel/cli":"^7.12.10","@babel/core":"^7.12.10","@babel/helper-plugin-utils":"^7.10.4","@babel/plugin-syntax-bigint":"^7.8.3","@babel/plugin-transform-destructuring":"^7.12.1","@babel/plugin-transform-modules-umd":"^7.12.1","@babel/plugin-transform-spread":"^7.12.1","@babel/preset-env":"^7.12.11","@babel/preset-typescript":"^7.12.7","@babel/register":"^7.12.10","@types/jest":"^26.0.19","@types/node":"^14.14.14","@typescript-eslint/eslint-plugin":"^4.10.0","@typescript-eslint/parser":"^4.10.0","@yarnpkg/pnpify":"^2.4.0","coveralls":"^3.1.0","eslint":"^7.15.0","eslint-config-prettier":"^7.0.0","eslint-import-resolver-node":"^0.3.4","eslint-plugin-eslint-comments":"^3.2.0","eslint-plugin-import":"^2.22.1","eslint-plugin-jest":"^24.1.3","husky":"^4.3.6","jest":"^26.6.3","nodemark":"^0.3.0","prettier":"^2.2.1","replace-in-files-cli":"^1.0.0","require-from-web":"^1.2.0","semantic-release":"^17.3.0","terser":"^5.5.1","ts-node":"^9.1.1","typescript":"^4.1.3"},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"prettier":{"semi":false,"tabWidth":2,"singleQuote":true,"trailingComma":"all","arrowParens":"always","bracketSpacing":false},"jest":{"collectCoverageFrom":["lib/**/*.ts"]},"gitHead":"8cca7bd72205d9279d1b3d27d69380f1f06ab49f","_id":"hashids@2.2.7","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-3HLBg0AuI+1Bn+B4OKSVUb0lTfSZNkxFXUnr+C7wxiPtJOmSsHsDTBBn66X5D3y+mR72g90joiJYhxcElnV/ug==","shasum":"b64e9414c25e37ae7042fbb9463cc4cddf744929","tarball":"https://registry.npmjs.org/hashids/-/hashids-2.2.7.tgz","fileCount":15,"unpackedSize":126965,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf3G7HCRA9TVsSAnZWagAAn/4P/0RFfiua+/fkILXfmcLB\niVXr/wY0e94zmrHevl7E6McRaOpoHhJcACtGHb8MUgrmrpYTsN3LoTE9yzXv\naFQ1uGr1iY6bjYPO/3l1kMU5l6FWE1Eeri5xTJCGZH70bFFDuMpFIBTM22LN\nIve62jkUnAGqX+FRjT57yG2U1XfUEIx8BVpAZ20Mq5ZElzy6D2Pjm2HGtkJo\nSLCKl9WrqzJm/XTaHwkKnakricmIDFOF60sBWPDBXyVLKO4E+2J8p+yeRvXg\ngmmp4AHe1LzYmZ6N3Wl2cGqF4meniYUjoiPIeRm+n5GQSKX/C/w6TRo9r+aT\nkwSNF9KuECmuaNQZBIIoWUCwkw3TgpPz9hj89UqfAM7CT+eE+WzcviuR845p\nrjchlOGB6X4gjtXIkJlmVu68o9ol4qxfPdMPwFU0uHeS2B0IQ/6IXSkmHJuD\nTlFmpahvMmfQ/7F/jBI6u4oeQNN7mLeHtuZRnEVlW8fCdzLx44uL/4nl/VRj\niHCHLhmIF9pB6149tYs9n17/RFZHRjZZSKAVVkrauB38KxXs6QTtguOQhnrP\n7FouiK6h2M6qYPMAAKGBg+i5agRLK1Goh+mBzoJA4ePGre2uYUbzZaonsLeE\nEwDzOb3oTZnq5KBJ4U9Zwk8kG1kobkNZPDoyojAXu4VxsmAy4cpCIpp0p/7+\nQkEL\r\n=E7sr\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIBGBWki32yrE6d1c/53BfnfwdIhreXHDlDNO3zc9KgwLAiBYXWVxVhoVGONKZ3Rathly25WG10IfrE5x13k2RrpsJg=="}]},"_npmUser":{"name":"niieani","email":"npm@invent.life"},"directories":{},"maintainers":[{"name":"ivan","email":"ivan@barreleye.com"},{"name":"niieani","email":"npm@invent.life"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hashids_2.2.7_1608281798871_0.4373313660620397"},"_hasShrinkwrap":false},"2.2.8":{"author":{"name":"hashids.org","email":"npm@invent.life","url":"https://github.com/hashids"},"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","contributors":[{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},{"name":"Bazyli Brzóska","email":"npm@invent.life","url":"https://twitter.com/niieani"}],"version":"2.2.8","homepage":"http://hashids.org/javascript","repository":{"type":"git","url":"git+https://github.com/niieani/hashids.js.git"},"bugs":{"url":"https://github.com/niieani/hashids.js/issues"},"main":"cjs/index.js","module":"esm/index.js","exports":{".":{"import":"./esm/index.js","require":"./cjs/index.js"},"./cjs":{"require":"./cjs/index.js"},"./cjs/":{"require":"./cjs/"},"./esm/":{"import":"./esm/"},"./package.json":"./package.json"},"scripts":{"lint":"eslint lib/* tests/*","prettier:check":"prettier --check lib/* tests*/*","prettier:write":"prettier --write lib/* tests*/*","test":"yarn prettier:check && yarn lint && yarn jest","coverage":"jest --coverage && cat coverage/lcov.info | coveralls","build:umd":"babel lib/hashids.ts --source-maps -o dist/hashids.js && replace-in-files --string='global.Hashids = mod.exports;' --replacement='global.Hashids = mod.exports.default;' dist/hashids.js","build:esm":"BABEL_MODULES=1 babel lib/hashids.ts --source-maps -o esm/index.js","minify":"cd dist && terser hashids.js -o hashids.min.js --source-map \"url=hashids.min.js.map\" --compress --mangle","build":"yarn run build:umd && yarn run build:esm && yarn run minify","clean":"rm -rf coverage yarn-debug.log","all":"yarn run lint && yarn run coverage && yarn run build && yarn run clean","release":"./release.sh","semantic-release":"semantic-release","benchmark":"yarn ts-node -O '{\"module\": \"commonjs\"}' -T tests/benchmark"},"husky":{"hooks":{"pre-commit":"yarn run lint && yarn run test"}},"browserslist":["last 2 version","> 0.5%","maintained node versions","not dead"],"devDependencies":{"@babel/cli":"^7.12.10","@babel/core":"^7.12.10","@babel/helper-plugin-utils":"^7.10.4","@babel/plugin-syntax-bigint":"^7.8.3","@babel/plugin-transform-destructuring":"^7.12.1","@babel/plugin-transform-modules-umd":"^7.12.1","@babel/plugin-transform-spread":"^7.12.1","@babel/preset-env":"^7.12.11","@babel/preset-typescript":"^7.12.7","@babel/register":"^7.12.10","@types/jest":"^26.0.19","@types/node":"^14.14.14","@typescript-eslint/eslint-plugin":"^4.10.0","@typescript-eslint/parser":"^4.10.0","@yarnpkg/pnpify":"^2.4.0","coveralls":"^3.1.0","eslint":"^7.15.0","eslint-config-prettier":"^7.0.0","eslint-import-resolver-node":"^0.3.4","eslint-plugin-eslint-comments":"^3.2.0","eslint-plugin-import":"^2.22.1","eslint-plugin-jest":"^24.1.3","husky":"^4.3.6","jest":"^26.6.3","nodemark":"^0.3.0","prettier":"^2.2.1","replace-in-files-cli":"^1.0.0","require-from-web":"^1.2.0","semantic-release":"^17.3.0","terser":"^5.5.1","ts-node":"^9.1.1","typescript":"^4.1.3"},"license":"MIT","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"prettier":{"semi":false,"tabWidth":2,"singleQuote":true,"trailingComma":"all","arrowParens":"always","bracketSpacing":false},"jest":{"collectCoverageFrom":["lib/**/*.ts"]},"gitHead":"2c1ca088773eb97e3783bd549f56eed9afcc335d","_id":"hashids@2.2.8","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","dist":{"integrity":"sha512-OI6rsk/OqyX60nBsqxnNl3R7CDv9eMOgxzipshZwXE6cUcBcEyHf8rNDlWVdQJZK3TEynILYybCsNUEQfJsdLA==","shasum":"d1e4e1be48e711ad6e5f27b32c37c399d5eeb5b4","tarball":"https://registry.npmjs.org/hashids/-/hashids-2.2.8.tgz","fileCount":15,"unpackedSize":127246,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf3HiwCRA9TVsSAnZWagAA3KQP/A6tKxD8t8rydxMH+fxz\nQEFyhboBNxNLPA14oO5lcp94pyxoIInqiRVpTXRzYOCpvlJrXiCXNX8cOqfV\n1eU0bPLRgjhzhq59cdsvnU2RVEl/01YA05GFRZgcXoxl+DiC0bQ+RZtpz9lf\nTI4rJlVqvl93SC01oruOeA8irISSHIn6g8dxD1+4uSYnFKPZu3YnGEhd2IT4\nUKt8vtQCgdCDbW/QANu7IXM0n5yw6XFgv58p97P4RSCBFU/6MKkSPHqKnbsN\n/EmkIVZrrqEgSQWHTMMDndwLxYr1vIR3QDaEIAANBpXoUWs1kts8aXc07TgN\neqBAjJTaud0p3LUHp/CpqKUHrbg06sv0EzugFsCa9V23KhlJqf+Y6hRorQ36\n0X/jIDipWklmAgbt6u1oI21TA60CH0xTh4OqzKSMdhsPQPFfzA501m4PAVr3\ngq2aWN8VmC5iMBn/kZRF9gD2HuFx14odxWYFwNDUMYdaRSNJ/d47YgJm/VVb\no/3m9Hc2lg58+wMlFw4soKKtPEN6t74zPIFHnI7mFV70ChwdHbtkLMSXDSiS\nmh6hReqPsKdHbZZQnEFeHFobe2fq7xv5C8EJL/Y8QOXzMYymtNNhr8CeI1Pk\nxU7Ke8a6Gl4MB39LwHwwt4rOXmIuqzjb3y1LYeupj63IOG24vkKEDDbNTBed\n67N6\r\n=rDmR\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQD2NhE55fnQpuP6tEHlCCI79De6bxB7cO4pqwjbe5ZPWAIhAJYYyq+SiLJ8pXoSxJ5lzZ3v229ToPwEWtlEFx60C6pX"}]},"_npmUser":{"name":"niieani","email":"npm@invent.life"},"directories":{},"maintainers":[{"name":"ivan","email":"ivan@barreleye.com"},{"name":"niieani","email":"npm@invent.life"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hashids_2.2.8_1608284335636_0.6631994078629004"},"_hasShrinkwrap":false},"2.2.9":{"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"homepage":"http://hashids.org/javascript","bugs":{"url":"https://github.com/niieani/hashids.js/issues"},"repository":{"type":"git","url":"git+https://github.com/niieani/hashids.js.git"},"license":"MIT","author":{"name":"hashids.org","email":"npm@invent.life","url":"https://github.com/hashids"},"contributors":[{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},{"name":"Bazyli Brzóska","email":"npm@invent.life","url":"https://twitter.com/niieani"}],"exports":{".":{"import":"./esm/hashids.js","require":"./cjs/index.js"},"./*":{"import":"./esm/*.js","require":"./cjs/*.js"},"./cjs":{"require":"./cjs/index.js"},"./cjs/*":{"require":"./cjs/*.js"},"./esm/*":{"import":"./esm/*.js"},"./package.json":"./package.json"},"main":"cjs/index.js","unpkg":"dist/hashids.js","module":"esm/hashids.js","source":"src/hashids.ts","scripts":{"benchmark":"yarn ts-node -O '{\"module\": \"commonjs\"}' -T tests/benchmark","postinstallDev":"yarn prepare","prepare":"rrun husky install .config/husky && yarn beemo create-config","build":"yarn build:cjs && yarn build:esm && yarn build:umd","release":"beemo run-script release","build:cjs":"yarn rrun tsc --outDir cjs --module commonjs --target es6 -p tsconfig.build.json","build:esm":"yarn rrun tsc --outDir esm --module esnext --target es6 -p tsconfig.build.json && ./add-extension.sh","build:umd":"beemo webpack --entry=./src/hashids.ts --env 'outDir=dist' --env 'moduleTarget=umd' --env 'engineTarget=web' --env 'codeTarget=es6' --env 'name=Hashids' --env 'export=default' --env 'filename=hashids.js'","clean":"git clean -dfX --exclude=node_modules src && beemo typescript:sync-project-refs","test:lint":"rrun eslint 'src/**'","test:code":"beemo jest","test:types":"yarn rrun tsc --noEmit","test:format":"yarn rrun prettier --check \"./{src,tests}/**/*[!.d].{.js,jsx,ts,tsx,json,md}\"","test":"yarn test:format && yarn test:types && yarn test:lint && yarn test:code","format":"yarn rrun prettier --write \"./{src,tests}/**/!(*.d).{.js,jsx,ts,tsx,json,md}\""},"browserslist":["last 2 version","> 0.5%","maintained node versions","not dead"],"devDependencies":{"@niieani/scaffold":"^1.3.4"},"publishConfig":{"access":"public"},"release":{"branches":["+([0-9])?(.{+([0-9]),x}).x","master",{"name":"main","channel":false},"next",{"name":"beta","prerelease":true},{"name":"alpha","prerelease":true}]},"version":"2.2.9","types":"./cjs/index.d.ts","gitHead":"93c63940291e6ce946f7d1d1a285e134b73b59cf","_id":"hashids@2.2.9","_nodeVersion":"16.13.0","_npmVersion":"8.1.0","dist":{"integrity":"sha512-YeNrCzo6dQxR2hd8enVqwD4m5XqA9JXUXaBaRyPNsvuiRwXDgRbLwrLfsLXb6P9aVMPWF0UXfieOUPZIJVVXxQ==","shasum":"51ebec3beb8b36540b2911113fe2d3ed51504ae4","tarball":"https://registry.npmjs.org/hashids/-/hashids-2.2.9.tgz","fileCount":20,"unpackedSize":95699,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIBQkh2tvTiaya0XzAHh+dy/3xWmndsHE4IFfeweah7CoAiBFgLFABfVvvk8QCNx+FGMCi6Q7asLY1XwTg7PEtsKr1A=="}]},"_npmUser":{"name":"niieani","email":"npm@invent.life"},"directories":{},"maintainers":[{"name":"ivan","email":"ivan@barreleye.com"},{"name":"niieani","email":"npm@invent.life"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hashids_2.2.9_1636268772262_0.3029528841720672"},"_hasShrinkwrap":false},"2.2.10":{"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"homepage":"http://hashids.org/javascript","bugs":{"url":"https://github.com/niieani/hashids.js/issues"},"repository":{"type":"git","url":"git+https://github.com/niieani/hashids.js.git"},"license":"MIT","author":{"name":"hashids.org","email":"npm@invent.life","url":"https://github.com/hashids"},"contributors":[{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},{"name":"Bazyli Brzóska","email":"npm@invent.life","url":"https://twitter.com/niieani"}],"exports":{".":{"import":"./esm/hashids.js","require":"./cjs/index.js"},"./*":{"import":"./esm/*.js","require":"./cjs/*.js"},"./cjs":{"require":"./cjs/index.js"},"./cjs/*":{"require":"./cjs/*.js"},"./esm/*":{"import":"./esm/*.js"},"./package.json":"./package.json"},"main":"cjs/index.js","unpkg":"dist/hashids.js","module":"esm/hashids.js","source":"src/hashids.ts","scripts":{"benchmark":"yarn ts-node -O '{\"module\": \"commonjs\"}' -T src/tests/benchmark","postinstallDev":"yarn prepare","prepare":"rrun husky install .config/husky && yarn beemo create-config","build":"yarn build:cjs && yarn build:esm && yarn build:umd","release":"beemo run-script release","build:cjs":"yarn rrun tsc --outDir cjs --module commonjs --target es6 -p tsconfig.build.json","build:esm":"yarn rrun tsc --outDir esm --module esnext --target es6 -p tsconfig.build.json && ./add-extension.sh","build:umd":"beemo webpack --entry=./src/hashids.ts --env 'outDir=dist' --env 'moduleTarget=umd' --env 'engineTarget=web' --env 'codeTarget=es6' --env 'name=Hashids' --env 'export=default' --env 'filename=hashids.js'","clean":"git clean -dfX --exclude=node_modules src && beemo typescript:sync-project-refs","test:lint":"rrun eslint 'src/**'","test:code":"beemo jest","test:types":"yarn rrun tsc --noEmit","test:format":"yarn rrun prettier --check \"./{src,tests}/**/*[!.d].{.js,jsx,ts,tsx,json,md}\"","test":"yarn test:format && yarn test:types && yarn test:lint && yarn test:code","format":"yarn rrun prettier --write \"./{src,tests}/**/!(*.d).{.js,jsx,ts,tsx,json,md}\""},"browserslist":["last 2 version","> 0.5%","maintained node versions","not dead"],"devDependencies":{"@niieani/scaffold":"^1.3.4","nodemark":"^0.3.0","require-from-web":"^1.2.0","ts-node":"^10.4.0"},"publishConfig":{"access":"public"},"release":{"branches":["+([0-9])?(.{+([0-9]),x}).x","master",{"name":"main","channel":false},"next",{"name":"beta","prerelease":true},{"name":"alpha","prerelease":true}]},"version":"2.2.10","types":"./cjs/index.d.ts","gitHead":"3e6e5ae05412efb14cc3f246470e908d0e6292ff","_id":"hashids@2.2.10","_nodeVersion":"16.13.0","_npmVersion":"8.1.0","dist":{"integrity":"sha512-nXnYums7F8B5Y+GSThutLPlKMaamW1yjWNZVt0WModiJfdjaDZHnhYTWblS+h1OoBx3yjwiBwxldPP3nIbFSSA==","shasum":"82f45538cf03ce73e31b78d1abe78d287cf760c4","tarball":"https://registry.npmjs.org/hashids/-/hashids-2.2.10.tgz","fileCount":40,"unpackedSize":133141,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhmEzDCRA9TVsSAnZWagAA+7oP/3P3b5b0vg+n6qBX4gew\nESJuibP9P9VsXm2jr6V/X8WHy6rn7CQY+8Rm75Pg2YSHHox4P8CwzDPAIUeu\nDxCRpKWNURSrDMSNY50SOiERnkF2+OhFV7eiXkVhOEuWH/q9c178oLVDU8JF\n7amU00SuXqrC/3PeNqt0EWVzkAWvqjd5BepLEW2ApzOaSYyhAt+b40W6Ge/f\nt+SRxhlsygBvW+6LRRa7Ptx7Jh8Ur7qwTuempirNdtJe27N2ZX3T5LjZR5Oh\nCqhCIkB7WzNgx3wqrs7hTntw0hGxcczZb0ls4/496h6UV63gHmAfDR6/v06S\nFnhd1+6EI8N4ZYU46SXSve5UywEJlMo1KE4z3bWSqcvVYatB+FYyFqpg47/x\nYUrv6VYJKAs8QYVWRdzpaq73B7EvcNBK11+ps5BulmRMW/VG9zrWYyMl+kHm\nJ35Qy79dne85WfnEsLVTcyFNKZWwu2yWpjxkt8f0+RKV5au9hBVWp9Nj5S/C\nsxLoVCB6DQWOiL+Ei/stfy/mMK+SK33yEOOSvIi6ohaaydFxcVCEmTCp3bgj\nuEkvET+yQXWr2UK7R+udCI2hG33EhXEBen9kmUuZeYDkBNYB/X6M1Uep786W\nlxASq/+bORLnnj46Av4i+BTGcc4TSTuVjTeWD1yJQmlk06JsnAYfx+dQCmga\nfFLi\r\n=Lg1P\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIA7aGR1i9aiPBTTUXZnbDIXW4BRqb9QnNoxWRzkKbkwQAiA30/hSNVS8YnOIlaxGxKxqGFBUWVZxm/7iLb8oOcEgrQ=="}]},"_npmUser":{"name":"niieani","email":"npm@invent.life"},"directories":{},"maintainers":[{"name":"ivan","email":"ivan@barreleye.com"},{"name":"niieani","email":"npm@invent.life"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hashids_2.2.10_1637371075181_0.8357120269233214"},"_hasShrinkwrap":false},"2.2.11":{"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"homepage":"http://hashids.org/javascript","bugs":{"url":"https://github.com/niieani/hashids.js/issues"},"repository":{"type":"git","url":"git+https://github.com/niieani/hashids.js.git"},"license":"MIT","author":{"name":"hashids.org","email":"npm@invent.life","url":"https://github.com/hashids"},"contributors":[{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},{"name":"Bazyli Brzóska","email":"npm@invent.life","url":"https://twitter.com/niieani"}],"exports":{".":{"import":"./esm/hashids.js","require":"./cjs/index.js"},"./*":{"import":"./esm/*.js","require":"./cjs/*.js"},"./cjs":{"require":"./cjs/index.js"},"./cjs/*":{"require":"./cjs/*.js"},"./esm/*":{"import":"./esm/*.js"},"./package.json":"./package.json"},"main":"cjs/index.js","unpkg":"dist/hashids.js","module":"esm/hashids.js","source":"src/hashids.ts","scripts":{"benchmark":"yarn ts-node -O '{\"module\": \"commonjs\"}' -T src/tests/benchmark","postinstallDev":"yarn prepare","prepare":"rrun husky install .config/husky && yarn beemo create-config","build":"yarn build:cjs && yarn build:esm && yarn build:umd","release":"beemo run-script release","build:cjs":"yarn rrun tsc --outDir cjs --module commonjs --target es6 -p tsconfig.build.json","build:esm":"yarn rrun tsc --outDir esm --module esnext --target es6 -p tsconfig.build.json && ./add-extension.sh","build:umd":"beemo webpack --entry=./src/hashids.ts --env 'outDir=dist' --env 'moduleTarget=umd' --env 'engineTarget=web' --env 'codeTarget=es6' --env 'name=Hashids' --env 'export=default' --env 'filename=hashids.js'","clean":"git clean -dfX --exclude=node_modules src && beemo typescript:sync-project-refs","test:lint":"rrun eslint 'src/**'","test:code":"beemo jest","test:types":"yarn rrun tsc --noEmit","test:format":"yarn rrun prettier --check \"./{src,tests}/**/*[!.d].{.js,jsx,ts,tsx,json,md}\"","test":"yarn test:format && yarn test:types && yarn test:lint && yarn test:code","format":"yarn rrun prettier --write \"./{src,tests}/**/!(*.d).{.js,jsx,ts,tsx,json,md}\""},"browserslist":["last 2 version","> 0.5%","maintained node versions","not dead"],"devDependencies":{"@niieani/scaffold":"^1.6.7","nodemark":"^0.3.0","require-from-web":"^1.2.0","ts-node":"^10.9.1"},"publishConfig":{"access":"public"},"release":{"branches":["+([0-9])?(.{+([0-9]),x}).x","master",{"name":"main","channel":false},"next",{"name":"beta","prerelease":true},{"name":"alpha","prerelease":true}]},"packageManager":"yarn@3.4.1","version":"2.2.11","types":"./cjs/index.d.ts","gitHead":"046392fe43104f72ce88cb6db891af1a3502cdc9","_id":"hashids@2.2.11","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-e1rAPT5Wa9vf/Dq1eq8LFw5VH2dtKxRf6k9bCw0GLwKL/SRnUphIcqwJWUZ1ki18cdj03nCrpdlJOcyHILQk8Q==","shasum":"825d3197742f4326d01645f125e09c026eb76e8b","tarball":"https://registry.npmjs.org/hashids/-/hashids-2.2.11.tgz","fileCount":40,"unpackedSize":133199,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICLxp7avfqw38G9qAVsJNoR9JJZQ/Eh9Uf8oxPqbBaVqAiBshnmat3vHRyw4o+8qwrhWb9swjnupU4ZVmA+SQKtTYw=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj7qV5ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqt1A/+KK5X0ICPJp7Vsw+A4OhVnVIJOxJMZBTBVd7yJUIcqto9IS7Q\r\nVa9PtxJXr83wn6Y4uLsvX9BuAeFysPd4JXAiJ3Zc3T/NLO2ik1q4+d13+/ei\r\ndvnAIUsMiKraVqfOF67Ct98qtn7Y9lBRcmRkV32zejITvNHU+fDKeZV1pV9r\r\ncRa8jtrmKe4B/fTHebhMt9FdfYMIHAlzkTrRikraH8JxFGa3D58YpBg6xyGf\r\nAH7eV0tqeBKUtpIWl+Arurbu6YsF2iTvNyjLmDXMepv4bsnmMet/XHCidy8C\r\ngAtWHkkwo6OVetH1A1aEn1bGq9R8aMkbPCCvU/lg/0/sdIUMF0T27f0JNUxD\r\nMTNez9LcoDyy2LnDL3pJ4le+1c8WsCXlH12jjcCb+D136QpnDib2n7fz7O/U\r\nrkbLE+CDh+W1CSBLTjWxzdAWjZYBC+oLWAN/Jyut2Y11u/Gh7GqlMJlSLk/w\r\nXibd3gKOzqLqrbdX5X/V0YzU6ou12ahDzSkKu14YYWWTXPbrL3ATbcp3IZTR\r\nT0aJPj60rvLeW4sebTaL8TKB6HXWxVbKIkICWX+5/Q3pBKgD2ZqUi/iA9Gyz\r\nl9BiN0fcvd7SFPpKg/tsax9tgqFPGktvnWpNCaKaz2HiYjOlD1fRdubdLTxl\r\nnlK8fXsmq3Ht7innizgcqFZgK43iqYIXwCU=\r\n=/aet\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"niieani","email":"npm@invent.life"},"directories":{},"maintainers":[{"name":"ivan","email":"ivan@barreleye.com"},{"name":"niieani","email":"npm@invent.life"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hashids_2.2.11_1676584313548_0.39606530556918096"},"_hasShrinkwrap":false},"2.3.0":{"name":"hashids","description":"Generate YouTube-like ids from numbers. Use Hashids when you do not want to expose your database ids to the user.","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"homepage":"http://hashids.org/javascript","bugs":{"url":"https://github.com/niieani/hashids.js/issues"},"repository":{"type":"git","url":"git+https://github.com/niieani/hashids.js.git"},"license":"MIT","author":{"name":"hashids.org","email":"npm@invent.life","url":"https://github.com/hashids"},"contributors":[{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},{"name":"Bazyli Brzóska","email":"npm@invent.life","url":"https://twitter.com/niieani"}],"exports":{".":{"import":"./esm/hashids.js","require":"./cjs/index.js"},"./*":{"import":"./esm/*.js","require":"./cjs/*.js"},"./cjs":{"require":"./cjs/index.js"},"./cjs/*":{"require":"./cjs/*.js"},"./esm/*":{"import":"./esm/*.js"},"./package.json":"./package.json"},"main":"cjs/index.js","unpkg":"dist/hashids.js","module":"esm/hashids.js","source":"src/hashids.ts","scripts":{"benchmark":"yarn ts-node -O '{\"module\": \"commonjs\"}' -T src/tests/benchmark","postinstallDev":"yarn prepare","prepare":"rrun husky install .config/husky && yarn beemo create-config","build":"yarn build:cjs && yarn build:esm && yarn build:umd","release":"beemo run-script release","build:cjs":"yarn rrun tsc --outDir cjs --module commonjs --target es6 -p tsconfig.build.json","build:esm":"yarn rrun tsc --outDir esm --module esnext --target es6 -p tsconfig.build.json && ./add-extension.sh","build:umd":"beemo webpack --entry=./src/hashids.ts --env 'outDir=dist' --env 'moduleTarget=umd' --env 'engineTarget=web' --env 'codeTarget=es6' --env 'name=Hashids' --env 'export=default' --env 'filename=hashids.js'","clean":"git clean -dfX --exclude=node_modules src && beemo typescript:sync-project-refs","test:lint":"rrun eslint 'src/**'","test:code":"beemo jest","test:types":"yarn rrun tsc --noEmit","test:format":"yarn rrun prettier --check \"./{src,tests}/**/*[!.d].{.js,jsx,ts,tsx,json,md}\"","test":"yarn test:format && yarn test:types && yarn test:lint && yarn test:code","format":"yarn rrun prettier --write \"./{src,tests}/**/!(*.d).{.js,jsx,ts,tsx,json,md}\""},"browserslist":["last 2 version","> 0.5%","maintained node versions","not dead"],"devDependencies":{"@niieani/scaffold":"^1.7.0","nodemark":"^0.3.0","require-from-web":"^1.2.0","ts-node":"^10.9.1"},"publishConfig":{"access":"public"},"release":{"branches":["+([0-9])?(.{+([0-9]),x}).x","master",{"name":"main","channel":false},"next",{"name":"beta","prerelease":true},{"name":"alpha","prerelease":true}]},"packageManager":"yarn@3.5.1","version":"2.3.0","types":"./cjs/index.d.ts","gitHead":"bcbf47f1fccda6646e4bba627c4f9a4335630149","_id":"hashids@2.3.0","_nodeVersion":"16.20.0","_npmVersion":"8.19.4","dist":{"integrity":"sha512-ljM73TE/avEhNnazxaj0Dw3BbEUuLC5yYCQ9RSkSUcT4ZSU6ZebdKCIBJ+xT/DnSYW36E9k82GH1Q6MydSIosQ==","shasum":"af92c9cdb093c0ed3542cf0dcbd6c289125df387","tarball":"https://registry.npmjs.org/hashids/-/hashids-2.3.0.tgz","fileCount":40,"unpackedSize":136829,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDdB5HtF1k2K585XcJFw973OeLCqzNfZYagXw4wXBM0yAIgVL++YpFiVcyzNZgFOFPOKCwwh4QRgpaqkTjiXSnBGzg="}]},"_npmUser":{"name":"niieani","email":"npm@invent.life"},"directories":{},"maintainers":[{"name":"ivan","email":"ivan@barreleye.com"},{"name":"niieani","email":"npm@invent.life"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hashids_2.3.0_1684899505070_0.05143355757607471"},"_hasShrinkwrap":false}},"readme":"[![hashids](http://hashids.org/public/img/hashids.gif 'Hashids')](http://hashids.org/)\n\n[![Build Status][travis-image]][travis-url]\n[![Coveralls Status][coveralls-image]][coveralls-url]\n[![NPM downloads][npm-downloads-image]][npm-url]\n[![NPM version][npm-version-image]][npm-url]\n[![License][license-image]][license-url]\n[![Chat][chat-image]][chat-url]\n\n**Hashids** is small JavaScript library to generate YouTube-like ids from numbers. Use it when you don't want to expose your database ids to the user: [http://hashids.org/javascript](http://hashids.org/javascript)\n\n[![Play with it using CodeSandbox](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/hashids-demo-54qvc?fontsize=14&hidenavigation=1&module=%2Fsrc%2Findex.ts&theme=dark)\n\n## Getting started\n\nInstall Hashids via:\n\n```shell\nyarn add hashids\n```\n\n(or just directly use the code at `dist/hashids.js`)\n\n#### Use in **ESM-compatible** environments (webpack, modern browsers)\n\n```javascript\nimport Hashids from 'hashids'\nconst hashids = new Hashids()\n\nconsole.log(hashids.encode(1))\n```\n\n#### Use in **CommonJS** environments (most often **Node.js**)\n\n```javascript\nconst Hashids = require('hashids/cjs')\nconst hashids = new Hashids()\n\nconsole.log(hashids.encode(1))\n```\n\nNote: When using Node that supports [conditional exports](https://nodejs.org/api/esm.html#esm_conditional_exports), `require('hashids')` (version >=13) will also work.\n\n#### Use as global in the browser (wherever **ES6** is supported; 5KB)\n\n```html\n<script type=\"text/javascript\" src=\"hashids.min.js\"></script>\n<script type=\"text/javascript\">\n\n    var hashids = new Hashids();\n    console.log(hashids.encode(1));\n\n</script>\n```\n\n#### Use in **TypeScript**:\n\n`import` or `require`, based on the environment (see above). If you want to use the CommonJS module syntax (`require`), you'll need to install the Node.js types from the `DefinitelyTyped` repository.\n\n```\nnpm install @types/node\n```\n\nIf you want to use the ESM syntax (`import Hashids from 'hashids'`), you will need to include the following options in your `tsconfig.json`.\n\n```json\n{\n  \"allowSyntheticDefaultImports\": true,\n  \"esModuleInterop\": true\n}\n```\n\nThe above is not required if you import the CommonJS version directly: `import Hashids from 'hashids/cjs'`.\n\nIf you get errors stating: `Cannot find name 'BigInt'`, add [`\"esnext.bigint\"`](https://github.com/microsoft/TypeScript/blob/master/src/lib/esnext.bigint.d.ts) or [`\"esnext\"`](https://github.com/microsoft/TypeScript/blob/master/src/lib/esnext.d.ts) to your `tsconfig.json` file, under `\"lib\"`:\n\n```json\n{\n  \"compilerOptions\": {\n    ...\n    \"lib\": [\n      \"esnext.bigint\",\n      ...\n    ]\n  }\n}\n```\n\nNote that your environment doesn't actually have to support `BigInt` for hashids to function.\n\n## Quick example\n\n```javascript\nconst hashids = new Hashids()\n\nconst id = hashids.encode(1, 2, 3) // o2fXhV\nconst numbers = hashids.decode(id) // [1, 2, 3]\n```\n\n## More options\n\n**A few more ways to pass to `encode()`:**\n\n```javascript\nconst hashids = new Hashids()\n\nconsole.log(hashids.encode(1, 2, 3)) // o2fXhV\nconsole.log(hashids.encode([1, 2, 3])) // o2fXhV\n// strings containing integers are coerced to numbers:\nconsole.log(hashids.encode('1', '2', '3')) // o2fXhV\nconsole.log(hashids.encode(['1', '2', '3'])) // o2fXhV\n// BigInt support:\nconsole.log(hashids.encode([1n, 2n, 3n])) // o2fXhV\n// Hex notation BigInt:\nconsole.log(hashids.encode([0x1n, 0x2n, 0x3n])) // o2fXhV\n```\n\n**Make your ids unique:**\n\nPass a \"salt\" to make your ids unique (e.g. a project name):\n\n```javascript\nvar hashids = new Hashids('My Project')\nconsole.log(hashids.encode(1, 2, 3)) // Z4UrtW\n\nvar hashids = new Hashids('My Other Project')\nconsole.log(hashids.encode(1, 2, 3)) // gPUasb\n```\n\n**Use padding to make your ids longer:**\n\nNote that ids are only padded to fit **at least** a certain length. It doesn't mean that your ids will be _exactly_ that length.\n\n```javascript\nconst hashids = new Hashids() // no padding\nconsole.log(hashids.encode(1)) // jR\n\nconst hashids = new Hashids('', 10) // pad to length 10\nconsole.log(hashids.encode(1)) // VolejRejNm\n```\n\n**Pass a custom alphabet:**\n\n```javascript\nconst hashids = new Hashids('', 0, 'abcdefghijklmnopqrstuvwxyz') // all lowercase\nconsole.log(hashids.encode(1, 2, 3)) // mdfphx\n```\n\nDefault alphabet is `abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890`.\n\nSince v2.0 you can even use emojis as the alphabet.\n\n**Encode hex instead of numbers:**\n\nUseful if you want to encode numbers like [Mongo](https://www.mongodb.com/)'s ObjectIds.\n\nNote that there is _no_ limit on how large of a hex number you can pass.\n\n```javascript\nvar hashids = new Hashids()\n\nvar id = hashids.encodeHex('507f1f77bcf86cd799439011') // y42LW46J9luq3Xq9XMly\nvar hex = hashids.decodeHex(id) // 507f1f77bcf86cd799439011\n```\n\nPlease note that this is not the equivalent of:\n\n```javascript\nconst hashids = new Hashids()\n\nconst id = Hashids.encode(BigInt('0x507f1f77bcf86cd799439011')) // y8qpJL3ZgzJ8lWk4GEV\nconst hex = Hashids.decode(id)[0].toString(16) // 507f1f77bcf86cd799439011\n```\n\nThe difference between the two is that the built-in `encodeHex` will\nalways result in the same length, even if it contained leading zeros.\n\nFor example `hashids.encodeHex('00000000')` would encode to `qExOgK7` and decode back to `'00000000'` (length information is preserved).\n\n## Pitfalls\n\n1. When decoding, output is always an array of numbers (even if you encode only one number):\n\n   ```javascript\n   const hashids = new Hashids()\n\n   const id = hashids.encode(1)\n   console.log(hashids.decode(id)) // [1]\n   ```\n\n2. Encoding negative numbers is not supported.\n3. If you pass bogus input to `encode()`, an empty string will be returned:\n\n   ```javascript\n   const hashids = new Hashids()\n\n   const id = hashids.encode('123a')\n   console.log(id === '') // true\n   ```\n\n4. Do not use this library as a security tool and do not encode sensitive data. This is **not** an encryption library.\n\n## Randomness\n\nThe primary purpose of Hashids is to obfuscate ids. It's not meant or tested to be used as a security or compression tool. Having said that, this algorithm does try to make these ids random and unpredictable:\n\nNo repeating patterns showing there are 3 identical numbers in the id:\n\n```javascript\nconst hashids = new Hashids()\nconsole.log(hashids.encode(5, 5, 5)) // A6t1tQ\n```\n\nSame with incremented numbers:\n\n```javascript\nconst hashids = new Hashids()\n\nconsole.log(hashids.encode(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) // wpfLh9iwsqt0uyCEFjHM\n\nconsole.log(hashids.encode(1)) // jR\nconsole.log(hashids.encode(2)) // k5\nconsole.log(hashids.encode(3)) // l5\nconsole.log(hashids.encode(4)) // mO\nconsole.log(hashids.encode(5)) // nR\n```\n\n## Curses! #\\$%@\n\nThis code was written with the intent of placing created ids in visible places, like the URL. Therefore, by default the algorithm tries to avoid generating most common English curse words by generating ids that never have the following letters next to each other:\n\n    c, f, h, i, s, t, u\n\nYou may customize the chars that shouldn't be placed next to each other by providing a 4th argument to the Hashids constructor:\n\n```js\n// first 4 arguments will fallback to defaults (empty salt, no minimum length, default alphabet)\nconst hashids = new Hashids(undefined, undefined, undefined, 'zyxZYX')\n```\n\n## BigInt\n\nIf your environment supports `BigInt`, you can use the standard API\nto encode and decode them the same way as ordinary numbers.\n\nTrying to decode a `BigInt`-encoded hashid on an unsupported environment will throw an error.\n\n## License\n\nMIT License. See the [LICENSE](LICENSE) file.\nYou can use Hashids in open source projects and commercial products.\nDon't break the Internet. Kthxbye.\n\n[travis-url]: https://travis-ci.org/niieani/hashids.js\n[travis-image]: https://travis-ci.org/niieani/hashids.js.svg\n[coveralls-url]: https://coveralls.io/github/niieani/hashids.js\n[coveralls-image]: https://coveralls.io/repos/github/niieani/hashids.js/badge.svg\n[npm-downloads-image]: https://img.shields.io/npm/dm/hashids.svg?style=flat-square\n[npm-version-image]: https://img.shields.io/npm/v/hashids.svg\n[npm-url]: https://www.npmjs.com/package/hashids\n[license-url]: https://github.com/niieani/hashids.js/blob/master/LICENSE\n[license-image]: https://img.shields.io/packagist/l/hashids/hashids.svg?style=flat\n[chat-url]: https://gitter.im/hashids/hashids?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n[chat-image]: https://badges.gitter.im/Join%20Chat.svg\n","maintainers":[{"name":"ivan","email":"ivan@barreleye.com"},{"name":"niieani","email":"npm@invent.life"}],"time":{"modified":"2023-05-24T03:38:25.375Z","created":"2012-05-08T05:33:58.096Z","0.1.0":"2012-05-08T05:33:59.897Z","0.1.1":"2012-05-09T06:58:13.815Z","0.1.2":"2012-09-03T21:07:43.559Z","0.1.3":"2012-09-28T04:30:01.800Z","0.1.4":"2012-10-03T06:18:50.794Z","0.3.0":"2013-08-24T22:32:07.694Z","0.3.1":"2013-09-20T01:28:56.127Z","0.3.2":"2013-11-09T20:58:02.795Z","0.3.3":"2013-11-22T17:36:12.676Z","1.0.0":"2014-09-10T00:52:00.635Z","1.0.1":"2014-09-19T19:25:37.670Z","1.0.2":"2015-07-05T00:59:06.785Z","1.1.0":"2016-07-10T23:13:29.584Z","1.1.1":"2016-08-30T13:14:48.969Z","1.1.2":"2017-10-11T19:50:52.088Z","1.1.3":"2017-11-05T00:10:53.798Z","1.1.4":"2017-11-05T00:18:10.052Z","1.2.0":"2018-09-15T17:53:56.883Z","1.2.1":"2018-09-16T19:07:34.732Z","1.2.2":"2018-09-17T21:09:53.458Z","2.0.0-prerelease.2":"2019-08-15T20:57:23.698Z","2.0.0-prerelease.1":"2019-08-15T21:14:29.956Z","2.0.0-prerelease.3":"2019-08-15T22:26:53.062Z","2.0.0-prerelease.4":"2019-08-17T20:30:28.363Z","2.0.0":"2019-08-31T11:11:04.422Z","2.0.1":"2019-09-06T21:07:30.536Z","2.1.0":"2019-11-09T18:02:03.875Z","2.2.0":"2020-02-03T21:52:14.491Z","2.2.1":"2020-02-04T22:19:40.258Z","2.2.2":"2020-11-07T21:31:49.306Z","2.2.3":"2020-12-13T03:10:00.444Z","2.2.4":"2020-12-18T04:55:58.397Z","2.2.5":"2020-12-18T05:01:03.255Z","2.2.6":"2020-12-18T07:24:41.899Z","2.2.7":"2020-12-18T08:56:39.008Z","2.2.8":"2020-12-18T09:38:55.839Z","2.2.9":"2021-11-07T07:06:12.478Z","2.2.10":"2021-11-20T01:17:55.370Z","2.2.11":"2023-02-16T21:51:53.772Z","2.3.0":"2023-05-24T03:38:25.263Z"},"author":{"name":"hashids.org","email":"npm@invent.life","url":"https://github.com/hashids"},"repository":{"type":"git","url":"git+https://github.com/niieani/hashids.js.git"},"users":{"nkittie":true,"jamescostian":true,"rhrn":true,"chrisayn":true,"putna":true,"mkiser":true,"tomashanacek":true,"marekhrabe":true,"san4osq":true,"nathanhornby":true,"mgk":true,"acollins-ts":true,"hughker":true,"jsumners":true,"schwartzman":true,"hckhanh":true,"antixrist":true,"csbun":true,"mhaidarh":true,"lukaserat":true,"jacobmischka":true,"sudheerkovalam":true,"wenhsiaoyi":true,"kodekracker":true,"tangweikun":true,"aravindnc":true,"bluelovers":true,"hatchet":true,"alizurchik":true,"paraself":true,"ahmed-dinar":true,"stoneren":true,"heartnett":true,"rocket0191":true,"hoanganh25991":true,"dukewan":true,"thevikingcoder":true,"itonyyo":true,"undisclosed":true,"nickeljew":true,"nogirev":true,"hani":true,"sasquatch":true,"sn0wdr1am":true},"homepage":"http://hashids.org/javascript","keywords":["hashids","hashid","hash","ids","youtube","bitly","obfuscate","encode","decode","encrypt","decrypt"],"bugs":{"url":"https://github.com/niieani/hashids.js/issues"},"license":"MIT","readmeFilename":"README.md","contributors":[{"name":"Ivan Akimov","email":"ivan@barreleye.com","url":"https://twitter.com/IvanAkimov"},{"name":"Bazyli Brzóska","email":"npm@invent.life","url":"https://twitter.com/niieani"}]}